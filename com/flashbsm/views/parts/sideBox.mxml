<?xml version="1.0" encoding="utf-8"?>
<mx:VBox
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:settings="com.flashbsm.views.settings.types.*"
	creationComplete="initApp()">


	<mx:Script>
		<![CDATA[
		    import com.flashbsm.model.*;
		    import com.components.*;
			import flash.events.*;
			import com.custom.*;
			import com.flashbsm.events.*;
			import flash.utils.Timer;
			import flash.events.TimerEvent;
			import mx.effects.Effect;
			import mx.effects.Move;
			import flash.events.Event;
			
			private var changeSettings:communicate = new communicate();
			
			
			[Bindable]
			public var boxDownStyle:String = 'boxDown';
			
			[Bindable]
			public var boxStyle:String = 'box';
			
			[Bindable]
			public var boxOverStyle:String = 'boxOver';
			
			[Bindable]
			public var info:Object;
			
			//TODO : make a pluginChange event to do this
			
			public function initApp ():void
			{
				this.addEventListener( settingsEvent.SETTINGSCHANGE, dealWithEvent );
			}
			
			
			public function dealWithEvent(inEvent:settingsEvent):void
			{

				var outObject:Object = new Object;
				outObject.settingsEvent = inEvent;
				outObject.oldData = inEvent.oldData;

				var pluginName:String = fbsmModel.getInstance().everything.currentPlugin.Name;
				var settingName:String = inEvent.Name;
				
				changeSettings.outObject = outObject;
				changeSettings.hasParams = true;
				
				changeSettings.theType="pluginStatus";
				changeSettings.theParams = [inEvent.PluginNumber, inEvent.newData];
			    changeSettings.getInfo();
			    changeSettings.addEventListener("gotData", continueDealingWithEvent);
			}
			private function continueDealingWithEvent(inEvent:gotDataEvent):void
			{
			    var theSettingsEvent:settingsEvent = inEvent.outObject.settingsEvent;
				var newData:* = theSettingsEvent.newData;
				var oldData:* = theSettingsEvent.oldData;
				var settingType:String = theSettingsEvent.settingType;
				
				theSettingsEvent.Enabled = newData;
				if (inEvent.Result)
				{
					theSettingsEvent.settingFlag = "changed";

				}
				else
				{
					theSettingsEvent.settingFlag = "error";
					theSettingsEvent.Enabled = oldData;
				}
			}
			
			
			
			private function itemClick (event:Event):void
			{
			    dispatchEvent(new Event("itemClick"));
			}
			
		]]>

	</mx:Script>
	
	<mx:Metadata>
	    [Event(name="itemClick", type="flash.events.Event")] 
	</mx:Metadata>
	
	<mx:HBox id="theBox" width="100%" height="100%" click="{itemClick(event)}"
	
	    styleName="{info.Selected==false? boxStyle : boxDownStyle}"
	    mouseOver="{info.Selected==false? theBox.styleName = boxOverStyle : theBox.styleName = boxDownStyle}"
	    mouseOut="{info.Selected==false?  theBox.styleName = boxStyle     : theBox.styleName = boxDownStyle}"
	    
	    paddingTop="5" paddingBottom="5" paddingLeft="5" paddingRight="5"
	    
	    horizontalAlign="center" verticalAlign="middle">
		<mx:Text width="100%" height="100%" text="{info.ShortDesc}" styleName="boxText"  selectable="false"/>
		<settings:pluginCheckBox id="pcb" theLabel=" " theSetting="{info}" 
			creationComplete="{pcb.setUpEventListeners()}" newValue="{info.Enabled}"/>
	</mx:HBox>
	

</mx:VBox>

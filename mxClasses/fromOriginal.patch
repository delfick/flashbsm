diff -Naur Original/FP8/XMLNode.as Final/FP8/XMLNode.as
--- Original/FP8/XMLNode.as	2005-07-06 02:25:32.000000000 +0800
+++ Final/FP8/XMLNode.as	2008-01-06 05:12:23.000000000 +0900
@@ -15,16 +15,16 @@
 	var nodeValue:String;
 	var parentNode:XMLNode;
 	var previousSibling:XMLNode;
-		var localName:String; //Property containing 
-       var prefix:String; // 
-	 var namespaceURI:String; //
+	var localName:String; //Property containing 
+    var prefix:String; // 
+	var namespaceURI:String; //
 
 	function XMLNode(type:Number, value:String);
 
 	function appendChild(newChild:XMLNode):Void;
 	function cloneNode(deep:Boolean):XMLNode;
 	function hasChildNodes():Boolean;
-	function insertBefore(newChild:XMLNode,insertPoint:XMLNode):Void
+	function insertBefore(newChild:XMLNode,insertPoint:XMLNode):Void;
 	function removeNode():Void;
 	function toString():String;
 	function addTreeNode(arg1:Object, arg2:Object):XMLNode; //Tree mixin
@@ -38,6 +38,6 @@
 	function indexOf(node:XMLNode):Number; //Menu mixin
 	function removeMenuItem():XMLNode; //Menu mixin
 	function removeMenuItemAt(index:Number):XMLNode; //Menu mixin
-       function getPrefixForNamespace(nsURI:String):String //Function which 
-        function getNamespaceForPrefix(prefix:String):String 
+    function getPrefixForNamespace(nsURI:String):String; //Function which 
+    function getNamespaceForPrefix(prefix:String):String; 
 }
\ No newline at end of file
diff -Naur Original/mx/accessibility/ComboBoxAccImpl.as Final/mx/accessibility/ComboBoxAccImpl.as
--- Original/mx/accessibility/ComboBoxAccImpl.as	2003-08-20 05:30:04.000000000 +0800
+++ Final/mx/accessibility/ComboBoxAccImpl.as	2008-01-06 05:12:34.000000000 +0900
@@ -4,8 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.ComboBox;
 import mx.accessibility.ListAccImpl;
+import mx.controls.ComboBox;
 
 /**
 * This is the accessibility class for List. 
diff -Naur Original/mx/accessibility/LabelAccImpl.as Final/mx/accessibility/LabelAccImpl.as
--- Original/mx/accessibility/LabelAccImpl.as	2003-08-20 05:30:04.000000000 +0800
+++ Final/mx/accessibility/LabelAccImpl.as	2008-01-06 05:12:34.000000000 +0900
@@ -4,7 +4,6 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.accessibility.AccImpl;
 import mx.controls.Label;
 
 // accessibility implementation for the Label component
diff -Naur Original/mx/accessibility/ListAccImpl.as Final/mx/accessibility/ListAccImpl.as
--- Original/mx/accessibility/ListAccImpl.as	2003-07-08 16:01:04.000000000 +0800
+++ Final/mx/accessibility/ListAccImpl.as	2008-01-06 05:12:34.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
diff -Naur Original/mx/accessibility/WindowAccImpl.as Final/mx/accessibility/WindowAccImpl.as
--- Original/mx/accessibility/WindowAccImpl.as	2003-08-20 05:30:04.000000000 +0800
+++ Final/mx/accessibility/WindowAccImpl.as	2008-01-06 05:12:35.000000000 +0900
@@ -135,7 +135,7 @@
 
 			case 2:
 				retVal = "";
-				break			
+				break;		
 
 			default:
 				retVal = this.master.title;
diff -Naur Original/mx/behaviors/DepthControl.as Final/mx/behaviors/DepthControl.as
--- Original/mx/behaviors/DepthControl.as	2003-06-27 05:28:12.000000000 +0800
+++ Final/mx/behaviors/DepthControl.as	2008-01-06 05:12:35.000000000 +0900
@@ -69,7 +69,8 @@
 	
 	static private function getInstanceLowerThan(target:MovieClip):MovieClip {
 		var dOrder = trackDepths(target._parent);
-		for (var i=0; i<dOrder.length; i++) {
+		var i;
+		for (i=0; i<dOrder.length; i++) {
 			if (dOrder[i].mc==target) {
 				break;
 			}
@@ -79,7 +80,8 @@
 	
 	static private function getInstanceHigherThan(target:MovieClip):MovieClip {
 		var dOrder = trackDepths(target._parent);
-		for (var i=0; i<dOrder.length; i++) {
+		var i;
+		for (i=0; i<dOrder.length; i++) {
 			if (dOrder[i].mc==target) {
 				break;
 			}
diff -Naur Original/mx/containers/Accordion.as Final/mx/containers/Accordion.as
--- Original/mx/containers/Accordion.as	2005-07-14 04:06:50.000000000 +0800
+++ Final/mx/containers/Accordion.as	2008-01-06 05:12:35.000000000 +0900
@@ -8,7 +8,6 @@
 import mx.containers.accordionclasses.AccordionHeader;
 import mx.controls.SimpleButton;
 import mx.core.UIComponent;
-import mx.core.UIObject;
 import mx.core.View;
 import mx.effects.Tween;
 
@@ -46,7 +45,7 @@
 	static var symbolOwner:Object = Accordion;
 	var className:String = "Accordion";
 
-	#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 	////////////////////////////////////////////////////////////////////////////////
 	//
@@ -636,7 +635,10 @@
 		header_mc.visible = false;
 		header_mc.label = content_mc.label;
 		header_mc.tabEnabled = false;
-		header_mc.clickHandler = function() { _parent.headerPress(this) };
+		header_mc.clickHandler = function() 
+		{ 
+			this._parent.headerPress(this); 
+		};
 		header_mc.setSize(header_mc.width, getStyle("headerHeight"));
 		header_mc.content_mc = content_mc;
 		if (content_mc.icon != undefined)
@@ -861,4 +863,6 @@
 		// Dispatch a "valueChanged" event.
 		dispatchValueChangedEvent(selectedIndex);
 	}
+	
+	private static var AccordionHeaderSkinDependency = mx.skins.halo.AccordionHeaderSkin;
 }
\ No newline at end of file
diff -Naur Original/mx/containers/accordionclasses/AccordionHeader.as Final/mx/containers/accordionclasses/AccordionHeader.as
--- Original/mx/containers/accordionclasses/AccordionHeader.as	2003-08-23 09:33:18.000000000 +0800
+++ Final/mx/containers/accordionclasses/AccordionHeader.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -12,8 +12,8 @@
 */
 
 import mx.controls.Button;
-import mx.core.UIObject;
-import mx.skins.RectBorder;
+//import mx.core.UIObject;
+//import mx.skins.RectBorder;
 
 class mx.containers.accordionclasses.AccordionHeader extends Button 
 {
@@ -39,7 +39,7 @@
 	// Disable skins
 	var falseUpSkin:String  = "AccordionHeaderSkin";
 	var falseDownSkin:String  = "AccordionHeaderSkin";
-	var falseOverSkin:String = "AccordionHeaderSkin"
+	var falseOverSkin:String = "AccordionHeaderSkin";
 	var falseDisabledSkin:String = "AccordionHeaderSkin";
 	var trueUpSkin:String = "AccordionHeaderSkin";
 	var trueDownSkin:String = "AccordionHeaderSkin";
@@ -62,7 +62,7 @@
 	{
 	}
 
-	#include "../../core/ComponentVersion.as"
+	//#include "../../core/ComponentVersion.as"
 	
 	function onRollOver():Void
 	{
diff -Naur Original/mx/containers/ScrollPane.as Final/mx/containers/ScrollPane.as
--- Original/mx/containers/ScrollPane.as	2005-06-26 08:46:42.000000000 +0800
+++ Final/mx/containers/ScrollPane.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,8 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.core.UIObject;
 import mx.core.ScrollView;
+import mx.core.UIObject;
 
 /**
 * @tiptext complete event
@@ -53,8 +53,7 @@
 	*/
 	var className:String = "ScrollPane";
 
-// Version string
-#include "../core/ComponentVersion.as"
+// Version string//#include "../core/ComponentVersion.as"
 
 	var __hScrollPolicy:String = "auto";
 	var __scrollDrag:Boolean = false;
@@ -292,12 +291,12 @@
 		if (__scrollDrag) {
 			spContentHolder.useHandCursor = true;
 			spContentHolder.onPress = function(){
-				_parent.startDragLoop();
-			}
+				this._parent.startDragLoop();
+			};
 			spContentHolder.tabEnabled = false;
 			spContentHolder.onRelease = spContentHolder.onReleaseOutside = function()	{
-				delete onMouseMove;
-			}
+				delete this.onMouseMove;
+			};
 			__scrollDrag = true;
 		}
 		else {
@@ -389,23 +388,23 @@
 		spContentHolder.lastY = spContentHolder._ymouse;
 		spContentHolder.onMouseMove = function() 
 		{
-			var scrollXMove:Number = lastX-_xmouse;
-			var scrollYMove:Number = lastY-_ymouse;
-			scrollXMove += _parent.hPosition;
-			scrollYMove += _parent.vPosition;
- 			var vm = _parent.getViewMetrics();
- 			var vs = _parent.__height - vm.top - vm.bottom;
- 			var hs = _parent.__width - vm.left - vm.right;
- 			_parent.__hPosition = Math.max(0, Math.min( scrollXMove, _width - hs));
- 			_parent.__vPosition = Math.max(0, Math.min( scrollYMove, _height - vs));
- 			_parent.hScroller.scrollPosition = _parent.__hPosition;
- 			_x = -_parent.hPosition; // - bounds.xMin;
- 			_parent.vScroller.scrollPosition = _parent.__vPosition;
- 			_y = -_parent.vPosition; // - bounds.yMin;
+			var scrollXMove:Number = this.lastX - this._xmouse;
+			var scrollYMove:Number = this.lastY - this._ymouse;
+			scrollXMove += this._parent.hPosition;
+			scrollYMove += this._parent.vPosition;
+ 			var vm = this._parent.getViewMetrics();
+ 			var vs = this._parent.__height - vm.top - vm.bottom;
+ 			var hs = this._parent.__width - vm.left - vm.right;
+ 			this._parent.__hPosition = Math.max(0, Math.min( scrollXMove, this._width - hs));
+ 			this._parent.__vPosition = Math.max(0, Math.min( scrollYMove, this._height - vs));
+ 			this._parent.hScroller.scrollPosition = this._parent.__hPosition;
+ 			this._x = -this._parent.hPosition; // - bounds.xMin;
+ 			this._parent.vScroller.scrollPosition = this._parent.__vPosition;
+ 			this._y = -this._parent.vPosition; // - bounds.yMin;
 			
 			// emit scroll event in case of Dragging as well
 			super.dispatchEvent({type:"scroll"});
-		}
+		};
 	}
 	
 	function dispatchEvent(o:Object):Void
@@ -481,4 +480,5 @@
 * @helpid 3430
 */
 	var vPosition:Number;
+	
 }	
diff -Naur Original/mx/containers/Window.as Final/mx/containers/Window.as
--- Original/mx/containers/Window.as	2005-07-14 04:06:50.000000000 +0800
+++ Final/mx/containers/Window.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,11 +5,10 @@
 //this product.
 //****************************************************************************
 
-import mx.core.ScrollView;
 import mx.controls.SimpleButton;
-import mx.skins.SkinElement;
+import mx.core.ScrollView;
 import mx.core.UIObject;
-import mx.managers.DepthManager
+import mx.managers.DepthManager;
 
 /**
 * @tiptext click event
@@ -46,7 +45,7 @@
 	static var symbolOwner:Object = Window;
 
 	// Version string
-#include "../core/ComponentVersion.as"
+//#include "../core/ComponentVersion.as"
 
 /**
 * name of this class
@@ -135,7 +134,7 @@
 * @helpid 3992
 */
 	[Inspectable(defaultValue="", verbose=1, category="Skins")]
-	var titleStyleDeclaration:String;
+	var titleStyleDeclaration:String = "windowStyles";
 
 /**
 * true if you want the close button displayed
@@ -306,15 +305,15 @@
 		back_mc.useHandCursor = false;
 		back_mc.onPress = function()
 		{
-			if (_parent.enabled)
-				_parent.startDragging();
-		}
+			if (this._parent.enabled)
+				this._parent.startDragging();
+		};
 
 		back_mc.onDragOut = back_mc.onRollOut = back_mc.onReleaseOutside = back_mc.onRelease = function()
 		{
-			var p:MovieClip = _parent;
+			var p:MovieClip = this._parent;
 			p.stopDragging();
-		}
+		};
 
 
 		back_mc.tabEnabled = false;
@@ -326,8 +325,6 @@
 			var o:UIObject = back_mc.title_mc;
 			if (titleStyleDeclaration == undefined)
 			{
-				o.fontSize = 10;
-				o.color = 0xFFFFFF;
 				o.fontWeight = "bold";
 			}
 			else
@@ -336,8 +333,9 @@
 			}
 			o.invalidateStyle();
 		}
-		else
+		else 
 			back_mc.title_mc.text = title;
+		
 		var initObj:Object = new Object();
 		initObj.falseUpSkin = skinCloseUp;
 		initObj.falseOverSkin = skinCloseOver;
@@ -452,7 +450,9 @@
 		var y:Number = m.top;
 		// move the caption background into place and stretch to the right edge
 		back_mc.move(x, y);
-		back_mc.back_mc.setSize(width - x - m.right, back_mc.height);
+		back_mc.back_mc._width = width - x - m.right;
+		back_mc.back_mc._height = back_mc.height;
+		
 		// set the form below the caption
 		_child0.move(x, y + back_mc.height);
 
diff -Naur Original/mx/controls/Alert.as Final/mx/controls/Alert.as
--- Original/mx/controls/Alert.as	2005-07-19 17:10:56.000000000 +0800
+++ Final/mx/controls/Alert.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,9 +5,9 @@
 //this product.
 //****************************************************************************
 import mx.containers.Window;
-import mx.managers.SystemManager;
-import mx.managers.PopUpManager;
 import mx.controls.alertClasses.AlertForm;
+import mx.managers.PopUpManager;
+import mx.managers.SystemManager;
 
 [RequiresDataBinding(true)]
 [IconFile("Alert.png")]
@@ -25,7 +25,7 @@
 class mx.controls.Alert extends Window
 {
 	static var symbolOwner:Object = Window;
-#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 /**
 * width of Alert buttons 
 *
@@ -164,7 +164,7 @@
 		
 		var o = new Object();
 		var modal = (flags & Alert.NONMODAL) ? false : true;
-		if (parent == undefined){parent = o.parent = _root}else{o.parent = parent};
+		if (parent == undefined){parent = o.parent = _root;}else{o.parent = parent;};
 		o.okButton = (flags &  Alert.OK) ? true : false;
 		o.cancelButton = (flags & Alert.CANCEL) ? true : false;
 		o.yesButton = (flags &  Alert.YES) ? true : false;
@@ -297,8 +297,8 @@
 		{
 			var s:Object = _child0.getSize();
 			//prevent an Alert that is placed on stage from appearing really small.
-			if (isNaN(s.width) || s.width < 20 ){s.width = 96};
-			if (isNaN(s.height) || s.height < 20 ){s.height = 66};
+			if (isNaN(s.width) || s.width < 20 ){s.width = 96;};
+			if (isNaN(s.height) || s.height < 20 ){s.height = 66;};
 			
 			var m:Object = border_mc.borderMetrics;
 			if (!allowSize)
@@ -325,4 +325,5 @@
 		initializing = allowSize = true;
 		invalidate();
 	}
+	
 }
diff -Naur Original/mx/controls/alertClasses/AlertForm.as Final/mx/controls/alertClasses/AlertForm.as
--- Original/mx/controls/alertClasses/AlertForm.as	2004-03-23 10:27:28.000000000 +0800
+++ Final/mx/controls/alertClasses/AlertForm.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,13 +5,13 @@
 //this product.
 //****************************************************************************
 
-import mx.core.UIObject;
-import mx.skins.SkinElement;
-import mx.core.UIComponent;
-import mx.controls.TextArea;
+//import mx.core.UIObject;
 import mx.controls.Alert;
 import mx.controls.Button;
+import mx.controls.TextArea;
+import mx.core.UIComponent;
 import mx.managers.DepthManager;
+import mx.skins.SkinElement;
 
 /**
 * form within the alert window containing 
@@ -99,8 +99,8 @@
 		}
 		text_mc.tabEnabled = false;
 		text_mc.tabChildren = false;
-		text_mc.hScrollPolicy = "off"
-		text_mc.vScrollPolicy = "off"
+		text_mc.hScrollPolicy = "off";
+		text_mc.vScrollPolicy = "off";
 		text_mc.label.selectable = false;
 		
  		// a rather heavy weight way of computing the height of window we need to contain our text.
@@ -183,6 +183,7 @@
  		extent = tf.getTextExtent2(_parent.text);
  
  		// stick the text in the measuring TextField and let it flow baby
+ 		textMeasure_mc.embedFonts = tf["embedFonts"];
  		textMeasure_mc._width = 2*s.width;
  		textMeasure_mc.setNewTextFormat(text_mc._getTextFormat());
  		textMeasure_mc.text = _parent.text;
@@ -243,7 +244,7 @@
 
 //center the buttons
 
-		x = (width - x) / 2
+		x = (width - x) / 2;
 		for (var i:Number = 0; i < buttons.length; i++)
 		{
 			buttons[i].move(x, y);
@@ -254,7 +255,7 @@
 //pixel spacing around text
 
 		y -= 8;
-		x =  Math.max((width - extent.width - 4) / 2, 8)
+		x =  Math.max((width - extent.width - 4) / 2, 8);
 		if (icon_mc != undefined)
 		{
 
diff -Naur Original/mx/controls/Button.as Final/mx/controls/Button.as
--- Original/mx/controls/Button.as	2004-03-23 10:27:28.000000000 +0800
+++ Final/mx/controls/Button.as	2008-01-06 05:12:35.000000000 +0900
@@ -6,7 +6,7 @@
 //****************************************************************************
 import mx.controls.SimpleButton;
 import mx.core.UIObject;
-import mx.core.UIComponent;
+//import mx.core.UIComponent;
 
 /**
 * @tiptext click event
@@ -44,7 +44,7 @@
 	{
 	}
 
-	#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 /**
 * number used to offset the label and/or icon when button is pressed
@@ -76,7 +76,7 @@
 */
 	var falseUpSkin:String  = "ButtonSkin";
 	var falseDownSkin:String  = "ButtonSkin";
-	var falseOverSkin:String = "ButtonSkin"
+	var falseOverSkin:String = "ButtonSkin";
 	var falseDisabledSkin:String = "ButtonSkin";
 	var trueUpSkin:String = "ButtonSkin";
 	var trueDownSkin:String = "ButtonSkin";
@@ -92,7 +92,6 @@
 	var trueOverIcon:String = "";
 	var trueDisabledIcon:String = "";
 
-
 /**
 * @private
 * list of clip parameters to check at init
@@ -243,7 +242,7 @@
 * @tiptext Gets or sets the label placement relative to the icon
 * @helpid 3044
 */
-	[Inspectable(enumeration="left,right,top,bottom"defaultValue="right")]
+	[Inspectable(enumeration="left,right,top,bottom", defaultValue="right")]
 	function set labelPlacement (val:String)
 	{
 		__labelPlacement = val;
@@ -285,19 +284,20 @@
 */
 	function getBtnOffset(Void):Number
 	{
+		var n;
 		if(getState())
 		{
-			var n = btnOffset;
+			n = btnOffset;
 		}
 		else
 		{
 			if(phase == "down")
 			{
-				var n = btnOffset;
+				n = btnOffset;
 			}
 			else
 			{
-				var n = 0;
+				n = 0;
 			}
 		}
 		return n;
@@ -327,7 +327,6 @@
 		var textW = lp.textWidth;
 		var textH = lp.textHeight;
 
-
 		var viewW = __width-borderW-borderW;
 		var viewH = __height-borderW-borderW;
 
@@ -341,7 +340,7 @@
 			if (lp!=undefined)
 			{
 				lp._width = labelW = Math.min(viewW-iconW, textW+5);
-				lp._height =  labelH = Math.min(viewH, textH+5);
+				lp._height = labelH = Math.min(viewH, textH+5);
 			}
 
 			if (val == "right")
@@ -351,11 +350,9 @@
 					labelX += (viewW - labelW - iconW)/2;
 				}
 				ic._x =  labelX - iconW;
-
 			}
 			else
 			{
-
 				labelX = viewW - labelW - iconW;
 				if (centerContent) {
 					labelX = labelX / 2;
@@ -366,13 +363,11 @@
 			ic._y  = labelY = 0;
 			if (centerContent) {
 				ic._y  = (viewH - iconH )/2;
-				labelY = (viewH - labelH )/2
+				labelY = (viewH - labelH )/2;
 			}
 
 			if (!centerContent)
 				ic._y += Math.max(0, (labelH-iconH)/2);
-
-
 		}
 		else
 		{
@@ -381,7 +376,6 @@
 				lp._height =  labelH = Math.min(viewH-iconH, textH+5);
 			}
 
-
 			labelX  = (viewW - labelW )/2;
 
 			ic._x  = (viewW - iconW )/2;
@@ -393,14 +387,12 @@
 					labelY = labelY / 2;
 				}
 				ic._y = labelY + labelH;
-
 			}
 			else
 			{
 				labelY = iconH;
 				if (centerContent) {
 					labelY += (viewH - labelH - iconH)/2;
-
 				}
 				ic._y = labelY - iconH;
 			}
@@ -411,7 +403,6 @@
 		lp._y = labelY + buff;
 		ic._x += buff;
 		ic._y += buff;
-
 	}
 
 /**
@@ -550,5 +541,5 @@
 	[Bindable]
 	[ChangeEvent("click")]
 	var _inherited_selected : Boolean;
-
+	
 }
diff -Naur Original/mx/controls/CalendarLayout.as Final/mx/controls/CalendarLayout.as
--- Original/mx/controls/CalendarLayout.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/CalendarLayout.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,9 +5,7 @@
 //this product.
 //****************************************************************************
 
-import mx.core.UIObject;
 import mx.core.UIComponent;
-import mx.styles.StyleManager;
 import mx.skins.ColoredSkinElement;
 
 
@@ -62,7 +60,7 @@
 
 
 	//scroll details
-	var nextMonth:String
+	var nextMonth:String;
 	var previousMonth:String;
 	var nextYear:String;
 	var previousYear:String;
@@ -117,13 +115,13 @@
 
 	//default layout set
 	//maintaining original values for layout
-	var __defaultCellHeight = __cellHeight;
-	var __defaultCellWidth = __cellWidth;
-	var __defaultColMargin = __colMargin;
-	var __defaultLeftMargin = __leftMargin;
-	var __defaultRightMargin = __rightMargin;
-	var __defaultDayToDateMargin = __dayToDateMargin;
-	var __defaultDateMargin = __dateMargin;
+	var __defaultCellHeight;
+	var __defaultCellWidth;
+	var __defaultColMargin;
+	var __defaultLeftMargin;
+	var __defaultRightMargin;
+	var __defaultDayToDateMargin;
+	var __defaultDateMargin;
 
 	var dayBlock0label0:MovieClip;
 	var dayBlock6label0:MovieClip;
@@ -139,6 +137,13 @@
 
 	function CalendarLayout()
 	{
+		__defaultCellHeight = __cellHeight;
+		__defaultCellWidth = __cellWidth;
+		__defaultColMargin = __colMargin;
+		__defaultLeftMargin = __leftMargin;
+		__defaultRightMargin = __rightMargin;
+		__defaultDayToDateMargin = __dayToDateMargin;
+		__defaultDateMargin = __dateMargin;
 	}
 
 	////////////////////////////////////////////////////////////////////////////
@@ -217,7 +222,7 @@
 		var blockX:Number = __leftMargin;
 
 		var selectIndicator:MovieClip = createEmptyMovieClip("selectedIndicator",selectedDateDepth);
-		selectIndicator.lineStyle(0,0x009900,30)
+		selectIndicator.lineStyle(0,0x009900,30);
 		selectIndicator.beginFill(0x00FF33, 100);
 		selectIndicator.lineTo(__cellWidth,0);
 		selectIndicator.lineTo(__cellWidth,__cellHeight);
@@ -229,7 +234,7 @@
 		selectIndicator._visible = false;
 
 		var rollIndicator:MovieClip = createEmptyMovieClip("rollOverIndicator",rollOverDateDepth);
-		rollIndicator.lineStyle(0,0x009900,20)
+		rollIndicator.lineStyle(0,0x009900,20);
 		rollIndicator.beginFill(0x00ff00, 100);
 		rollIndicator.lineTo(__cellWidth,0);
 		rollIndicator.lineTo(__cellWidth,__cellHeight);
@@ -350,7 +355,7 @@
 			return;
 		var oldCell:TextField;
 		var rowIndex:Number = Math.floor(_ymouse / (__cellHeight+__dateMargin));
-		var colIndex:Number = Math.floor(_xmouse / (__cellWidth+__colMargin))
+		var colIndex:Number = Math.floor(_xmouse / (__cellWidth+__colMargin));
 		selCell = this["dayBlock"+colIndex+"label"+rowIndex];
 
 		// If it is disabled, we're done.
@@ -398,7 +403,7 @@
 		if(rowIndex <= 0)
 			return;
 
-		var colIndex:Number = Math.floor(_xmouse / (__cellWidth+__colMargin))
+		var colIndex:Number = Math.floor(_xmouse / (__cellWidth+__colMargin));
 
 		selCell = this["dayBlock"+colIndex+"label"+rowIndex];
 		// If it is disabled, we're done.
@@ -842,13 +847,13 @@
 
 			if (__disabledDays.length>0) // g/s bug !!!
 			{
-				for (var i = 0; i < __disabledDays.length; i++)
+				for (i = 0; i < __disabledDays.length; i++)
 				{
 					if(__disabledDays[i] >=0 && __disabledDays[i] <=6 && !isNaN(__disabledDays[i]))
 					{
 						columnIndex = ((7+__disabledDays[i] -__firstDayOfWeek)%7);
 
-						for (var rowIndex:Number = 1; rowIndex < 7; rowIndex++)
+						for (rowIndex = 1; rowIndex < 7; rowIndex++)
 						{
 							// Disable the day.
 							this["dayBlock"+columnIndex+"label0"].disabledArray[rowIndex] = true;
@@ -868,7 +873,7 @@
 		checkSelectedIndicator(displayDateColIndex, currentMonthContainsSelectedDate);
 		__displayedMonth = newMonth;
 		__displayedYear = newYear;
-		displayDate = new Date(newYear, newMonth, 1)
+		displayDate = new Date(newYear, newMonth, 1);
 		owner.dateDisplay.text = owner.__monthNames[displayDate.getMonth()]+" "+displayDate.getFullYear();
 		todayIndicator._alpha = (todaysLabelReference != undefined) ? ((todaysLabelReference.enabled == false) ? 30 : 100) : 100;
 		invalidate();
diff -Naur Original/mx/controls/cells/CheckCellRenderer.as Final/mx/controls/cells/CheckCellRenderer.as
--- Original/mx/controls/cells/CheckCellRenderer.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/cells/CheckCellRenderer.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,8 +5,7 @@
 //this product.
 //****************************************************************************
 
-import mx.core.UIComponent
-import mx.controls.CheckBox
+import mx.core.UIComponent;
 
 class mx.controls.cells.CheckCellRenderer extends UIComponent
 {
diff -Naur Original/mx/controls/CheckBox.as Final/mx/controls/CheckBox.as
--- Original/mx/controls/CheckBox.as	2003-08-13 09:06:22.000000000 +0800
+++ Final/mx/controls/CheckBox.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,8 +5,8 @@
 //this product.
 //****************************************************************************
 
-import mx.core.UIObject;
 import mx.controls.Button;
+import mx.core.UIObject;
 
 /**
 * @tiptext click event
@@ -24,7 +24,8 @@
 * @tiptext CheckBox provides the ability to check or uncheck an option.  Extends Button
 * @helpid 3049
 */ 
-class mx.controls.CheckBox extends Button{
+class mx.controls.CheckBox extends Button
+{
 	
 	function CheckBox ()
 	{
@@ -39,7 +40,7 @@
 * Class used in createClassObject
 */	
 	static var symbolOwner:Object = mx.controls.CheckBox;
-	#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 /**
 * @private
 * className for object
diff -Naur Original/mx/controls/ComboBase.as Final/mx/controls/ComboBase.as
--- Original/mx/controls/ComboBase.as	2004-03-26 21:00:14.000000000 +0800
+++ Final/mx/controls/ComboBase.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,12 +5,11 @@
 //this product.
 //****************************************************************************
 
+import mx.controls.listclasses.DataSelector;
 import mx.controls.SimpleButton;
 import mx.controls.TextInput;
-import mx.skins.RectBorder;
 import mx.core.UIComponent;
-import mx.controls.listclasses.DataProvider;
-import mx.controls.listclasses.DataSelector;
+import mx.skins.RectBorder;
 
 /*
 		ComboBase
@@ -47,15 +46,15 @@
 	//-- Initialization ----------------------------------------
 	static var symbolName:String = "ComboBase";
 	static var symbolOwner:Object = ComboBase;
-#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 	var	_editable:Boolean = false;
 
-	var	downArrowUpName:String = "ScrollDownArrowUp";
-	var	downArrowDownName:String = "ScrollDownArrowDown";
-	var	downArrowOverName:String = "ScrollDownArrowOver";
-	var	downArrowDisabledName:String = "ScrollDownArrowDisabled";
-	var 	wrapDownArrowButton:Boolean = true;
+	var	downArrowUpName:String = "ComboDownArrowUp";
+	var	downArrowDownName:String = "ComboDownArrowDown";
+	var	downArrowOverName:String = "ComboDownArrowOver";
+	var	downArrowDisabledName:String = "ComboDownArrowDisabled";
+	var wrapDownArrowButton:Boolean = false;
 
 	var	boundingBox_mc:Object;
 	var	downArrow_mc:Object;
@@ -256,31 +255,31 @@
 			downArrow_mc.onPressWas = downArrow_mc.onPress;
 			downArrow_mc.onPress = function()
 			{
-				trackAsMenuWas = trackAsMenu;
-				trackAsMenu = true;
+				this.trackAsMenuWas = this.trackAsMenu;
+				this.trackAsMenu = true;
 
-				if (!_editable)
-					_parent.text_mc.trackAsMenu = trackAsMenu;
+				if (!this._editable)
+					this._parent.text_mc.trackAsMenu = this.trackAsMenu;
 
 				this.onPressWas();
-			}
+			};
 			downArrow_mc.onDragOutWas = downArrow_mc.onDragOut;
 			downArrow_mc.onDragOut = function()
 			{
-				trackAsMenuWas = trackAsMenu;
-				trackAsMenu = false;
-				if (!_editable)
-					_parent.text_mc.trackAsMenu = trackAsMenu;
+				this.trackAsMenuWas = this.trackAsMenu;
+				this.trackAsMenu = false;
+				if (!this._editable)
+					this._parent.text_mc.trackAsMenu = this.trackAsMenu;
 				this.onDragOutWas();
-			}
+			};
 			downArrow_mc.onDragOverWas = downArrow_mc.onDragOver;
 			downArrow_mc.onDragOver = function()
 			{
-				trackAsMenu = trackAsMenuWas;
-				if (!_editable)
-					_parent.text_mc.trackAsMenu = trackAsMenu;
+				this.trackAsMenu = this.trackAsMenuWas;
+				if (!this._editable)
+					this._parent.text_mc.trackAsMenu = this.trackAsMenu;
 				this.onDragOverWas();
-			}
+			};
 		}
 
 		if (this.border_mc == undefined)
@@ -305,8 +304,8 @@
 			text_mc.onSetFocus = function()
 			{
 				this.oldOnSetFocus();
-				_parent.onSetFocus();
-			}
+				this._parent.onSetFocus();
+			};
 
 			// Don't show ESC characters in the text field.
 			text_mc.restrict = "^\u001b";
@@ -315,12 +314,12 @@
 			text_mc.onKillFocus = function(n)
 			{
 				this.oldOnKillFocus(n);
-				_parent.onKillFocus(n);
-			}
+				this._parent.onKillFocus(n);
+			};
 			text_mc.drawFocus = function(b)
 			{
-				_parent.drawFocus(b);
-			}
+				this._parent.drawFocus(b);
+			};
 			delete text_mc.borderStyle;	// this seems to be necessary in order to have text_mc inherit this borderStyle.
 		}
 		focusTextField = text_mc;
@@ -412,26 +411,26 @@
 		{
 			// Trap all mouse actions on the textfield and feed them to the button
 			text_mc.onPress = function () {
-				_parent.downArrow_mc.onPress();
-			}
+				this._parent.downArrow_mc.onPress();
+			};
 			text_mc.onRelease = function() {
-				_parent.downArrow_mc.onRelease();
-			}
+				this._parent.downArrow_mc.onRelease();
+			};
 			text_mc.onReleaseOutside = function() {
-				_parent.downArrow_mc.onReleaseOutside();
-			}
+				this._parent.downArrow_mc.onReleaseOutside();
+			};
 			text_mc.onDragOut = function() {
-				_parent.downArrow_mc.onDragOut();
-			}
+				this._parent.downArrow_mc.onDragOut();
+			};
 			text_mc.onDragOver = function() {
-				_parent.downArrow_mc.onDragOver();
-			}
+				this._parent.downArrow_mc.onDragOver();
+			};
 			text_mc.onRollOver = function() {
-				_parent.downArrow_mc.onRollOver();
-			}
+				this._parent.downArrow_mc.onRollOver();
+			};
 			text_mc.onRollOut = function() {
-				_parent.downArrow_mc.onRollOut();
-			}
+				this._parent.downArrow_mc.onRollOut();
+			};
 
 			text_mc.useHandCursor = false;
 		}
diff -Naur Original/mx/controls/ComboBox.as Final/mx/controls/ComboBox.as
--- Original/mx/controls/ComboBox.as	2005-07-28 10:54:24.000000000 +0800
+++ Final/mx/controls/ComboBox.as	2008-01-06 05:12:35.000000000 +0900
@@ -65,7 +65,7 @@
 	//-- Initialization ----------------------------------------
 	static var symbolName:String = "ComboBox";
 	static var symbolOwner:Object = ComboBox;
-#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 	var	clipParameters:Object = { labels:1, data:1, editable: 1, rowCount: 1, dropdownWidth: 1};
 	static var mergedClipParameters:Boolean = UIObject.mergeClipParameters(ComboBox.prototype.clipParameters, ComboBase.prototype.clipParameters);
@@ -108,7 +108,7 @@
 	[ChangeEvent("change")]
 	var _inherited_value : String;
 
-	var   isPressed : Boolean;
+	var isPressed : Boolean;
 
 	// used by button events
 	var owner:Object; 
@@ -202,7 +202,7 @@
 			__dropdown.resizeHandler = _resizeHandler;
 			__dropdown.mouseDownOutsideHandler = function(eventObj)
 			{
- 				var o = this.owner;
+ 				o = this.owner;
  				var pt = new Object();
  				pt.x = o._root._xmouse;
  				pt.y = o._root._ymouse;
@@ -210,14 +210,14 @@
  				if( o.hitTest(pt.x, pt.y, false) ) {
 					// do nothing
 				}
-				else if (!wrapDownArrowButton && this.owner.downArrow_mc.hitTest(_root._xmouse, _root._ymouse, false)) {
+				else if (!this.wrapDownArrowButton && this.owner.downArrow_mc.hitTest(_root._xmouse, _root._ymouse, false)) {
 					// do nothing
 				}
 				else {
  					o.displayDropdown(false);
 				}
-			}
-			__dropdown.onTweenUpdate = function(v) { _y = v; };
+			};
+			__dropdown.onTweenUpdate = function(v) { this._y = v; };
 			__dropdown.setSize( __dropdownWidth, __dropdown.height );
 
 			// Create the mask that keeps the dropdown listbox only visible below the textfield.
@@ -766,6 +766,7 @@
  			
  			dispatchEvent(eventObj);
  		}
- 		
  	}
+ 	
+ 	private static var ButtonDependency = mx.controls.Button;
 }
diff -Naur Original/mx/controls/CustomButton.as Final/mx/controls/CustomButton.as
--- Original/mx/controls/CustomButton.as	2003-07-08 16:01:04.000000000 +0800
+++ Final/mx/controls/CustomButton.as	2008-01-06 05:12:35.000000000 +0900
@@ -19,7 +19,7 @@
 {
 
 	// Version string
-#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 /**
 * name of this class
@@ -52,173 +52,201 @@
 * @tiptext
 * @helpid 3083
 */
-	var falseUpSkinL = "F3PieceLeft";
+	var falseUpSkinL;
 /**
 * symbol name of skin element for the middle piece in the up state
 *
 * @tiptext
 * @helpid 3084
 */
-	var falseUpSkinM = "F3PieceMiddle";
+	var falseUpSkinM;
 /**
 * symbol name of skin element for the right end cap in the up state
 *
 * @tiptext
 * @helpid 3085
 */
-	var falseUpSkinR = "F3PieceRight";
+	var falseUpSkinR;
 /**
 * symbol name of skin element for the left end cap in the down state
 *
 * @tiptext
 * @helpid 3086
 */
-	var falseDownSkinL = "F3PieceLeftDown";
+	var falseDownSkinL;
 /**
 * symbol name of skin element for the middle piece in the down state
 *
 * @tiptext
 * @helpid 3087
 */
-	var falseDownSkinM = "F3PieceMiddleDown";
+	var falseDownSkinM;
 /**
 * symbol name of skin element for the right end cap in the down state
 *
 * @tiptext
 * @helpid 3088
 */
-	var falseDownSkinR = "F3PieceRightDown";
+	var falseDownSkinR;
 /**
 * symbol name of skin element for the left end cap in the over state
 *
 * @tiptext
 * @helpid 3089
 */
-	var falseOverSkinL = "F3PieceLeftOver";
+	var falseOverSkinL;
 /**
 * symbol name of skin element for the middle piece in the over state
 *
 * @tiptext
 * @helpid 3090
 */
-	var falseOverSkinM = "F3PieceMiddleOver";
+	var falseOverSkinM;
 /**
 * symbol name of skin element for the right end cap in the over state
 *
 * @tiptext
 * @helpid 3091
 */
-	var falseOverSkinR = "F3PieceRightOver";
+	var falseOverSkinR;
 /**
 * symbol name of skin element for the left end cap in the selected up state
 *
 * @tiptext
 * @helpid 3092
 */
-	var trueUpSkinL = falseDownSkinL;
+	var trueUpSkinL;
 /**
 * symbol name of skin element for the middle piece in the selected up state
 *
 * @tiptext
 * @helpid 3093
 */
-	var trueUpSkinM = falseDownSkinM;
+	var trueUpSkinM;
 /**
 * symbol name of skin element for the right end cap in the selected up state
 *
 * @tiptext
 * @helpid 3094
 */
-	var trueUpSkinR = falseDownSkinR;
+	var trueUpSkinR;
 /**
 * symbol name of skin element for the left end cap in the selected down state
 *
 * @tiptext
 * @helpid 3095
 */
-	var trueDownSkinL = falseDownSkinL;
+	var trueDownSkinL;
 /**
 * symbol name of skin element for the middle piece in the selected down state
 *
 * @tiptext
 * @helpid 3096
 */
-	var trueDownSkinM = falseDownSkinM;
+	var trueDownSkinM;
 /**
 * symbol name of skin element for the right end cap in the selected down state
 *
 * @tiptext
 * @helpid 3097
 */
-	var trueDownSkinR = falseDownSkinR;
+	var trueDownSkinR;
 /**
 * symbol name of skin element for the left end cap in the selected over state
 *
 * @tiptext
 * @helpid 3098
 */
-	var trueOverSkinL = falseOverSkinL;
+	var trueOverSkinL;
 /**
 * symbol name of skin element for the middle piece in the selected over state
 *
 * @tiptext
 * @helpid 3099
 */
-	var trueOverSkinM = falseOverSkinM;
+	var trueOverSkinM;
 /**
 * symbol name of skin element for the right end cap in the selected over state
 *
 * @tiptext
 * @helpid 3100
 */
-	var trueOverSkinR = falseOverSkinR;
+	var trueOverSkinR;
 /**
 * symbol name of skin element for the left end cap in the disabled state
 *
 * @tiptext
 * @helpid 3101
 */
-	var falseDisabledSkinL = "F3PieceLeftDisabled";
+	var falseDisabledSkinL;
 /**
 * symbol name of skin element for the middle piece in the disabled state
 *
 * @tiptext
 * @helpid 3102
 */
-	var falseDisabledSkinM = "F3PieceMiddleDisabled";
+	var falseDisabledSkinM;
 /**
 * symbol name of skin element for the right end cap in the disabled state
 *
 * @tiptext
 * @helpid 3103
 */
-	var falseDisabledSkinR = "F3PieceRightDisabled";
+	var falseDisabledSkinR;
 /**
 * symbol name of skin element for the left end cap in the selected disabled state
 *
 * @tiptext
 * @helpid 3104
 */
-	var trueDisabledSkinL = falseDisabledSkinL;
+	var trueDisabledSkinL;
 /**
 * symbol name of skin element for the middle piece in the selected disabled state
 *
 * @tiptext
 * @helpid 3105
 */
-	var trueDisabledSkinM = falseDisabledSkinM;
+	var trueDisabledSkinM;
 /**
 * symbol name of skin element for the right end cap in the selected disabled state
 *
 * @tiptext
 * @helpid 3106
 */
-	var trueDisabledSkinR = falseDisabledSkinR;
+	var trueDisabledSkinR;
 
 	function CustomButton()
 	{
 	}
 	
+	private function init(Void):Void {
+		super.init();
+		
+		falseUpSkinL = "F3PieceLeft";
+		falseUpSkinM = "F3PieceMiddle";
+		falseUpSkinR = "F3PieceRight";
+		falseDownSkinL = "F3PieceLeftDown";
+		falseDownSkinM = "F3PieceMiddleDown";
+		falseDownSkinR = "F3PieceRightDown";
+		falseOverSkinL = "F3PieceLeftOver";
+		falseOverSkinM = "F3PieceMiddleOver";
+		falseOverSkinR = "F3PieceRightOver";
+		trueUpSkinL = falseDownSkinL;
+		trueUpSkinM = falseDownSkinM;
+		trueUpSkinR = falseDownSkinR;
+		trueDownSkinL = falseDownSkinL;
+		trueDownSkinM = falseDownSkinM;
+		trueDownSkinR = falseDownSkinR;
+		trueOverSkinL = falseOverSkinL;
+		trueOverSkinM = falseOverSkinM;
+		trueOverSkinR = falseOverSkinR;
+		falseDisabledSkinL = "F3PieceLeftDisabled";
+		falseDisabledSkinM = "F3PieceMiddleDisabled";
+		falseDisabledSkinR = "F3PieceRightDisabled";
+		trueDisabledSkinL = falseDisabledSkinL;
+		trueDisabledSkinM = falseDisabledSkinM;
+	}
+	
 /**
 * @private
 * re-calculate the minimum sizes of the button after a skin loads
@@ -249,4 +277,5 @@
 		
 		return super.setSkin(tag, linkageName, io);
 	}
+	
 }
diff -Naur Original/mx/controls/DataGrid.as Final/mx/controls/DataGrid.as
--- Original/mx/controls/DataGrid.as	2005-08-11 10:59:34.000000000 +0800
+++ Final/mx/controls/DataGrid.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,9 +5,9 @@
 //this product.
 //****************************************************************************
 
-import mx.controls.List;
 import mx.controls.gridclasses.DataGridColumn;
 import mx.controls.gridclasses.DataGridRow;
+import mx.controls.List;
 import mx.effects.Tween;
 
 [RequiresDataBinding(true)]
@@ -59,7 +59,7 @@
 	static var symbolOwner : Object = DataGrid;
 	static var symbolName : String = "DataGrid";
 
-#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 /**
 * @private
@@ -87,7 +87,7 @@
 
 	var autoHScrollAble : Boolean = true;
 
-        [Inspectable(defaultValue=false)]
+    [Inspectable(defaultValue=false)]
 	var editable : Boolean = false;
 	var minColWidth : Number = 20;	// minimum width of a column
 	var totColW : Number = 0;		// keep a running tally of the columns' total width
@@ -201,12 +201,12 @@
 	{
 		if (isNaN(rC)) return;
 		var o : Object = getViewMetrics();
-		setSize(__width, __rowHeight*rC + o.top + o.bottom + __headerHeight*__showHeaders);
+		setSize(__width, __rowHeight*rC + o.top + o.bottom + __headerHeight*Number(__showHeaders));
 	}
 
 	function setRowHeight(rH:Number) : Void
 	{
-		__rowHeight = rH
+		__rowHeight = rH;
 		if (hasDrawn) {
 			super.setRowHeight(rH);
 		}
@@ -276,7 +276,7 @@
 		}
 
 		// tell the scrollBars what to do, taking the headers into account
-		setScrollProperties(vWidth, 1, len, __rowHeight, __headerHeight*__showHeaders);
+		setScrollProperties(vWidth, 1, len, __rowHeight, __headerHeight*Number(__showHeaders));
 		if (oldVWidth!=vWidth)  {
 			// redraw the rows at the right horiz size
 			invLayoutContent = true;
@@ -1179,10 +1179,10 @@
 		// add a mouseMove to the grid to get the cursor to follow the mouse
 		o.onMouseMove = function()
 		{
-			stretcher._x = _xmouse;
-			stretcher._y = _ymouse;
+			this.stretcher._x = this._xmouse;
+			this.stretcher._y = this._ymouse;
 			updateAfterEvent();
-		}
+		};
 	}
 
 	/**
@@ -1207,16 +1207,15 @@
 		// keep the bar in synch with the mouse
 		o.onMouseMove = function()
 		{
-			stretcher._x = _xmouse;
-			stretcher._y = _ymouse;
-			stretchBar._x = Math.max(_xmouse, colX + minColWidth);
+			this.stretcher._x = this._xmouse;
+			this.stretcher._y = this._ymouse;
+			this.stretchBar._x = Math.max(this._xmouse, this.colX + this.minColWidth);
 			// restrict the movement of the bar if no hScroller
-			if (__hScrollPolicy=="off")
-				stretchBar._x = Math.min(stretchBar._x, displayWidth-minColWidth);
+			if (this.__hScrollPolicy=="off")
+				this.stretchBar._x = Math.min(this.stretchBar._x, this.displayWidth-this.minColWidth);
 			updateAfterEvent();
 
-		}
-
+		};
 	}
 
 	/**
@@ -1474,6 +1473,7 @@
 						disposeEditor();
 					// we need to set focus to the grid before moving on (focusManager thing)
 					// make sure the grid does pop into editing when we do so.
+					__focusedCell = null;
 					dontEdit = true;
 					Selection.setFocus(this);
 					delete dontEdit;
diff -Naur Original/mx/controls/DateChooser.as Final/mx/controls/DateChooser.as
--- Original/mx/controls/DateChooser.as	2004-03-23 10:27:28.000000000 +0800
+++ Final/mx/controls/DateChooser.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,12 +4,11 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.SimpleButton;
 import mx.controls.CalendarLayout;
-import mx.skins.ColoredSkinElement;
-import mx.core.UIObject;
+import mx.controls.SimpleButton;
 import mx.core.UIComponent;
-import mx.styles.StyleManager;
+import mx.core.UIObject;
+import mx.skins.ColoredSkinElement;
 
 /**
 * @tiptext scroll event
@@ -52,7 +51,7 @@
 	*/
 	var className:String = "DateChooser";
 
-	#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 	// Properties
 	var __enabled:Boolean = true;
@@ -75,7 +74,7 @@
 	var	sizeYRatio:Number;
 	var uninitializer:Object = undefined;
 
-	var _color:Object = {headerColor:1,backgroundColor:1}
+	var _color:Object = {headerColor:1,backgroundColor:1};
 	var clipParameters:Object = {showToday: 1, firstDayOfWeek: 1, monthNames: 1, dayNames: 1, disabledDays: 1}; 
 	static var mergedClipParameters:Boolean = UIObject.mergeClipParameters(mx.controls.DateChooser.prototype.clipParameters, UIComponent.prototype.clipParameters);
 
@@ -107,7 +106,7 @@
 	var fwdMonthButtonSkinID:Number = 6;
 	var fwdMonthButtonUpSymbolName:String = "fwdMonthUp";
 	var fwdMonthButtonDownSymbolName:String = "fwdMonthDown";
-	var fwdMonthButtonDisabledSymbolName:String = "fwdMonthDisabled"
+	var fwdMonthButtonDisabledSymbolName:String = "fwdMonthDisabled";
 	
 	// Skins for month backward button
 	var backMonthButtonSkinID:Number = 7;
@@ -333,10 +332,12 @@
 		calHeader._xscale = background_mc._xscale;;
 		calHeader._yscale= background_mc._yscale;
 
-
 		//change the buttons
-		var buttonWidth = buttonWidth._width*sizeXRatio;
-		var buttonHeight = buttonWidth._height*sizeYRatio;
+		//TODO: verify correctness
+		//var buttonWidth = buttonWidth._width*sizeXRatio;
+		//var buttonHeight = buttonWidth._height*sizeYRatio;
+		var buttonWidth = border_mc._width*sizeXRatio;
+		var buttonHeight = border_mc._height*sizeYRatio;
 		
 		backMonthButton.setSize(buttonWidth, buttonHeight);
 		fwdMonthButton.setSize(buttonWidth, buttonHeight);
diff -Naur Original/mx/controls/DateField.as Final/mx/controls/DateField.as
--- Original/mx/controls/DateField.as	2005-07-26 09:35:58.000000000 +0800
+++ Final/mx/controls/DateField.as	2008-01-06 05:12:35.000000000 +0900
@@ -6,9 +6,9 @@
 //****************************************************************************
 import mx.controls.ComboBase;
 import mx.controls.DateChooser;
+import mx.core.UIComponent;
 import mx.core.UIObject;
 import mx.managers.PopUpManager;
-import mx.controls.SimpleButton;
 
 /**
 * @tiptext change event
@@ -61,8 +61,7 @@
 	* Class name of this class
 	*/
 	var   className : String = "DateField";
-
-#include "../core/ComponentVersion.as"
+//#include "../core/ComponentVersion.as"
 	
 	var	_showingPullDown:Boolean = false;
 	var	__pullDown:MovieClip;
@@ -148,7 +147,7 @@
 			__pullDown.resizeHandler = _resizeHandler;
 			__pullDown.mouseDownOutsideHandler = function(eventObj)
 			{
- 				var o = this.owner;
+ 				o = this.owner;
  				var pt = new Object();
  				pt.x = o._root._xmouse;
  				pt.y = o._root._ymouse;
@@ -166,7 +165,7 @@
 
 					this.owner.displayPullDown(false);
 				}
-			}
+			};
 			for(var i in propTempStore)
 			{
 				__pullDown[i] = propTempStore[i];
@@ -305,7 +304,7 @@
 
 			if ((Stage.width > (dd.width + point.x)) && (Stage.height < (dd.height + point.y)))
 			{
-				xVal = point.x
+				xVal = point.x;
 				yVal = point.y - dd.height + height;
 				openPos = 1;
 			}
@@ -350,15 +349,15 @@
 
 //-------- Date Chooser Properties ------------------------
 //height scaling not allowed
-function get scaleY():Void
+function get scaleY():Number
 {
-	return;
+	return null;
 }
 
 
 function set scaleY(n:Number):Void
 {
-	return;
+	//return;
 }
 
 // -------------------------------------------------------------------------
@@ -799,7 +798,7 @@
 		{
 			if(d!=undefined)
 			{
-				text_mc.text = d.getDate()+" "+substring((monthNames[d.getMonth()]), 1, 3)+" "+d.getFullYear();
+				text_mc.text = d.getDate()+" "+(monthNames[d.getMonth()]).substr(0, 3)+" "+d.getFullYear();
 			}
 			else
 			{
@@ -848,5 +847,4 @@
 	}
 
 
-
 }
diff -Naur Original/mx/controls/gridclasses/DataGridColumn.as Final/mx/controls/gridclasses/DataGridColumn.as
--- Original/mx/controls/gridclasses/DataGridColumn.as	2003-08-27 14:12:10.000000000 +0800
+++ Final/mx/controls/gridclasses/DataGridColumn.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,7 +4,7 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.styles.CSSStyleDeclaration
+import mx.styles.CSSStyleDeclaration;
 
 /**
 * DataGridColumn class
@@ -55,7 +55,7 @@
 	var __cellRenderer;  // could be a string or a class
 	var __labelFunction : Function;
 	var styleName;
-	var headerStyle : CSSStyleDeclaration;
+	var headerStyle : CSSStyleDeclaration = _global.styles.dataGridStyles;
 
 
 	function DataGridColumn(colName : String)
diff -Naur Original/mx/controls/gridclasses/DataGridRow.as Final/mx/controls/gridclasses/DataGridRow.as
--- Original/mx/controls/gridclasses/DataGridRow.as	2005-07-22 08:27:24.000000000 +0800
+++ Final/mx/controls/gridclasses/DataGridRow.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,8 +5,8 @@
 //this product.
 //****************************************************************************
 
-import mx.controls.listclasses.SelectableRow;
 import mx.controls.gridclasses.DataGridColumn;
+import mx.controls.listclasses.SelectableRow;
 
 class mx.controls.gridclasses.DataGridRow extends SelectableRow
 {
@@ -156,13 +156,17 @@
 
 	// draw a background for this cell (for use in coloring the background of columns,
 	// see grid.drawColumns for usage
-	function drawCell(cellNum, xPos, w, bgCol)
+	private function drawCell (cellNum, xPos, w, bgCol)
 	{
-		var cell = cells[cellNum];
+		var cell = this.cells[cellNum];
 		cell._x = xPos;
 		cell._visible = true;
 		cell.setSize(w-2, Math.min(__height, cell.getPreferredHeight()));
-			cell._y = (__height-cell.height)/2;
+		if(cell.__height == undefined) {
+			cell._y = (__height-cell._height)/2;
+		}else{
+			cell._y = (__height-cell.__height)/2;
+		}
 		if (bgCol!=undefined) {
 			var x = Math.floor(xPos-2);
 			var x2 = Math.floor(x+w);
@@ -173,7 +177,6 @@
 			colBG.lineTo(x2, __height);
 			colBG.lineTo(x, __height);
 			colBG.endFill();
-
 		}
 	}
 
diff -Naur Original/mx/controls/HScrollBar.as Final/mx/controls/HScrollBar.as
--- Original/mx/controls/HScrollBar.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/HScrollBar.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,7 +5,7 @@
 //this product.
 //****************************************************************************
 
-import mx.core.UIComponent;
+//import mx.core.UIComponent;
 import mx.controls.scrollClasses.ScrollBar;
 
 [IconFile("HScrollBar.png")]
@@ -30,8 +30,7 @@
 */
 	static var symbolOwner:Object = mx.core.UIComponent;
 
-	// Version string
-#include "../core/ComponentVersion.as"
+	// Version string//#include "../core/ComponentVersion.as"
 
 /**
 * name of this class
diff -Naur Original/mx/controls/Label.as Final/mx/controls/Label.as
--- Original/mx/controls/Label.as	2004-04-09 21:00:04.000000000 +0800
+++ Final/mx/controls/Label.as	2008-01-06 05:12:35.000000000 +0900
@@ -38,8 +38,7 @@
 * name of this class
 */
 	var	className:String = "Label";
-
-#include "../core/ComponentVersion.as"
+//#include "../core/ComponentVersion.as"
 
 	var	initializing:Boolean = true;
 
@@ -181,11 +180,12 @@
 	function draw(Void):Void
 	{
 		var l = labelField;
+		var t;
 
 		if (initializing)
 		{
 			// If we are initializing, get the text from initText.
-			var t = text;
+			t = text;
 			initializing = false;
 			// After setting initializing to false, set the appropriate
 			// field (.text or .htmlText) with the contents of text.
@@ -195,7 +195,7 @@
 
 		// have to reset the html after you apply TextFormat
 		if (l.html)
-			var t = l.htmlText;
+			t = l.htmlText;
 
 		var tf = _getTextFormat();
 
diff -Naur Original/mx/controls/List.as Final/mx/controls/List.as
--- Original/mx/controls/List.as	2004-03-23 10:27:28.000000000 +0800
+++ Final/mx/controls/List.as	2008-01-06 05:12:35.000000000 +0900
@@ -27,8 +27,7 @@
 	static var symbolName : String = "List";
 
 	var className : String = "List";
-	
-#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 	//::: DEFAULT VALUES
 	var clipParameters:Object = { rowHeight: 1, enabled:1, visible:1, labels:1 };
diff -Naur Original/mx/controls/listclasses/DataProvider.as Final/mx/controls/listclasses/DataProvider.as
--- Original/mx/controls/listclasses/DataProvider.as	2003-08-14 20:00:04.000000000 +0800
+++ Final/mx/controls/listclasses/DataProvider.as	2008-01-06 05:12:35.000000000 +0900
@@ -11,7 +11,7 @@
 	 are able to be manipulated by "getItemAt", etc, and can broadcast changes to views.
 */
 
-import mx.events.EventDispatcher
+import mx.events.EventDispatcher;
 
 class mx.controls.listclasses.DataProvider extends Object
 {
@@ -39,7 +39,7 @@
 		var l = m.length;
 
 		// take all methods/props from our template object and put them on the prototype.
-		obj = obj.prototype;
+		obj = Function(obj).prototype;
 		for (var i=0; i<l; i++) {
 			obj[m[i]] = mixins[m[i]];
 			_global.ASSetPropFlags(obj, m[i],1);
@@ -62,7 +62,7 @@
 				_global.ASSetPropFlags(this, "__ID__",1);
 			}
 			return this.__ID__;
-		}
+		};
 		_global.ASSetPropFlags(Object.prototype, "LargestID",1);
 		_global.ASSetPropFlags(Object.prototype, "getID",1);
 
diff -Naur Original/mx/controls/listclasses/DataSelector.as Final/mx/controls/listclasses/DataSelector.as
--- Original/mx/controls/listclasses/DataSelector.as	2004-05-24 21:00:10.000000000 +0800
+++ Final/mx/controls/listclasses/DataSelector.as	2008-01-06 05:12:35.000000000 +0900
@@ -42,7 +42,7 @@
 		var m = mixinProps;
 		var l = m.length;
 
-		obj = obj.prototype;
+		obj = Function(obj).prototype;
 		for (var i=0; i<l; i++) {
 			obj[m[i]] = mixins[m[i]];
 		}
@@ -67,12 +67,12 @@
 		var g = function(Void)
 		{
 			return this["get" + p]();
-		}
+		};
 		if (setter) {
 			s = function(val)
 			{
 				this["set" + p](val);
-			}
+			};
 		}
 		obj.addProperty(propName, g, s);
 
@@ -221,7 +221,7 @@
 
 		//-!! backwards compatible special-case for old recordset
 		if (event==undefined) {
-			event = eventObj.event
+			event = eventObj.event;
 			firstItem = eventObj.firstRow;
 			lastItem = eventObj.lastRow;
 			if (event=="addRows") {
diff -Naur Original/mx/controls/listclasses/ScrollSelectList.as Final/mx/controls/listclasses/ScrollSelectList.as
--- Original/mx/controls/listclasses/ScrollSelectList.as	2004-03-26 21:00:16.000000000 +0800
+++ Final/mx/controls/listclasses/ScrollSelectList.as	2008-01-06 05:12:35.000000000 +0900
@@ -6,9 +6,9 @@
 //****************************************************************************
 
 
+import mx.controls.listclasses.DataProvider;
+import mx.controls.listclasses.DataSelector;
 import mx.core.ScrollView;
-import mx.controls.listclasses.DataSelector
-import mx.controls.listclasses.DataProvider
 
 /**
 * @tiptext change event
@@ -377,7 +377,7 @@
 
 	function setRowHeight(v : Number) : Void
 	{
-		__rowHeight = v
+		__rowHeight = v;
 		invRowHeight = true;
 		invalidate();
 	}
@@ -614,7 +614,7 @@
 				}
 			}
 			rows = tmpArray;
-			for (i=0; i<__rowCount; i++) {
+			for (var i=0; i<__rowCount; i++) {
 				rows[i].swapDepths(baseRowZ + i);
 			}
 		}
@@ -890,7 +890,7 @@
 
 			itmStr = itmStr.substring(0,str.length);
 			if (str==itmStr || str.toUpperCase()==itmStr.toUpperCase()) {
-				var jump = i - curIndex;
+				jump = i - curIndex;
 				break;
 			}
 			if (i>=getLength()-1) {
@@ -1024,4 +1024,5 @@
 	super.invalidateStyle(propName);
 	}
 
+	static var SelectableRowDependency = mx.controls.listclasses.SelectableRow;
 }
diff -Naur Original/mx/controls/listclasses/SelectableRow.as Final/mx/controls/listclasses/SelectableRow.as
--- Original/mx/controls/listclasses/SelectableRow.as	2004-03-26 21:00:16.000000000 +0800
+++ Final/mx/controls/listclasses/SelectableRow.as	2008-01-06 05:12:35.000000000 +0900
@@ -268,7 +268,7 @@
 			else
 			{
 				h._visible = false;
-				normalColor = o.getStyle("backgroundDisabledColor")
+				normalColor = o.getStyle("backgroundDisabledColor");
 
 				drawRowFill(b, normalColor);
 
diff -Naur Original/mx/controls/Loader.as Final/mx/controls/Loader.as
--- Original/mx/controls/Loader.as	2005-07-14 04:06:52.000000000 +0800
+++ Final/mx/controls/Loader.as	2008-01-06 05:12:35.000000000 +0900
@@ -33,8 +33,7 @@
 class mx.controls.Loader extends View
 {
 	static var symbolName:String = "Loader";
-	static var symbolOwner:Object = mx.controls.Loader; // why not type Function???
-#include "../core/ComponentVersion.as"
+	static var symbolOwner:Object = mx.controls.Loader; // why not type Function???//#include "../core/ComponentVersion.as"
 	var className:String = "Loader";
 
 	var clipParameters:Object = { autoLoad: 1, scaleContent: 1, contentPath: 1 };
@@ -458,4 +457,6 @@
 		contentHolder._xscale = contentHolder._yscale = 100;
 		contentHolder._x = contentHolder._y = 0;
 	}
+	
+	private static var RectBorderDependency = mx.skins.halo.RectBorder;
 }
diff -Naur Original/mx/controls/MediaController.as Final/mx/controls/MediaController.as
--- Original/mx/controls/MediaController.as	2004-01-21 04:48:34.000000000 +0800
+++ Final/mx/controls/MediaController.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,16 +4,16 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.core.UIComponent;
-import mx.controls.streamingmedia.Chrome;
 import mx.controls.MediaDisplay;
+import mx.controls.streamingmedia.Chrome;
 import mx.controls.streamingmedia.LoadBar;
 import mx.controls.streamingmedia.MiniPlayBar;
 import mx.controls.streamingmedia.PlayBar;
+import mx.controls.streamingmedia.ScreenAccommodator;
 import mx.controls.streamingmedia.StreamingMediaConstants;
 import mx.controls.streamingmedia.Tracer;
 import mx.controls.streamingmedia.VolumeControl;
-import mx.controls.streamingmedia.ScreenAccommodator;
+import mx.core.UIComponent;
 
 [RequiresDataBinding(true)]
 [IconFile("MediaController.png")]
@@ -56,7 +56,7 @@
 	static var symbolName:String = "MediaController";
 	static var symbolOwner:Object = mx.controls.MediaController;
 	var	className:String = "MediaController";
-	#include "../core/MediaComponentVersion.as"
+//#include "../core/MediaComponentVersion.as"
 
 	var clipParameters:Object =
 	{
@@ -324,7 +324,7 @@
 			_isOpen = false;
 			_priorMouseOver = false;
 			_closeId = null;
-			_openId = null
+			_openId = null;
 			// Listen for mouse events
 			Mouse.addListener(this);
 			this.gotoAndStop( getClosedFrameName() );
@@ -938,7 +938,7 @@
 	 * @tiptext Determines whether the controller only displays itself on mouse over
 	 * @helpid 3458
 	 */
-	[Inspectable(enumeration="auto,on,off" defaultValue="auto")]
+	[Inspectable(enumeration="auto,on,off", defaultValue="auto")]
 	public function get controllerPolicy():String
 	{
 		return _controllerPolicy;
@@ -977,7 +977,7 @@
 		else if (_controllerPolicy == "auto")
 		{
 			_closeId = null;
-			_openId = null
+			_openId = null;
 			// Listen for mouse events
 			Mouse.addListener(this);
 			// Is the mouse currently over the controller?
@@ -1068,7 +1068,7 @@
 	 * @tiptext Determines whether the Controller instance draws its chrome background
 	 * @helpid 3454
 	 */
-	[Inspectable(enumeration="none,default" defaultValue="default")]
+	[Inspectable(enumeration="none,default", defaultValue="default")]
 	public function get backgroundStyle():String
 	{
 		return _backgroundStyle;
@@ -1170,7 +1170,7 @@
 	 * @tiptext Determines what state the controller is in when it is loaded at runtime
 	 * @helpid 3450
 	 */
-	[Inspectable(enumeration="pause,play" defaultValue="pause")]
+	[Inspectable(enumeration="pause,play", defaultValue="pause")]
 	public function get activePlayControl():String
 	{
 		return _activePlayControl;
@@ -1183,7 +1183,7 @@
 	/**
 	 * @return True if the control is playing; false if not.
 	 */
-    [ChangeEvent:("change")]
+    [ChangeEvent("change")]
     [Bindable]
     public function get playing():Boolean
     {
diff -Naur Original/mx/controls/MediaDisplay.as Final/mx/controls/MediaDisplay.as
--- Original/mx/controls/MediaDisplay.as	2004-01-21 04:48:34.000000000 +0800
+++ Final/mx/controls/MediaDisplay.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,7 +4,6 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.core.UIComponent;
 import mx.controls.MediaController;
 import mx.controls.MediaPlayback;
 import mx.controls.streamingmedia.CuePoint;
@@ -16,7 +15,7 @@
 import mx.controls.streamingmedia.RTMPPlayer;
 import mx.controls.streamingmedia.ScreenAccommodator;
 import mx.controls.streamingmedia.StreamingMediaConstants;
-import mx.controls.streamingmedia.Tracer;
+import mx.core.UIComponent;
 
 [RequiresDataBinding(true)]
 [IconFile("MediaDisplay.png")]
@@ -68,7 +67,7 @@
 	static var symbolName:String = "MediaDisplay";
 	static var symbolOwner:Object = mx.controls.MediaDisplay;
 	var	className:String = "MediaDisplay";
-	#include "../core/MediaComponentVersion.as"
+//#include "../core/MediaComponentVersion.as"
 
 	var clipParameters:Object =
 	{
@@ -618,7 +617,7 @@
 	
 				if (isRtmp(_contentPath))
 				{
-					var ev:Object = { target: this, type: "progress" };
+					ev = { target: this, type: "progress" };
 					dispatchEvent(ev);
 				}
 	
@@ -967,7 +966,7 @@
 	 * @tiptext Number of bytes already loaded
 	 * @helpid 3455
 	 */
-	[ChangeEvent{"progress")]
+	[ChangeEvent("progress")]
 	[Bindable]
 	public function get bytesLoaded():Number
 	{
@@ -978,7 +977,7 @@
 	 * @tiptext Number of bytes to be loaded
 	 * @helpid 3456
 	 */
-	[ChangeEvent{"start")]
+	[ChangeEvent("start")]
 	[Bindable]
 	public function get bytesTotal():Number
 	{
@@ -1004,7 +1003,7 @@
 	 * @tiptext Type of media to be played
 	 * @helpid 3462
 	 */
-	[Inspectable(enumeration="MP3,FLV" defaultValue="FLV")]
+	[Inspectable(enumeration="MP3,FLV", defaultValue="FLV")]
 	[ChangeEvent("start")]
 	[Bindable]
 	public function get mediaType():String
diff -Naur Original/mx/controls/MediaPlayback.as Final/mx/controls/MediaPlayback.as
--- Original/mx/controls/MediaPlayback.as	2004-01-21 04:48:34.000000000 +0800
+++ Final/mx/controls/MediaPlayback.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,15 +5,14 @@
 //this product.
 //****************************************************************************
 
-import mx.core.UIComponent;
+import mx.controls.MediaController;
+import mx.controls.MediaDisplay;
 import mx.controls.streamingmedia.Chrome;
 import mx.controls.streamingmedia.CuePoint;
 import mx.controls.streamingmedia.FullScreenToggle;
 import mx.controls.streamingmedia.ICuePointHolder;
-import mx.controls.MediaDisplay;
-import mx.controls.MediaController;
 import mx.controls.streamingmedia.StreamingMediaConstants;
-import mx.controls.streamingmedia.Tracer;
+import mx.core.UIComponent;
 
 [RequiresDataBinding(true)]
 [IconFile("MediaPlayback.png")]
@@ -86,7 +85,7 @@
 	static var symbolName:String = "MediaPlayback";
 	static var symbolOwner:Object = mx.controls.MediaPlayback;
 	var	className:String = "MediaPlayback";
-	#include "../core/MediaComponentVersion.as"
+//#include "../core/MediaComponentVersion.as"
 
 	var clipParameters:Object =
 	{
@@ -811,7 +810,7 @@
 	 * @tiptext Type of media to be played
 	 * @helpid 3462
 	 */
-	[Inspectable(enumeration="FLV,MP3" defaultValue="FLV")]
+	[Inspectable(enumeration="FLV,MP3", defaultValue="FLV")]
 	[ChangeEvent("start")]
 	[Bindable]
 	public function get mediaType():String
@@ -1041,7 +1040,7 @@
 	 * @tiptext Determines whether the controller only displays itself on mouse over
 	 * @helpid 3458
 	 */
-	[Inspectable(enumeration="auto,on,off" defaultValue="auto")]
+	[Inspectable(enumeration="auto,on,off", defaultValue="auto")]
 	public function get controllerPolicy():String
 	{
 		if (_controller != null)
@@ -1114,7 +1113,7 @@
 	 * @tiptext Determines where the controller is positioned relative to the display
 	 * @helpid 3459
 	 */
-	[Inspectable(enumeration="top,bottom,left,right" defaultValue="bottom")]
+	[Inspectable(enumeration="top,bottom,left,right", defaultValue="bottom")]
 	public function get controlPlacement():String
 	{
 		return _controlPlacement;
diff -Naur Original/mx/controls/Menu.as Final/mx/controls/Menu.as
--- Original/mx/controls/Menu.as	2004-06-29 20:17:36.000000000 +0800
+++ Final/mx/controls/Menu.as	2008-01-06 05:12:35.000000000 +0900
@@ -7,10 +7,9 @@
 
 import mx.controls.listclasses.ScrollSelectList;
 import mx.controls.menuclasses.MenuDataProvider;
-import mx.controls.menuclasses.MenuRow;
 import mx.controls.treeclasses.TreeDataProvider;
-import mx.managers.PopUpManager;
 import mx.effects.Tween;
+import mx.managers.PopUpManager;
 
 [RequiresDataBinding(true)]
 [IconFile("Menu.png")]
@@ -57,7 +56,7 @@
 	var	className:String = "Menu";
 
 		// Version string
-	#include "../core/ComponentVersion.as"
+//#include "../core/ComponentVersion.as"
 
 
 	// **************************************************************************
@@ -105,10 +104,10 @@
 			result.isPressed = true;
 			result.mouseDownOutsideHandler = function(event) : Void
 			{
-				if(!isMouseOverMenu() && !__activator.hitTest(pt.x, pt.y)) {
-					hideAllMenus();
+				if(!this.isMouseOverMenu() && !this.__activator.hitTest(pt.x, pt.y)) {
+					this.hideAllMenus();
 				}
-			}
+			};
 
 			result.dataProvider = mdp;
 		}
@@ -1385,7 +1384,7 @@
 			if(isItemEnabled(s) && s.hasChildNodes()){
 				openSubMenu({item:s, rowIndex:selectedIndex});
 				var r = getRootMenu();
-				var menu = r.__menuCache[s.getID()]
+				var menu = r.__menuCache[s.getID()];
  				supposedToLoseFocus = true;
  				Selection.setFocus(menu);
 				menu.selectedIndex = 0;
@@ -1455,4 +1454,6 @@
 		}
 	}
 	*/
+	
+	private static var MenuRowDependency = mx.controls.menuclasses.MenuRow;
 }
diff -Naur Original/mx/controls/MenuBar.as Final/mx/controls/MenuBar.as
--- Original/mx/controls/MenuBar.as	2004-04-09 21:00:04.000000000 +0800
+++ Final/mx/controls/MenuBar.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,13 +5,8 @@
 //this product.
 //****************************************************************************
 
-import mx.core.UIObject;
-import mx.core.UIComponent;
-import mx.events.UIEventDispatcher;
-import mx.controls.menuclasses.MenuDataProvider;
-import mx.controls.treeclasses.TreeDataProvider;
-import mx.controls.menuclasses.MenuBarItem;
 import mx.controls.Menu;
+import mx.core.UIComponent;
 
 [TagName("MenuBar")]
 [RequiresDataBinding(true)]
@@ -49,7 +44,7 @@
 
 
 	// Version string
-	#include "../core/ComponentVersion.as"
+//#include "../core/ComponentVersion.as"
 
 	/**
 	* @private
@@ -384,7 +379,7 @@
 		__menuDataProvider = dp;
 		dp.isTreeRoot = true;
 		var c = dp.childNodes;
-		var l = c.length
+		var l = c.length;
 		for (var i=0; i<l; i++) {
 			insertMenuBarItem(i,c[i]);
 		}
@@ -417,8 +412,8 @@
 	{
 		__labels = lbls;
 
-		var mL = __menuBarItems.length
-		var lL = __labels.length
+		var mL = __menuBarItems.length;
+		var lL = __labels.length;
 
 		for(var i = 0; i < mL ; i++) {
 			removeMenuAt(0);
@@ -726,4 +721,8 @@
 			getMenuAt(openMenuIndex).hide();
 		}
 	}
+	
+	private static var MenuBarItemDependency = mx.controls.menuclasses.MenuBarItem;
+	private static var MenuRowDependency = mx.controls.menuclasses.MenuRow;
+	
 }
\ No newline at end of file
diff -Naur Original/mx/controls/menuclasses/MenuBarItem.as Final/mx/controls/menuclasses/MenuBarItem.as
--- Original/mx/controls/menuclasses/MenuBarItem.as	2004-04-09 21:00:04.000000000 +0800
+++ Final/mx/controls/menuclasses/MenuBarItem.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,8 +4,6 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.Menu;
-import mx.controls.MenuBar;
 import mx.core.UIComponent;
 import mx.skins.RectBorder;
 
@@ -50,7 +48,7 @@
 
 	function size(Void):Void
 	{
-		super.size()
+		super.size();
 		border_mc.setSize(__width, __height);
 		cell.setSize(__width-__cellWidthBuffer, cell.getPreferredHeight());
 
diff -Naur Original/mx/controls/menuclasses/MenuDataProvider.as Final/mx/controls/menuclasses/MenuDataProvider.as
--- Original/mx/controls/menuclasses/MenuDataProvider.as	2003-08-03 16:01:06.000000000 +0800
+++ Final/mx/controls/menuclasses/MenuDataProvider.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,7 +5,6 @@
 //this product.
 //****************************************************************************
 
-import mx.controls.Menu;
 import mx.controls.treeclasses.TreeDataProvider;
 
 /* ============================================================================
@@ -31,9 +30,9 @@
 
 	// Initialize is called to apply the mixinProps above to the given object's prototype.
 	// Typical usage : MenuDataProvider.Initialize(XMLNode);
-	static function Initialize(obj:Object) : Boolean
+	static function Initialize(func:Function) : Boolean
 	{
-		obj = obj.prototype;
+		var obj = func.prototype;
 		var m = mixinProps;
 		var l = m.length;
 
diff -Naur Original/mx/controls/NumericStepper.as Final/mx/controls/NumericStepper.as
--- Original/mx/controls/NumericStepper.as	2005-08-08 12:01:40.000000000 +0800
+++ Final/mx/controls/NumericStepper.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,10 +5,9 @@
 //this product.
 //****************************************************************************
 import mx.controls.SimpleButton;
-import mx.skins.ColoredSkinElement; 
 import mx.controls.TextInput;
-import mx.core.UIObject;
 import mx.core.UIComponent;
+import mx.core.UIObject;
 import mx.managers.SystemManager;
 
 /**
@@ -48,8 +47,7 @@
 * Class used in createClassObject
 */	
 	static var symbolOwner:Object = NumericStepper;
-	
-#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 /**
 * @private
 * className for object
@@ -335,12 +333,12 @@
 			var upButton:Object = nextButton_mc;
 			upButton.tabEnabled = false;
 			upButton.styleName = this;
-			upButton._x = __width - upButton.__width
+			upButton._x = __width - upButton.__width;
 			upButton._y = 0;
 			upButton.owner = this; 
 			upButton.autoRepeat = true;
 			upButton.clickHandler = function() { Selection.setSelection(0,0); };
-			upButton.buttonDownHandler = function() { this.owner.buttonPress(this) };
+			upButton.buttonDownHandler = function() { this.owner.buttonPress(this); };
 		}
 		else if (skinID == 11)
 		{
@@ -353,12 +351,12 @@
 			var downButton:Object = prevButton_mc;
 			downButton.tabEnabled = false;
 			downButton.styleName = this;
-			downButton._x = __width - downButton.__width
+			downButton._x = __width - downButton.__width;
 			downButton._y = __height - downButton.__height;
 			downButton.owner = this;
 			downButton.autoRepeat = true;
 			downButton.clickHandler = function() { Selection.setSelection(0,0); };
-			downButton.buttonDownHandler = function() { this.owner.buttonPress(this) };
+			downButton.buttonDownHandler = function() { this.owner.buttonPress(this); };
 		}
 		else if (skinID == 9)
 		{
@@ -374,23 +372,23 @@
 				
 			iField.onSetFocus = function()
 			{ 
-				_parent.onSetFocus();
-			}
+				this._parent.onSetFocus();
+			};
 			 
 			iField.onKillFocus = function() 
 			{	 
-				_parent.onKillFocus();
-			}
+				this._parent.onKillFocus();
+			};
 			 
 			iField.drawFocus = function(b) 
 			{	 
-				_parent.drawFocus(b);
-			}
+				this._parent.drawFocus(b);
+			};
 			 
 			iField.onKeyDown = function ()
 			{
-				_parent.onFieldKeyDown(); 
-			}
+				this._parent.onFieldKeyDown(); 
+			};
 		}
 	}
 	
@@ -418,7 +416,7 @@
 			var newVal:Number = checkValidValue(Number(inputField.text));
 			inputField.text = newVal;
 			value = newVal;
-			dispatchEvent({type:"change"})
+			dispatchEvent({type:"change"});
 		}
 	}
 	
@@ -496,7 +494,7 @@
 	{
 		if (checkRange(value + stepSize))
 		{
-			__nextValue = value + stepSize
+			__nextValue = value + stepSize;
 			return __nextValue;
 		} 
 	}
@@ -510,7 +508,7 @@
 	{
 		if (checkRange(__value - stepSize))
 		{
-			__previousValue = value - stepSize
+			__previousValue = value - stepSize;
 			return __previousValue;
 		} 
 	}
@@ -643,7 +641,7 @@
 */
 	function checkRange(v:Number):Boolean
 	{
-		return (v >= minimum and v <= maximum);
+		return (v >= minimum && v <= maximum);
 	}
 /**
 * @private
@@ -658,7 +656,7 @@
 		var minVal:Number = minimum;
 		var maxVal:Number = maximum;
 
-		if (val > minVal and val < maxVal)
+		if (val > minVal && val < maxVal)
 		{
 			if (initDiv - roundD == 0)
   			{
diff -Naur Original/mx/controls/ProgressBar.as Final/mx/controls/ProgressBar.as
--- Original/mx/controls/ProgressBar.as	2005-06-27 08:44:24.000000000 +0800
+++ Final/mx/controls/ProgressBar.as	2008-01-06 05:12:35.000000000 +0900
@@ -46,8 +46,7 @@
 	var	className:String = "ProgressBar";
 
 
-// Version string
-#include "../core/ComponentVersion.as"
+// Version string//#include "../core/ComponentVersion.as"
 
 	var	__mode:String = "event";
 	var	__direction:String = "right";
diff -Naur Original/mx/controls/RadioButton.as Final/mx/controls/RadioButton.as
--- Original/mx/controls/RadioButton.as	2004-06-28 20:00:14.000000000 +0800
+++ Final/mx/controls/RadioButton.as	2008-01-06 05:12:35.000000000 +0900
@@ -6,7 +6,6 @@
 //****************************************************************************
 import mx.controls.Button;
 import mx.controls.RadioButtonGroup;
-import mx.managers.SystemManager;
 import mx.core.UIObject;
 
 /**
@@ -47,7 +46,7 @@
 * @private
 * className for object
 */	
-	#include "../core/ComponentVersion.as"
+//#include "../core/ComponentVersion.as"
 	var	className:String = "RadioButton";
 /**
 * @private
@@ -63,7 +62,7 @@
 * @private
 * private value 
 */	
-	var __value:Object
+	var __value:Object;
 /**
 * @private
 * defualt value of label
@@ -306,7 +305,7 @@
 */
 	function setSelected (val:Boolean):Void
 	{
-		var s:Object = _parent[__groupName]
+		var s:Object = _parent[__groupName];
 		
 		var tmpW:Number = s["selectedRadio"].__width;
 		var tmpH:Number = s["selectedRadio"].__height;
@@ -351,10 +350,10 @@
 * @private
 *  sets the group name associated with the radio button 
 */
-	function setGroupName  (groupName:String):Void
+	function setGroupName (groupName:String):Void
 	{
 		if(groupName == undefined || groupName == "")return;
-		delete _parent[__groupName].radioList[__data]
+		delete _parent[__groupName].radioList[__data];
 		addToGroup(groupName);
 		__groupName = groupName;
 	}
@@ -372,7 +371,7 @@
 * @private
 *  create radio button group if it does not exist and add the instance to the group
 */
-	function addToGroup  (groupName:String):Void
+	function addToGroup (groupName:String):Void
 	{
 		if (groupName == "" || groupName == undefined) return;
 		var g = _parent[groupName];
diff -Naur Original/mx/controls/RadioButtonGroup.as Final/mx/controls/RadioButtonGroup.as
--- Original/mx/controls/RadioButtonGroup.as	2004-03-26 21:00:16.000000000 +0800
+++ Final/mx/controls/RadioButtonGroup.as	2008-01-06 05:12:35.000000000 +0900
@@ -17,7 +17,8 @@
 * @tiptext RadioButtonGroup used in conjunction with RadioButton 
 * @helpid 3166
 */ 
-class mx.controls.RadioButtonGroup 
+// TODO check "extends MovieClip"
+class mx.controls.RadioButtonGroup extends MovieClip
 {
 /**
 * @private
@@ -29,7 +30,7 @@
 * Class used in createClassObject
 */	
 	static var symbolOwner:Object = mx.controls.RadioButtonGroup;
-	#include "../core/ComponentVersion.as"
+//#include "../core/ComponentVersion.as"
 /**
 * @private
 * className for object
@@ -96,12 +97,13 @@
 	function setGroupName (groupName:String):Void
 	{
 		if(groupName == undefined || groupName == "")return;
-		var gn = __groupName
+		var gn = __groupName;
+		var sel;
 		
 		_parent[groupName] = this;
 		for (var i in radioList){
 			radioList[i].groupName = groupName;
-			var sel = radioList[i];
+			sel = radioList[i];
 		}
 		sel.deleteGroupObj(gn);
 	}
@@ -141,9 +143,10 @@
 */	
 	function getLabelPlacement():String
 	{
+		var r;
 		for (var i in radioList)
 		{
-			var r = radioList[i].getLabelPlacement()
+			r = radioList[i].getLabelPlacement();
 		}
 		return r;
 	}
@@ -187,10 +190,11 @@
 */	
 	function getEnabled()
 	{	
+		var t = 0;
 		for (var i in radioList)
 		{
 			var s = radioList[i].enabled;
-			var t = t + (s + 0);
+			t = t + (s + 0);
 		}
 		if ( t == radioList.length )
 		{
@@ -240,9 +244,10 @@
 */		
 	function setValue(val:String)
 	{
+		var item;
 		for (var i in radioList){
 			if (radioList[i].__data == val || radioList[i].label == val){
-				var item = i;
+				item = i;
 				break;
 			}
 		}
@@ -263,11 +268,12 @@
 	function set groupName (groupName:String) 
 	{
 		if(groupName == undefined || groupName == '')return;
-		var gn = __groupName
+		var gn = __groupName;
+		var sel;
 		_parent[groupName] = this;
 		for (var i in radioList){
 			radioList[i].groupName = groupName;
-			var sel = radioList[i];
+			sel = radioList[i];
 		}
 		sel.deleteGroupObj(gn);
 	}
@@ -286,9 +292,10 @@
 */	
 	function set selectedData(val)
 	{
+		var item;
 		for (var i in radioList){
 			if (radioList[i].__data == val || radioList[i].label == val){
-				var item = i;
+				item = i;
 				break;
 			}
 		}
@@ -325,7 +332,7 @@
 *  @tiptext The object reference of the currently selected RadioButton
 *  @helpid 3930
 */	
-	function set selection(val:MovieClip)
+	function set selection(val:Object)
 	{ 
 		for (var i in radioList)
 		{
@@ -353,9 +360,10 @@
 */		
 	function get labelPlacement():String
 	{
+		var r;
 		for (var i in radioList)
 		{
-			var r = radioList[i].getLabelPlacement()
+			r = radioList[i].getLabelPlacement();
 		}
 		return r;
 	}
diff -Naur Original/mx/controls/scrollClasses/ScrollBar.as Final/mx/controls/scrollClasses/ScrollBar.as
--- Original/mx/controls/scrollClasses/ScrollBar.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/scrollClasses/ScrollBar.as	2008-01-06 05:12:35.000000000 +0900
@@ -8,11 +8,11 @@
 //** Recipe for a component  Search for //** in this file to see the things
 //   you should think about
 //** 0) import all necessary classes
+import mx.controls.scrollClasses.ScrollThumb;
+import mx.controls.SimpleButton;
+import mx.core.UIComponent;
 import mx.core.UIObject;
 import mx.skins.SkinElement;
-import mx.core.UIComponent;
-import mx.controls.SimpleButton;
-import mx.controls.scrollClasses.ScrollThumb;
 
 /**
 * a window with a title bar, caption and optional close button
@@ -441,7 +441,6 @@
 		o.gripSkin = thumbGripName;
 
 		createClassObject(ScrollThumb, "scrollThumb_mc", skinIDThumb, o);
-
 	}
 
 	//** 13) add methods on your object.  If you are converting an old
@@ -785,4 +784,6 @@
 	{
 		_parent.dispatchScrollChangedEvent();
 	}
+	
+	private static var ButtonDependency = mx.controls.Button;
 }
diff -Naur Original/mx/controls/scrollClasses/ScrollThumb.as Final/mx/controls/scrollClasses/ScrollThumb.as
--- Original/mx/controls/scrollClasses/ScrollThumb.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/scrollClasses/ScrollThumb.as	2008-01-06 05:12:35.000000000 +0900
@@ -156,6 +156,6 @@
 	function size()
 	{
 		super.size();
-		grip_mc.move((width - grip_mc.width) / 2, (height - grip_mc.height) / 2)
+		grip_mc.move((width - grip_mc.width) / 2, (height - grip_mc.height) / 2);
 	}
 }
diff -Naur Original/mx/controls/SimpleButton.as Final/mx/controls/SimpleButton.as
--- Original/mx/controls/SimpleButton.as	2004-05-19 21:34:32.000000000 +0800
+++ Final/mx/controls/SimpleButton.as	2008-01-06 05:12:35.000000000 +0900
@@ -31,7 +31,7 @@
 * Class used in createClassObject
 */
 	static var symbolOwner:Object = mx.controls.SimpleButton;
-	#include "../core/ComponentVersion.as"
+//#include "../core/ComponentVersion.as"
 /**
 * @private
 * className for object
@@ -153,13 +153,13 @@
 * trueDownSkin name
 * change of value will change the viewable state
 */
-	var trueDownSkin:String = ""
+	var trueDownSkin:String = "";
 /**
 * @private
 * trueOverSkin name
 * change of value will change the viewable state
 */
-	var trueOverSkin:String = ""
+	var trueOverSkin:String = "";
 /**
 * @private
 * trueDisabledSkin name
@@ -366,122 +366,122 @@
 * @private
 *
 */
-	var fui = "falseUpIcon";
+	var fui;
 /**
 * @private
 *
 */
-	var fus = "falseUpSkin";
+	var fus;
 /**
 * @private
 *
 */
-	var fdi = "falseDownIcon";
+	var fdi;
 /**
 * @private
 *
 */
-	var fds = "falseDownSkin";
+	var fds;
 /**
 * @private
 *
 */
-	var frs = "falseOverSkin";
+	var frs;
 /**
 * @private
 *
 */
-	var fri =  "falseOverIcon";
+	var fri;
 /**
 * @private
 *
 */
-	var dfi  = "falseDisabledIcon";
+	var dfi;
 /**
 * @private
 *
 */
-	var dfs = "falseDisabledSkin";
+	var dfs;
 /**
 * @private
 *
 */
-	var tui = "trueUpIcon";
+	var tui;
 /**
 * @private
 *
 */
-	var tus = "trueUpSkin";
+	var tus;
 /**
 * @private
 *
 */
-	var tdi = "trueDownIcon";
+	var tdi;
 /**
 * @private
 *
 */
-	var tds = "trueDownSkin";
+	var tds;
 /**
 * @private
 *
 */
-	var  trs  = "trueOverSkin";
+	var trs;
 /**
 * @private
 *
 */
-	var  tri  = "trueOverIcon";
+	var tri;
 /**
 * @private
 *
 */
-	var  dts = "trueDisabledSkin";
+	var dts;
 /**
 * @private
 *
 */
-	var  dti = "trueDisabledIcon";
+	var dti;
 /**
 * @private
 *
 */
-	var rolloverSkin:Object =  frs;
+	var rolloverSkin:Object;
 /**
 * @private
 *
 */
-	var rolloverIcon:Object =  fri;
+	var rolloverIcon:Object;
 /**
 * @private
 *
 */
-	var upSkin:Object =  fus;
+	var upSkin:Object;
 /**
 * @private
 *
 */
-	var downSkin:Object =  fds;
+	var downSkin:Object;
 /**
 * @private
 *
 */
-	var disabledSkin:Object =  dfs;
+	var disabledSkin:Object;
 /**
 * @private
 *
 */
-	var upIcon:Object =  fui;
+	var upIcon:Object;
 /**
 * @private
 *
 */
-	var downIcon:Object =  fdi;
+	var downIcon:Object;
 /**
 * @private
 *
 */
-	var disabledIcon:Object =  dfi;
+	var disabledIcon:Object;
 /**
 * @private
 *
@@ -493,7 +493,7 @@
 */
 	function SimpleButton()
 	{
-
+		
 	}
 
 /**
@@ -506,6 +506,32 @@
 	{
 		super.init();
 
+		fui = "falseUpIcon";
+		fus = "falseUpSkin";
+		fdi = "falseDownIcon";
+		fds = "falseDownSkin";
+		frs = "falseOverSkin";
+		fri =  "falseOverIcon";
+		dfi = "falseDisabledIcon";
+		dfs = "falseDisabledSkin";
+		tui = "trueUpIcon";
+		tus = "trueUpSkin";
+		tdi = "trueDownIcon";
+		tds = "trueDownSkin";
+		trs  = "trueOverSkin";
+		tri  = "trueOverIcon";
+		dts = "trueDisabledSkin";
+		dti = "trueDisabledIcon";
+
+		rolloverSkin = frs;
+		rolloverIcon = fri;
+		upSkin = fus;
+		upIcon = fui;
+		downSkin = fds;
+		downIcon = fdi;
+		disabledSkin = dfs;
+		disabledIcon = dfi;
+
 		if (preset == undefined)
 		{
 			boundingBox_mc._visible = false;
@@ -663,7 +689,7 @@
 * @private
 *
 */
-	function calcSize(Void):Void
+	function calcSize():Void
 	{
 		 __width = _width;
 		 __height  = _height;
@@ -962,6 +988,7 @@
 		phase = "down";
 		refresh();
 		dispatchEvent({type:"buttonDown"});
+		
 		if (autoRepeat)
 		{
 			interval = setInterval(this, "onPressDelay", getStyle("repeatDelay"));
@@ -1062,7 +1089,7 @@
 	function onRollOver(Void):Void
 	{
 		phase = "rollover";
-		refresh()
+		refresh();
 	}
 /**
 * @private
@@ -1160,6 +1187,8 @@
 			refresh();
 		}
 	}
+	
+	private static var ButtonSkinDependency = mx.skins.halo.ButtonSkin;
 }
 
 
diff -Naur Original/mx/controls/streamingmedia/AbstractPlayer.as Final/mx/controls/streamingmedia/AbstractPlayer.as
--- Original/mx/controls/streamingmedia/AbstractPlayer.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/AbstractPlayer.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
diff -Naur Original/mx/controls/streamingmedia/behaviors/NamedFrameCuePointListener.as Final/mx/controls/streamingmedia/behaviors/NamedFrameCuePointListener.as
--- Original/mx/controls/streamingmedia/behaviors/NamedFrameCuePointListener.as	2004-01-14 01:35:46.000000000 +0800
+++ Final/mx/controls/streamingmedia/behaviors/NamedFrameCuePointListener.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,10 +1,9 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.CuePoint;
 import mx.controls.streamingmedia.ICuePointHolder;
 import mx.controls.streamingmedia.Tracer;
 
@@ -54,7 +53,7 @@
 	public function NamedFrameCuePointListener(aTarget:MovieClip, shouldStop:Boolean)
 	{
 		_targetClip = aTarget;
-		_stop = shouldStop
+		_stop = shouldStop;
 	}
 
 	/**
diff -Naur Original/mx/controls/streamingmedia/behaviors/ObjectCuePointListener.as Final/mx/controls/streamingmedia/behaviors/ObjectCuePointListener.as
--- Original/mx/controls/streamingmedia/behaviors/ObjectCuePointListener.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/behaviors/ObjectCuePointListener.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,10 +1,9 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.CuePoint;
 import mx.controls.streamingmedia.ICuePointHolder;
 import mx.controls.streamingmedia.Tracer;
 
diff -Naur Original/mx/controls/streamingmedia/behaviors/SlideCuePointListener.as Final/mx/controls/streamingmedia/behaviors/SlideCuePointListener.as
--- Original/mx/controls/streamingmedia/behaviors/SlideCuePointListener.as	2004-01-14 01:35:46.000000000 +0800
+++ Final/mx/controls/streamingmedia/behaviors/SlideCuePointListener.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,12 +1,11 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.Tracer;
-import mx.controls.streamingmedia.CuePoint;
 import mx.controls.streamingmedia.ICuePointHolder;
+import mx.controls.streamingmedia.Tracer;
 import mx.screens.Slide;
 
 /**
diff -Naur Original/mx/controls/streamingmedia/Chrome.as Final/mx/controls/streamingmedia/Chrome.as
--- Original/mx/controls/streamingmedia/Chrome.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/Chrome.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
diff -Naur Original/mx/controls/streamingmedia/config/CuePoint.as Final/mx/controls/streamingmedia/config/CuePoint.as
--- Original/mx/controls/streamingmedia/config/CuePoint.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/config/CuePoint.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,8 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.Tracer;
 import mx.controls.streamingmedia.config.MediaConfig;
+import mx.controls.streamingmedia.Tracer;
 
 class mx.controls.streamingmedia.config.CuePoint
 extends MovieClip
@@ -89,12 +89,12 @@
 		// Create listeners for the text fields.
 		// The onKillFocus is *not* called if the user clicks out of the
 		// configuration panel.
-		_nameTextField.onChanged = function() { _parent.updateData() };
-		_hoursTextField.onChanged = function() { _parent.updateData() };
-		_minutesTextField.onChanged = function() { _parent.updateData() };
-		_secondsTextField.onChanged = function() { _parent.updateData() };
-		_msTextField.onChanged = function() { _parent.updateData() };
-		_frameTextField.onChanged = function() { _parent.updateData() };
+		_nameTextField.onChanged = function() { _parent.updateData(); };
+		_hoursTextField.onChanged = function() { _parent.updateData(); };
+		_minutesTextField.onChanged = function() { _parent.updateData(); };
+		_secondsTextField.onChanged = function() { _parent.updateData(); };
+		_msTextField.onChanged = function() { _parent.updateData(); };
+		_frameTextField.onChanged = function() { _parent.updateData(); };
 
 		// Restrict the characters that can be entered into the text fields
 		_nameTextField.restrict = "a-zA-Z0-9_\\-";
diff -Naur Original/mx/controls/streamingmedia/config/CuePointEditor.as Final/mx/controls/streamingmedia/config/CuePointEditor.as
--- Original/mx/controls/streamingmedia/config/CuePointEditor.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/config/CuePointEditor.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,11 +4,10 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.Tracer;
-import mx.controls.streamingmedia.config.CuePointList
-import mx.controls.streamingmedia.config.MediaConfig;
 import mx.containers.ScrollPane;
 import mx.controls.Label;
+import mx.controls.streamingmedia.config.CuePointList;
+import mx.controls.streamingmedia.config.MediaConfig;
 
 
 class mx.controls.streamingmedia.config.CuePointEditor
diff -Naur Original/mx/controls/streamingmedia/config/CuePointList.as Final/mx/controls/streamingmedia/config/CuePointList.as
--- Original/mx/controls/streamingmedia/config/CuePointList.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/config/CuePointList.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,7 +4,6 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.Tracer;
 import mx.containers.ScrollPane;
 
 class mx.controls.streamingmedia.config.CuePointList
@@ -47,7 +46,7 @@
 			throw new Error("ERROR: The cue point must have a valid row number");
 		
 		var priorHeight:Number = this._height;
-		var depth:Number = this.getNextHighestDepth()
+		var depth:Number = this.getNextHighestDepth();
 		var initObj:Object = { name:name, seconds:seconds, row:row };
 //		Tracer.trace("CuePointList.addCuePoint: initObj=" + initObj.name + ", " + initObj.seconds + ", " + initObj.row);
 		this.attachMovie("CuePoint", "cp" + depth, depth, initObj);
diff -Naur Original/mx/controls/streamingmedia/config/DisplayControls.as Final/mx/controls/streamingmedia/config/DisplayControls.as
--- Original/mx/controls/streamingmedia/config/DisplayControls.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/config/DisplayControls.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,15 +4,13 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.ComboBox;
 import mx.controls.CheckBox;
 import mx.controls.Label;
 import mx.controls.RadioButton;
 import mx.controls.RadioButtonGroup;
-import mx.controls.TextInput;
-import mx.controls.streamingmedia.Tracer;
 import mx.controls.streamingmedia.config.MediaConfig;
 import mx.controls.streamingmedia.config.VideoTime;
+import mx.controls.streamingmedia.Tracer;
 
 class mx.controls.streamingmedia.config.DisplayControls
 {
diff -Naur Original/mx/controls/streamingmedia/config/FrameVideoTime.as Final/mx/controls/streamingmedia/config/FrameVideoTime.as
--- Original/mx/controls/streamingmedia/config/FrameVideoTime.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/config/FrameVideoTime.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,13 +1,13 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.Tracer;
+import mx.controls.ComboBox;
 import mx.controls.streamingmedia.config.MediaConfig;
 import mx.controls.streamingmedia.config.VideoTime;
-import mx.controls.ComboBox;
+import mx.controls.streamingmedia.Tracer;
 
 class mx.controls.streamingmedia.config.FrameVideoTime
 extends MovieClip
@@ -38,7 +38,7 @@
 		// Initial values
 		var x:Object = _root.xch;
 		var totalTime:Number = x[videoTime.getVariableName("totalTime")];
-		MediaConfig.activateFrameFps()
+		MediaConfig.activateFrameFps();
 		var fps:Number = MediaConfig.getFps();
 
 		var hmsf:Array = MediaConfig.decomposeSecondsToFrames(totalTime, fps);
diff -Naur Original/mx/controls/streamingmedia/config/MediaConfig.as Final/mx/controls/streamingmedia/config/MediaConfig.as
--- Original/mx/controls/streamingmedia/config/MediaConfig.as	2003-12-02 18:30:10.000000000 +0800
+++ Final/mx/controls/streamingmedia/config/MediaConfig.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,9 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.config.CuePointEditor;
-import mx.controls.streamingmedia.Tracer;
 import mx.containers.ScrollPane;
+import mx.controls.streamingmedia.config.CuePointEditor;
 import mx.styles.CSSStyleDeclaration;
 
 /**
diff -Naur Original/mx/controls/streamingmedia/config/MsVideoTime.as Final/mx/controls/streamingmedia/config/MsVideoTime.as
--- Original/mx/controls/streamingmedia/config/MsVideoTime.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/config/MsVideoTime.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,12 +1,12 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.Tracer;
 import mx.controls.streamingmedia.config.MediaConfig;
 import mx.controls.streamingmedia.config.VideoTime;
+import mx.controls.streamingmedia.Tracer;
 
 class mx.controls.streamingmedia.config.MsVideoTime
 extends MovieClip
diff -Naur Original/mx/controls/streamingmedia/config/PlayerControls.as Final/mx/controls/streamingmedia/config/PlayerControls.as
--- Original/mx/controls/streamingmedia/config/PlayerControls.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/config/PlayerControls.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,15 +1,13 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.CheckBox;
 import mx.controls.Label;
 import mx.controls.RadioButton;
 import mx.controls.RadioButtonGroup;
 import mx.controls.streamingmedia.Tracer;
-import mx.controls.streamingmedia.config.MediaConfig;
 
 class mx.controls.streamingmedia.config.PlayerControls
 {
diff -Naur Original/mx/controls/streamingmedia/config/VideoTime.as Final/mx/controls/streamingmedia/config/VideoTime.as
--- Original/mx/controls/streamingmedia/config/VideoTime.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/config/VideoTime.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -6,10 +6,10 @@
 //****************************************************************************
 import mx.controls.CheckBox;
 import mx.controls.Label;
+import mx.controls.streamingmedia.config.DisplayControls;
+import mx.controls.streamingmedia.config.FrameVideoTime;
 import mx.controls.streamingmedia.config.MediaConfig;
 import mx.controls.streamingmedia.config.MsVideoTime;
-import mx.controls.streamingmedia.config.FrameVideoTime;
-import mx.controls.streamingmedia.config.DisplayControls;
 import mx.controls.streamingmedia.Tracer;
 
 class mx.controls.streamingmedia.config.VideoTime
diff -Naur Original/mx/controls/streamingmedia/FLVPlayer.as Final/mx/controls/streamingmedia/FLVPlayer.as
--- Original/mx/controls/streamingmedia/FLVPlayer.as	2004-01-16 05:31:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/FLVPlayer.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,11 +5,10 @@
 //this product.
 //****************************************************************************
 
-import mx.controls.streamingmedia.IPlayer;
 import mx.controls.streamingmedia.AbstractPlayer;
+import mx.controls.streamingmedia.IPlayer;
 import mx.controls.streamingmedia.PlayerNetStream;
 import mx.controls.streamingmedia.StreamingMediaConstants;
-import mx.controls.streamingmedia.Tracer;
 
 /**
  * FLVPlayer contains the logic to play FLV streaming media files.
diff -Naur Original/mx/controls/streamingmedia/FullScreenToggle.as Final/mx/controls/streamingmedia/FullScreenToggle.as
--- Original/mx/controls/streamingmedia/FullScreenToggle.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/FullScreenToggle.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,11 +4,11 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.core.ScrollView;
-import mx.controls.MediaPlayback;
 import mx.controls.MediaController;
+import mx.controls.MediaPlayback;
 import mx.controls.streamingmedia.FullScreenToggleControl;
 import mx.controls.streamingmedia.Tracer;
+import mx.core.ScrollView;
 
 /**
  * FullScreenToggle toggles the display of the streaming media player between 
@@ -111,10 +111,10 @@
 			var info:Object = getContainerInfo();
 			_player.setSize(info.width, info.height);
 
+			var scr = mx.managers.SystemManager.screen;
 			if (info.origin)
 			{
 				// Take into account the fact that the stage origin may be offset
-				var scr = mx.managers.SystemManager.screen;
 				Tracer.trace("FullScreenToggle.displayFull: scr=(" + scr.x + "," + scr.y + ")");
 				_player._x = scr.x;
 				_player._y = scr.y;
diff -Naur Original/mx/controls/streamingmedia/FullScreenToggleControl.as Final/mx/controls/streamingmedia/FullScreenToggleControl.as
--- Original/mx/controls/streamingmedia/FullScreenToggleControl.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/FullScreenToggleControl.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,9 +4,9 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
+import mx.controls.MediaController;
 import mx.controls.streamingmedia.FullScreenToggle;
 import mx.controls.streamingmedia.Tracer;
-import mx.controls.MediaController;
 
 class mx.controls.streamingmedia.FullScreenToggleControl
 extends MovieClip
diff -Naur Original/mx/controls/streamingmedia/HMiniPlayBarTray.as Final/mx/controls/streamingmedia/HMiniPlayBarTray.as
--- Original/mx/controls/streamingmedia/HMiniPlayBarTray.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/HMiniPlayBarTray.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
diff -Naur Original/mx/controls/streamingmedia/HPlayBarTray.as Final/mx/controls/streamingmedia/HPlayBarTray.as
--- Original/mx/controls/streamingmedia/HPlayBarTray.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/HPlayBarTray.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,10 +1,10 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.Tracer;
+
 
 /**
  * The tray of the play bar.
diff -Naur Original/mx/controls/streamingmedia/ICompletionMonitor.as Final/mx/controls/streamingmedia/ICompletionMonitor.as
--- Original/mx/controls/streamingmedia/ICompletionMonitor.as	2003-07-30 16:01:08.000000000 +0800
+++ Final/mx/controls/streamingmedia/ICompletionMonitor.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-/**
+﻿/**
  * This interface defines how one interacts with a progress bar that tracks
  * progress from 0 to 100 percent.
  *
diff -Naur Original/mx/controls/streamingmedia/IPlayer.as Final/mx/controls/streamingmedia/IPlayer.as
--- Original/mx/controls/streamingmedia/IPlayer.as	2004-01-16 05:31:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/IPlayer.as	2008-01-06 05:12:35.000000000 +0900
@@ -30,7 +30,7 @@
 	/**
 	 * Stop playback of the media without moving the playhead.
 	 */
-	public function pause():Void
+	public function pause():Void;
 
 	/**
 	 * Stop playback of the media and reset the playhead to zero.
diff -Naur Original/mx/controls/streamingmedia/LoadBar.as Final/mx/controls/streamingmedia/LoadBar.as
--- Original/mx/controls/streamingmedia/LoadBar.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/LoadBar.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,7 +5,6 @@
 //this product.
 //****************************************************************************
 import mx.controls.MediaController;
-import mx.controls.streamingmedia.Tracer;
 
 /**
  * The load bar that indicates how much of the streaming media has 
@@ -212,7 +211,7 @@
 	{
 		var percent:Number = 100 * x / (this.getActualWidth() - 2);
 //		Tracer.trace("LoadBar.xToPercent: " + x + "->" + percent);
-		return percent
+		return percent;
 	}
 
 	/**
@@ -234,7 +233,7 @@
 	{
 		var percent:Number = 100 * (y - 0) / (this.getActualHeight() - 2);
 //		Tracer.trace("LoadBar.xToPercent: " + x + "->" + percent);
-		return percent
+		return percent;
 	}
 
 	/**
diff -Naur Original/mx/controls/streamingmedia/LoudButton.as Final/mx/controls/streamingmedia/LoudButton.as
--- Original/mx/controls/streamingmedia/LoudButton.as	2003-09-03 18:49:22.000000000 +0800
+++ Final/mx/controls/streamingmedia/LoudButton.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,8 +5,6 @@
 //this product.
 //****************************************************************************
 import mx.controls.SimpleButton;
-import mx.controls.streamingmedia.Tracer;
-import mx.controls.streamingmedia.VolumeControl;
 
 /**
  * Processing code for a click on the Loud button.
diff -Naur Original/mx/controls/streamingmedia/MiniPlayBar.as Final/mx/controls/streamingmedia/MiniPlayBar.as
--- Original/mx/controls/streamingmedia/MiniPlayBar.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/MiniPlayBar.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,7 +5,6 @@
 //this product.
 //****************************************************************************
 import mx.controls.MediaController;
-import mx.controls.streamingmedia.Tracer;
 
 /**
  * The load bar that indicates how much of the streaming media has 
@@ -189,7 +188,7 @@
 	{
 		var percent:Number = 100 * x / (this.getWidth() - 2);
 //		Tracer.trace("MiniPlayBar.xToPercent: " + x + "->" + percent);
-		return percent
+		return percent;
 	}
 
 	/**
@@ -211,7 +210,7 @@
 	{
 		var percent:Number = 100 * (y - 1) / (this.getActualHeight() - 3);
 //		Tracer.trace("MiniPlayBar.yToPercent: " + y + "->" + percent);
-		return percent
+		return percent;
 	}
 
 	/**
diff -Naur Original/mx/controls/streamingmedia/MP3Player.as Final/mx/controls/streamingmedia/MP3Player.as
--- Original/mx/controls/streamingmedia/MP3Player.as	2004-01-22 01:55:46.000000000 +0800
+++ Final/mx/controls/streamingmedia/MP3Player.as	2008-01-06 05:12:35.000000000 +0900
@@ -6,7 +6,6 @@
 //****************************************************************************
 import mx.controls.streamingmedia.AbstractPlayer;
 import mx.controls.streamingmedia.IPlayer;
-import mx.controls.streamingmedia.Tracer;
 import mx.controls.streamingmedia.StreamingMediaConstants;
 
 /**
@@ -19,7 +18,7 @@
 implements IPlayer
 {
 	/** A constant that indicates that the sound should stop playing once it loads */
-	public static var STOP:Number = -1
+	public static var STOP:Number = -1;
 
 	private var _sound:Sound;
 	private var _soundHolder:MovieClip;
diff -Naur Original/mx/controls/streamingmedia/MuteButton.as Final/mx/controls/streamingmedia/MuteButton.as
--- Original/mx/controls/streamingmedia/MuteButton.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/MuteButton.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,8 +5,6 @@
 //this product.
 //****************************************************************************
 import mx.controls.SimpleButton;
-import mx.controls.streamingmedia.Tracer;
-import mx.controls.streamingmedia.VolumeControl;
 
 /**
  * Processing code for a click on the Mute button.
diff -Naur Original/mx/controls/streamingmedia/PauseButton.as Final/mx/controls/streamingmedia/PauseButton.as
--- Original/mx/controls/streamingmedia/PauseButton.as	2003-07-30 16:01:08.000000000 +0800
+++ Final/mx/controls/streamingmedia/PauseButton.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,6 +1,5 @@
 ﻿import mx.controls.Button;
 import mx.controls.MediaController;
-import mx.controls.streamingmedia.Tracer;
 
 /**
  * Processing code for a click on the Pause button.
diff -Naur Original/mx/controls/streamingmedia/PlayBar.as Final/mx/controls/streamingmedia/PlayBar.as
--- Original/mx/controls/streamingmedia/PlayBar.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/PlayBar.as	2008-01-06 05:12:35.000000000 +0900
@@ -6,7 +6,6 @@
 //****************************************************************************
 import mx.controls.MediaController;
 import mx.controls.streamingmedia.PlayBarThumb;
-import mx.controls.streamingmedia.Tracer;
 
 /**
  * The load bar that indicates how much of the streaming media has 
diff -Naur Original/mx/controls/streamingmedia/PlayBarThumb.as Final/mx/controls/streamingmedia/PlayBarThumb.as
--- Original/mx/controls/streamingmedia/PlayBarThumb.as	2004-01-21 04:48:34.000000000 +0800
+++ Final/mx/controls/streamingmedia/PlayBarThumb.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,9 +4,9 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
+import mx.controls.MediaController;
 import mx.controls.streamingmedia.PlayBar;
 import mx.controls.streamingmedia.StreamingMediaConstants;
-import mx.controls.MediaController;
 
 /**
  * The draggable thumb of the play bar that lets the user see and adjust
diff -Naur Original/mx/controls/streamingmedia/PlayerNetStream.as Final/mx/controls/streamingmedia/PlayerNetStream.as
--- Original/mx/controls/streamingmedia/PlayerNetStream.as	2004-01-16 05:31:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/PlayerNetStream.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,10 +4,9 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.RTMPPlayer;
 import mx.controls.streamingmedia.FLVPlayer;
 import mx.controls.streamingmedia.IPlayer;
-import mx.controls.streamingmedia.Tracer;
+import mx.controls.streamingmedia.RTMPPlayer;
 
 /**
  * A subclass of NetStream that is tailored to work with the FLVPlayer
diff -Naur Original/mx/controls/streamingmedia/RTMPConnection.as Final/mx/controls/streamingmedia/RTMPConnection.as
--- Original/mx/controls/streamingmedia/RTMPConnection.as	2004-01-14 01:35:46.000000000 +0800
+++ Final/mx/controls/streamingmedia/RTMPConnection.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,7 +5,6 @@
 //this product.
 //****************************************************************************
 import mx.controls.streamingmedia.RTMPPlayer;
-import mx.controls.streamingmedia.Tracer;
 
 /**
  * A subclass of NetConnection that is tailored to work with the RTMPPlayer
diff -Naur Original/mx/controls/streamingmedia/RTMPPlayer.as Final/mx/controls/streamingmedia/RTMPPlayer.as
--- Original/mx/controls/streamingmedia/RTMPPlayer.as	2004-01-16 05:31:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/RTMPPlayer.as	2008-01-06 05:12:35.000000000 +0900
@@ -7,12 +7,11 @@
 /*************************************************************************************************
 RTMPPlayer.as
 *************************************************************************************************/
-import mx.controls.streamingmedia.IPlayer;
 import mx.controls.streamingmedia.AbstractPlayer;
+import mx.controls.streamingmedia.IPlayer;
 import mx.controls.streamingmedia.PlayerNetStream;
-import mx.controls.streamingmedia.StreamingMediaConstants;
 import mx.controls.streamingmedia.RTMPConnection;
-import mx.controls.streamingmedia.Tracer;
+import mx.controls.streamingmedia.StreamingMediaConstants;
 
 /**
  * RTMPPlayer contains the logic to play FLV streaming media files from Flash Communication Server.
@@ -392,14 +391,14 @@
 				{
 					clearInterval(this._player._conn_Id);
 
-					_nc_rtmpt.onStatus = null;
-					_nc_rtmpt.close();
-					_nc_rtmpt = null;
+					this._nc_rtmpt.onStatus = null;
+					this._nc_rtmpt.close();
+					this._nc_rtmpt = null;
 
 					this._player.startStream( this );
 					this.popConnection();
 				}
-			}
+			};
 
 			_nc_rtmp.connect("rtmp:" + _appUrl, _streamName);
 		}
@@ -411,14 +410,14 @@
 			{
 				if (info.code == "NetConnection.Connect.Success")
 				{
-					_nc_rtmp.onStatus = null;
-					_nc_rtmp.close();
-					_nc_rtmp = null;
+					this._nc_rtmp.onStatus = null;
+					this._nc_rtmp.close();
+					this._nc_rtmp = null;
 
 					this._player.startStream( this );
 					this.popConnection();
 				}
-			}
+			};
 			if (_protocol == "rtmpt")
 			{
 				_nc_rtmpt.connect("rtmpt:" + _appUrl, _streamName);
diff -Naur Original/mx/controls/streamingmedia/ScreenAccommodator.as Final/mx/controls/streamingmedia/ScreenAccommodator.as
--- Original/mx/controls/streamingmedia/ScreenAccommodator.as	2004-01-14 01:35:46.000000000 +0800
+++ Final/mx/controls/streamingmedia/ScreenAccommodator.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,8 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.screens.Screen;
 import mx.controls.streamingmedia.Tracer;
+import mx.screens.Screen;
 
 /**
  * ScreenAccommodator manages a Media component inside a screen.
diff -Naur Original/mx/controls/streamingmedia/StreamingMediaConstants.as Final/mx/controls/streamingmedia/StreamingMediaConstants.as
--- Original/mx/controls/streamingmedia/StreamingMediaConstants.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/StreamingMediaConstants.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
diff -Naur Original/mx/controls/streamingmedia/ToStartButton.as Final/mx/controls/streamingmedia/ToStartButton.as
--- Original/mx/controls/streamingmedia/ToStartButton.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/ToStartButton.as	2008-01-06 05:12:35.000000000 +0900
@@ -6,7 +6,6 @@
 //****************************************************************************
 import mx.controls.MediaController;
 import mx.controls.SimpleButton;
-import mx.controls.streamingmedia.Tracer;
 
 /**
  * Processing code for a click on the ToStart button.
diff -Naur Original/mx/controls/streamingmedia/Tracer.as Final/mx/controls/streamingmedia/Tracer.as
--- Original/mx/controls/streamingmedia/Tracer.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/Tracer.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
diff -Naur Original/mx/controls/streamingmedia/VMiniPlayBarTray.as Final/mx/controls/streamingmedia/VMiniPlayBarTray.as
--- Original/mx/controls/streamingmedia/VMiniPlayBarTray.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/VMiniPlayBarTray.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
diff -Naur Original/mx/controls/streamingmedia/VolumeControl.as Final/mx/controls/streamingmedia/VolumeControl.as
--- Original/mx/controls/streamingmedia/VolumeControl.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/VolumeControl.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
diff -Naur Original/mx/controls/streamingmedia/VolumeControlHandle.as Final/mx/controls/streamingmedia/VolumeControlHandle.as
--- Original/mx/controls/streamingmedia/VolumeControlHandle.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/VolumeControlHandle.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,7 +4,6 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.PlayBar;
 import mx.controls.MediaController;
 import mx.controls.streamingmedia.VolumeControl;
 
diff -Naur Original/mx/controls/streamingmedia/VPlayBarTray.as Final/mx/controls/streamingmedia/VPlayBarTray.as
--- Original/mx/controls/streamingmedia/VPlayBarTray.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/streamingmedia/VPlayBarTray.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,10 +1,10 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.controls.streamingmedia.Tracer;
+
 
 /**
  * The tray of the vertical play bar.
diff -Naur Original/mx/controls/TextArea.as Final/mx/controls/TextArea.as
--- Original/mx/controls/TextArea.as	2004-06-29 20:17:36.000000000 +0800
+++ Final/mx/controls/TextArea.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,8 +5,8 @@
 //this product.
 //****************************************************************************
 
-import mx.core.UIObject;
 import mx.core.ScrollView;
+import mx.core.UIObject;
 
 /**
 * @tiptext change event
@@ -37,8 +37,7 @@
 */
 	static var symbolOwner:Object = TextArea;
 
-	// Version string
-#include "../core/ComponentVersion.as"
+	// Version string//#include "../core/ComponentVersion.as"
 
 /**
 * name of this class
@@ -229,7 +228,7 @@
 */
 	[Inspectable(defaultValue="")]
 	[Bindable]
-	[ChangeEvent("change"]
+	[ChangeEvent("change")]
 	function get text():String
 	{
 		return getText();
@@ -365,16 +364,16 @@
 		label.owner = this;
 		label.onSetFocus = function(x)
 		{
-			_parent.onSetFocus(x);
-		}
+			this._parent.onSetFocus(x);
+		};
 		label.onKillFocus = function(x)
 		{
-			_parent.onKillFocus(x);
-		}
+			this._parent.onKillFocus(x);
+		};
 		label.drawFocus = function(b)
 		{
-			_parent.drawFocus(b);
-		}
+			this._parent.drawFocus(b);
+		};
 
 		// only gets called on keyboard not programmatic setting of text
 		label.onChanged = function()
@@ -385,7 +384,7 @@
 
 			// Send a "valueChanged" event
 			this.owner.dispatchValueChangedEvent(this.owner.text);
-		}
+		};
 
 
 		label.onScroller = function()
@@ -393,7 +392,7 @@
 			//trace("label :: onScroller");
 			this.owner.hPosition = this.hscroll;
 			this.owner.vPosition = this.scroll - 1;
-		}
+		};
 		if (text==undefined) {
 			text="";
 		}
diff -Naur Original/mx/controls/TextInput.as Final/mx/controls/TextInput.as
--- Original/mx/controls/TextInput.as	2004-04-09 21:00:04.000000000 +0800
+++ Final/mx/controls/TextInput.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,8 +5,8 @@
 //this product.
 //****************************************************************************
 
-import mx.core.UIObject;
 import mx.core.UIComponent;
+import mx.core.UIObject;
 import mx.skins.RectBorder;
 
 /**
@@ -44,8 +44,7 @@
 */
     static var symbolOwner:Object = mx.controls.TextInput;
 
-	// Version string
-#include "../core/ComponentVersion.as"
+	// Version string//#include "../core/ComponentVersion.as"
 
 /**
 * name of this class
@@ -127,7 +126,6 @@
 	// override of addEventListener so we can trap and report Enter key
     function addEventListener(event:String, handler):Void
     {
-
 	    if (event == "enter")
     	{
       		addEnterEvents();
@@ -164,7 +162,6 @@
     	super.init();
 
     	label.styleName = this;
-
 	    tabChildren = true;
     	tabEnabled = false;
 		focusTextField = label;
@@ -174,16 +171,16 @@
 
 		label.onSetFocus = function()
 		{
-		  	_parent.onSetFocus();
-		}
+		  	this._parent.onSetFocus();
+		};
 		label.onKillFocus = function(n)
 		{
-		  	_parent.onKillFocus(n);
-		}
+		  	this._parent.onKillFocus(n);
+		};
 		label.drawFocus = function(b)
 		{
-		  	_parent.drawFocus(b);
-		}
+		  	this._parent.drawFocus(b);
+		};
 		label.onChanged = onLabelChanged;
   	}
 
@@ -200,7 +197,7 @@
 * @private
 * broadcast change event if text is changed ('this' is label TextField)
 */
-  	function onLabelChanged(Void):Void
+  	function onLabelChanged(changedField:TextField):Void
   	{
 		_parent.dispatchEvent({type:"change"});
 
@@ -215,6 +212,7 @@
     function createChildren(Void):Void
   	{
 		super.createChildren();
+		
 		if (border_mc == undefined)
 		{
 			createClassObject(_global.styles.rectBorderClass, "border_mc", 0, {styleName:this});
@@ -576,15 +574,17 @@
 * @tiptext
 * @helpid 3199
 */
-  	function set  _accProps(val:Object)
+  	function set _accProps(val:Object)
   	{
 		label._accProps = val;
   	}
 
-  	function get  _accProps():Object
+  	function get _accProps():Object
   	{
 		return label._accProps;
   	}
 
+  	private static var RectBorderDependency = mx.skins.halo.RectBorder;
+  	
 }
 
diff -Naur Original/mx/controls/Tree.as Final/mx/controls/Tree.as
--- Original/mx/controls/Tree.as	2004-03-25 21:00:18.000000000 +0800
+++ Final/mx/controls/Tree.as	2008-01-06 05:12:35.000000000 +0900
@@ -6,7 +6,6 @@
 //****************************************************************************
 
 import mx.controls.List;
-import mx.controls.treeclasses.TreeRow;
 import mx.controls.treeclasses.TreeDataProvider;
 import mx.effects.Tween;
 
@@ -40,8 +39,7 @@
 	static var symbolName : String = "Tree";
 	static var symbolOwner : Object = Tree;
 	var className : String = "Tree";
-	
-#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 	static var mixIt2 : Boolean = TreeDataProvider.Initialize(XMLNode);
 
@@ -798,5 +796,6 @@
 [Bindable(type="XML")]
 var _inherited_dataProvider:Object;
 
+	private static var TreeRowDependency = mx.controls.treeclasses.TreeRow;
 }
 
diff -Naur Original/mx/controls/treeclasses/TreeDataProvider.as Final/mx/controls/treeclasses/TreeDataProvider.as
--- Original/mx/controls/treeclasses/TreeDataProvider.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/treeclasses/TreeDataProvider.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,11 +1,11 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
 
-import mx.events.EventDispatcher
+import mx.events.EventDispatcher;
 
 /* ============================================================================
 
@@ -35,9 +35,9 @@
 
 	// Initialize is called to apply the mixinProps above to the given object's prototype.
 	// Typical usage : TreeDataProvider.Initialize(XMLNode);
-	static function Initialize(obj:Object) : Boolean
+	static function Initialize(func:Function) : Boolean
 	{
-		obj = obj.prototype;
+		var obj = func.prototype;
 		if (obj.addTreeNode!=undefined) return false;
 		var m = mixinProps;
 		var l = m.length;
@@ -71,12 +71,12 @@
 		var g = function(Void)
 		{
 			return this["get" + p]();
-		}
+		};
 		if (setter) {
 			s = function(val)
 			{
 				this["set" + p](val);
-			}
+			};
 		}
 		obj.addProperty(propName, g, s);
 
diff -Naur Original/mx/controls/treeclasses/TreeRow.as Final/mx/controls/treeclasses/TreeRow.as
--- Original/mx/controls/treeclasses/TreeRow.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/treeclasses/TreeRow.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
diff -Naur Original/mx/controls/UIScrollBar.as Final/mx/controls/UIScrollBar.as
--- Original/mx/controls/UIScrollBar.as	2004-06-24 20:00:20.000000000 +0800
+++ Final/mx/controls/UIScrollBar.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,8 +5,8 @@
 //this product. 
 //****************************************************************************
 
+import mx.controls.scrollClasses.ScrollBar;
 import mx.core.UIObject;
-import mx.controls.scrollClasses.ScrollBar
 [IconFile("VScrollBar.png")]
 
 class mx.controls.UIScrollBar extends ScrollBar
@@ -18,17 +18,17 @@
 	var clipParameters:Object = {_targetInstanceName:1,horizontal:1};
 	static var mergedClipParameters:Boolean = UIObject.mergeClipParameters(UIScrollBar.prototype.clipParameters);
 	var textField:TextField;
-	var wasHorizontal:Boolean
-	var hScroller:Object 
-	var vScroller:Object
-	var synchScroll:Number
+	var wasHorizontal:Boolean;
+	var hScroller:Object; 
+	var vScroller:Object;
+	var synchScroll:Number;
 	var onChanged;
 	var onScroller;
 	
 	function UIScrollBar () 
 	{	
 	}
-	#include "../core/ComponentVersion.as"
+//#include "../core/ComponentVersion.as"
 
 	function init (Void):Void
 	{
@@ -37,9 +37,15 @@
 		horizontal = wasHorizontal;
 		if (horizontal)
 		{	
-			(textField != undefined)? super.setSize(textField._width,16) : super.setSize(__width,__height);
+			if (textField != undefined)
+				super.setSize(textField._width,16);
+			else
+				super.setSize(__width,__height);
 		}else{
-			(textField != undefined)? super.setSize(16,textField._height) : super.setSize(__width,__height);
+			if (textField != undefined) 
+				super.setSize(16,textField._height);
+			else 
+				super.setSize(__width,__height);
 		}
 		
 		if(horizontal)
@@ -54,7 +60,7 @@
 		{
 			this.hPosition = this.hscroll;
 			this.vPosition = this.scroll - 1;
-		}
+		};
 		
 		if (_targetInstanceName != undefined)
 		{
@@ -98,7 +104,7 @@
 		super.draw();
 	}
 
-	function set _targetInstanceName(t:MovieClip)
+	function set _targetInstanceName(t:TextField)
 	{
 		if (t == undefined)
 		 {
@@ -155,7 +161,7 @@
 	{
 		//rotate sb 
 		wasHorizontal = v;
-		if ( v and initializing ) {
+		if ( v && initializing ) {
 			if (_rotation ==  90 ) return;
 			_xscale = -100;
 			_rotation = -90;
@@ -176,7 +182,7 @@
 				if (_rotation == -90 ) 
 				{
 					_rotation = 0;
-					_xscale = 100
+					_xscale = 100;
 				}
 			}
 		}
@@ -221,7 +227,7 @@
 			this.onChanged = function(Void):Void
 			{
 				this.onTextChanged();
-			}
+			};
 			
 			this.onScroller = function(Void):Void
 			{
@@ -236,7 +242,7 @@
 						this.scrollPosition = this.textField.hscroll;
 					}
 				}
-			} 
+			};
 			textField.addListener(this);
 			textField.watch("text", callback);
 			textField.watch("htmlText", callback);	
@@ -273,5 +279,9 @@
 	function dispatchScrollEvent(detail:String):Void
 	{
 		dispatchEvent({type: "scroll"});
-	}	
+	}
+	
+	private static var VScrollBarDependency = mx.controls.VScrollBar;
+	private static var HScrollBarDependency = mx.controls.HScrollBar;
+		
 }
\ No newline at end of file
diff -Naur Original/mx/controls/VScrollBar.as Final/mx/controls/VScrollBar.as
--- Original/mx/controls/VScrollBar.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/controls/VScrollBar.as	2008-01-06 05:12:35.000000000 +0900
@@ -28,8 +28,7 @@
 */
 	static var symbolOwner:Object = mx.core.UIComponent;
 
-	// Version string
-#include "../core/ComponentVersion.as"
+	// Version string//#include "../core/ComponentVersion.as"
 
 /**
 * name of this class
diff -Naur Original/mx/core/ComponentVersion.as Final/mx/core/ComponentVersion.as
--- Original/mx/core/ComponentVersion.as	2005-08-11 10:59:36.000000000 +0800
+++ Final/mx/core/ComponentVersion.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,4 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-	static var version:String = "2.0.2.126";
+
+interface mx.core.ComponentVersion 
+{
+	//public static var version:String = "2.0.2.126";
+}
\ No newline at end of file
diff -Naur Original/mx/core/ext/UIComponentExtensions.as Final/mx/core/ext/UIComponentExtensions.as
--- Original/mx/core/ext/UIComponentExtensions.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/core/ext/UIComponentExtensions.as	2008-01-06 05:12:35.000000000 +0900
@@ -21,7 +21,7 @@
 		TextField.prototype.setFocus = function()
 		{
 			Selection.setFocus(this);
-		}
+		};
 
 		TextField.prototype.onSetFocus = function(oldFocus)
 		{
@@ -30,7 +30,7 @@
 				if (this.getFocusManager().bDrawFocus)
 					this.drawFocus(true);
 			}
-		}
+		};
 
 		TextField.prototype.onKillFocus = function(oldFocus)
 		{
@@ -38,7 +38,7 @@
 			{
 				this.drawFocus(false);
 			}
-		}
+		};
 
 		TextField.prototype.drawFocus = UIComponent.prototype.drawFocus;
 		TextField.prototype.getFocusManager = UIComponent.prototype.getFocusManager;
@@ -52,5 +52,6 @@
  	static var UIComponentExtended = Extensions();
    	static var UIComponentDependency = mx.core.UIComponent;
    	static var FocusManagerDependency = mx.managers.FocusManager;
+   	static var FocusRectDependency = mx.skins.halo.FocusRect;
    	static var OverlappedWindowsDependency = mx.managers.OverlappedWindows;
 }
diff -Naur Original/mx/core/ext/UIObjectExtensions.as Final/mx/core/ext/UIObjectExtensions.as
--- Original/mx/core/ext/UIObjectExtensions.as	2004-05-25 21:00:04.000000000 +0800
+++ Final/mx/core/ext/UIObjectExtensions.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,9 +5,9 @@
 //this product.
 //****************************************************************************
 import mx.core.UIObject;
+import mx.events.UIEventDispatcher;
 import mx.skins.SkinElement;
 import mx.styles.CSSStyleDeclaration;
-import mx.events.UIEventDispatcher;
 
 // extensions to MovieClip and TextField to make the system work better
 class mx.core.ext.UIObjectExtensions
@@ -85,7 +85,7 @@
 		// add geometry to the textfield so is looks more like a UIObject
 		var tf = TextField.prototype;
 		addGeometry(tf, ui);
-		tf.addProperty("enabled", function() { return this.__enabled }, function(x){this.__enabled = x; this.invalidateStyle(); });
+		tf.addProperty("enabled", function() { return this.__enabled; }, function(x){this.__enabled = x; this.invalidateStyle(); });
 
 		tf.move = se.move;
 		tf.setSize = se.setSize;
@@ -93,14 +93,14 @@
 		tf.invalidateStyle = function()
 		{
 			this.invalidateFlag = true;
-		}
+		};
 
 		tf.draw = function()
 		{
 			if (this.invalidateFlag)
 			{
 				this.invalidateFlag = false;
-				var tf = this._getTextFormat();
+				tf = this._getTextFormat();
 				this.setTextFormat(tf);
 				this.setNewTextFormat(tf);
 				this.embedFonts = (tf.embedFonts == true);
@@ -116,7 +116,7 @@
 				this._visible = true;
 
 			}
-		}
+		};
 
 		tf.setColor = function(color)
 		{
@@ -124,7 +124,7 @@
 		//	tf.color = color;
 		//	this.setTextFormat(tf);
 			this.textColor = color;
-		}
+		};
 
 		tf.getStyle = mc.getStyle;
 		tf.__getTextFormat = ui.__getTextFormat;
@@ -133,12 +133,12 @@
 		tf.setValue = function(v)
 		{
 			this.text = v;
-		}
+		};
 
 		tf.getValue = function()
 		{
 			return this.text;
-		}
+		};
 
 		tf.addProperty(
 			"value",
@@ -147,7 +147,7 @@
 
 		tf._getTextFormat = function()
 		{
-			var tf = this.stylecache.tf;
+			tf = this.stylecache.tf;
 			if (tf != undefined)
 				return tf;
 
@@ -171,19 +171,19 @@
 						tf.color = this.enabledColor;
 			}
 			return tf;
-		}
+		};
 
 		// formalize the convention we're using for sizing textFields
 		tf.getPreferredWidth = function()
 		{
 			this.draw();
 			return this.textWidth + 4;
-		}
+		};
 		tf.getPreferredHeight = function()
 		{
 			this.draw();
 			return this.textHeight + 4;
-		}
+		};
 
 
 		// add a better text measuring method to TextFormat.
@@ -198,13 +198,14 @@
 				o = _root._getTextExtent;
 				o._visible = false;
 			}
+			_root._getTextExtent.embedFonts = this["embedFonts"];
 			_root._getTextExtent.text = s;
 			var z = this.align;
 			this.align = "left";
 			_root._getTextExtent.setTextFormat(this);
 			this.align = z;
 			return {width: o.textWidth, height: o.textHeight};
-		}
+		};
 
 		// set up the global objects here
 		if (_global.style == undefined)
@@ -214,8 +215,8 @@
 			// the Defaults symbol in the library is where default styles are set up
 
 			_global.cascadingStyles = true;
-			_global.styles = new Object;	// create a place to hang named StyleDeclarations
-			_global.skinRegistry = new Object; // registered SkinElements
+			_global.styles = new Object();	// create a place to hang named StyleDeclarations
+			_global.skinRegistry = new Object(); // registered SkinElements
 
 			// the player resizes and centers the stage.  We need to know what our original
 			// stage size is in order to know how we were centered.  Note that the FMX
@@ -226,7 +227,6 @@
 				_global.origHeight = Stage.height;
 				
 			}
-
 		}
 
 		var r = _root;
@@ -244,6 +244,7 @@
 	static var UIObjectExtended = Extensions();
     static var UIObjectDependency = UIObject;
     static var SkinElementDependency = SkinElement;
+    static var CSSStyleDeclarationDependency = CSSStyleDeclaration;
     static var CSSTextStylesDependency = mx.styles.CSSTextStyles;
     static var UIEventDispatcherDependency = UIEventDispatcher;
 }
diff -Naur Original/mx/core/ExternalContent.as Final/mx/core/ExternalContent.as
--- Original/mx/core/ExternalContent.as	2005-07-19 17:10:56.000000000 +0800
+++ Final/mx/core/ExternalContent.as	2008-01-06 05:12:35.000000000 +0900
@@ -5,8 +5,8 @@
 //this product.
 //****************************************************************************
 import mx.core.UIObject;
-import mx.events.UIEventDispatcher;
 import mx.core.View;
+import mx.events.UIEventDispatcher;
 
 class mx.core.ExternalContent
 {
diff -Naur Original/mx/core/MediaComponentVersion.as Final/mx/core/MediaComponentVersion.as
--- Original/mx/core/MediaComponentVersion.as	2005-08-11 10:59:36.000000000 +0800
+++ Final/mx/core/MediaComponentVersion.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,4 +4,7 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-	static var version:String = "2.0.2.126";
+
+interface mx.core.MediaComponentVersion {
+	//public static var version:String = "2.0.2.126";
+}
\ No newline at end of file
diff -Naur Original/mx/core/ScrollView.as Final/mx/core/ScrollView.as
--- Original/mx/core/ScrollView.as	2005-07-14 04:06:56.000000000 +0800
+++ Final/mx/core/ScrollView.as	2008-01-06 05:12:35.000000000 +0900
@@ -42,8 +42,8 @@
 
 */
 
-import mx.core.View;
 import mx.controls.scrollClasses.ScrollBar;
+import mx.core.View;
 
 /**
 * @tiptext scroll event
@@ -68,7 +68,7 @@
 	static var symbolOwner:Object = ScrollView;
 
 	// Version string
-#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 /**
 * name of this class
@@ -171,7 +171,7 @@
 	{
 		return getVScrollPolicy();
 	}
-	function set vScrollPolicy(policy:Object)
+	function set vScrollPolicy(policy:String)
 	{
 		setVScrollPolicy(policy);
 	}
@@ -477,7 +477,7 @@
 			i = i._parent;
 		}
 		if (sT!=undefined) {
-			var i = (delta<=0) ? 1 : -1;
+			i = (delta<=0) ? 1 : -1;
 			var l = sT.vScroller.lineScrollSize;
 			if (l==undefined) l=0;
 			l = Math.max(Math.abs(delta), l);
@@ -498,7 +498,7 @@
 	}
 
 	// if we get invalidated just call super
-	function invalidate(Void):Void
+	function invalidate():Void
 	{
 		super.invalidate();
 	}
@@ -528,14 +528,14 @@
 	{
 		var scroller:MovieClip = docObj.target;
 		var pos:Number = scroller.scrollPosition;
+		var d: String;
 		if (scroller==vScroller) {
-			var d:String = "vertical";
-			var prop:String = "__vPosition";
+			d = "vertical";
+			this.__vPosition = pos;
 		} else {
-			var d:String = "horizontal";
-			var prop:String = "__hPosition";
+			d = "horizontal";
+			this.__hPosition = pos;
 		}
-		this[prop] = pos;
 		dispatchEvent({type:"scroll", direction:d, position:pos });
 	}
 
@@ -555,5 +555,11 @@
 		super.childLoaded(obj);
 		obj.setMask(mask_mc);
 	}
+	
+	private static var HScrollBarDependency = mx.controls.HScrollBar;
+	private static var VScrollBarDependency = mx.controls.VScrollBar;
+	
+	private static var ButtonDependency = mx.controls.Button;
+	
 }
 
diff -Naur Original/mx/core/UIComponent.as Final/mx/core/UIComponent.as
--- Original/mx/core/UIComponent.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/core/UIComponent.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,7 +4,7 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.skins.SkinElement;
+//import mx.skins.SkinElement;
 import mx.core.UIObject;
 
 /**
@@ -51,7 +51,7 @@
 	static var symbolOwner:Object = mx.core.UIComponent;
 
 	// Version string
-#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 /**
 * number used to imply stretchability in preferredWidth/Height
@@ -356,5 +356,5 @@
 		// used by the Data Model to do data binding.
 		dispatchEvent({type:"valueChanged", value:value});
     }
-
+	
 }
diff -Naur Original/mx/core/UIObject.as Final/mx/core/UIObject.as
--- Original/mx/core/UIObject.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/core/UIObject.as	2008-01-06 05:12:35.000000000 +0900
@@ -6,9 +6,9 @@
 //****************************************************************************
 
 
-import mx.styles.StyleManager;
-import mx.styles.CSSStyleDeclaration;
 import mx.skins.SkinElement;
+import mx.styles.CSSStyleDeclaration;
+import mx.styles.StyleManager;
 
 /**
 * @tiptext resize event
@@ -57,7 +57,7 @@
 	static var symbolOwner:Object = UIObject;
 
 	// Version string
-#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 /**
 * @private
@@ -115,7 +115,7 @@
 	var buildDepthTable:Function;
 	var findNextAvailableDepth:Function;
 	var createChildAtDepth:Function;
-	var createClassChildAtDepth:Function
+	var createClassChildAtDepth:Function;
 
 /**
 * @see mx.accessibility.accImpl
@@ -495,7 +495,7 @@
 * @tiptext Marks an object to be redrawn on the next frame interval
 * @helpid 3966
 */
-	function invalidate(Void):Void
+	function invalidate():Void
 	{
 		invalidateFlag = true;
 		onEnterFrame = doLaterDispatcher;
@@ -504,7 +504,7 @@
 /**
 * called if just styles are changing so subclasses don't have to redraw everything
 */
-	function invalidateStyle(Void):Void
+	function invalidateStyle():Void
 	{
 		invalidate();
 	}
@@ -648,14 +648,15 @@
 		// defer the style lookup to the textfield's draw routine
 		o.__text = text;
 		// @@ this needs improvement, since margin will vary with the font and size
-	//	var margin = 4;
-	//	o.setSize(o.textWidth + margin, o.textHeight + margin);
+		//	var margin = 4;
+		//	o.setSize(o.textWidth + margin, o.textHeight + margin);
 		if (tfList == undefined)
 			tfList = new Object();
 		tfList[name] = o;
 		o.invalidateStyle();
 		invalidate();		// force redraw call
 		o.styleName = this;	// labels always inherit styles of parent unless set otherwise
+		//o.border = true; // !!!
 		return o;
 	}
 
@@ -674,6 +675,7 @@
 	function createObject(linkageName:String, id:String, depth:Number, initobj:Object):MovieClip
 	{
 		// trace("UIObject createObject: " + linkageName);
+
 		return attachMovie(linkageName, id, depth, initobj);
 	}
 
@@ -691,18 +693,18 @@
 */
 	function createClassObject(className:Function, id:String, depth:Number, initobj:Object):UIObject
 	{
-		var bSubClass:Boolean = (className.symbolName == undefined);
+		
+//		Log.out("className = " + className);
+//		Log.out("className.symbolName = " + className.symbolName);
+//		Log.out("className.symbolOwner = " + className.symbolOwner);
+//		Log.out("className.symbolOwner.symbolName = " + className.symbolOwner.symbolName);
+//		Log.out("===");
+		
+		var symbolName:String = (className.symbolName != undefined) ?
+			className.symbolName : className.symbolOwner.symbolName;
 
-		if (bSubClass)
-		{
-			Object.registerClass(className.symbolOwner.symbolName, className);
-		}
-		var o:UIObject = UIObject(createObject(className.symbolOwner.symbolName, id, depth, initobj));
-
-		if (bSubClass)
-		{
-			Object.registerClass(className.symbolOwner.symbolName, className.symbolOwner);
-		}
+		Object.registerClass(symbolName, className);
+		var o:UIObject = UIObject(createObject(symbolName, id, depth, initobj));
 
 		return o;
 	}
diff -Naur Original/mx/core/View.as Final/mx/core/View.as
--- Original/mx/core/View.as	2005-06-22 14:06:38.000000000 +0800
+++ Final/mx/core/View.as	2008-01-06 05:12:35.000000000 +0900
@@ -4,11 +4,11 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.events.UIEventDispatcher;
-import mx.core.UIObject;
-import mx.skins.RectBorder;
+//import mx.events.UIEventDispatcher;
 import mx.core.UIComponent;
+import mx.core.UIObject;
 import mx.managers.DepthManager;
+import mx.skins.RectBorder;
 
 /**
 * base class for views/containers
@@ -30,7 +30,7 @@
 	static var symbolOwner:Object = mx.core.View;
 
 	// Version string
-#include "../core/ComponentVersion.as"
+	//#include "../core/ComponentVersion.as"
 
 /**
 * name of this class
@@ -302,6 +302,7 @@
 		mx.core.ExternalContent.enableExternalContent();
 	}
 
+	private static var RectBorderDependency = mx.skins.halo.RectBorder;
 }
 
 
diff -Naur Original/mx/data/binding/Binding.as Final/mx/data/binding/Binding.as
--- Original/mx/data/binding/Binding.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/binding/Binding.as	2008-01-06 05:12:35.000000000 +0900
@@ -508,17 +508,16 @@
 	// AND this swf was compiled for Player 7 (or newer).
 	static function okToCallGetterFromSetter()
 	{
-		function setter(val)
+		var setter = function(val)
 		{ 
 			// call the getter, and save the result in value2
 			this.value2 = this.value;
-		}
-		function getter()
+		};
+		var getter = function ()
 		{ 
 			// just return a constant value
 			return 5;
-		}  
-		
+		};
 		// create a new object, and define getter/setter functions for the "value" property
 		var x = new Object();
 		x.addProperty("value", getter, setter);
@@ -562,7 +561,7 @@
 				// so we are sure that we're not inside any setters.
 				this.binding.queueForExecute(this.reverse);
 			}
-		}
+		};
 		//Debug.trace("setUpListener", endpoint.event, endpoint.component, endpoint.component.addEventListener);
 		if (endpoint.event instanceof Array)
 		{
@@ -714,7 +713,7 @@
 
 					src.component = eval(instancePath + src.component.substr(symbol.symbolPath.length));
 					dst.component = eval(instancePath + dst.component.substr(symbol.symbolPath.length));
-					new Binding(src, dst, b.format, b.is2way);
+					var temp = new Binding(src, dst, b.format, b.is2way);
 				}
 				else
 				{
@@ -723,7 +722,7 @@
 
 					src.component = eval(instancePath + src.component.substr(symbol.symbolPath.length));
 					dst.component = eval(dst.component);
-					new Binding(src, dst, b.format, b.is2way);
+					var temp = new Binding(src, dst, b.format, b.is2way);
 				}
 			}
 			else // symbol does not contain source
@@ -735,7 +734,7 @@
 
 					src.component = eval(src.component);
 					dst.component = eval(instancePath + dst.component.substr(symbol.symbolPath.length));
-					new Binding(src, dst, b.format, b.is2way);
+					var temp = new Binding(src, dst, b.format, b.is2way);
 				}
 				else
 				{
diff -Naur Original/mx/data/binding/ComponentMixins.as Final/mx/data/binding/ComponentMixins.as
--- Original/mx/data/binding/ComponentMixins.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/binding/ComponentMixins.as	2008-01-06 05:12:35.000000000 +0900
@@ -247,7 +247,7 @@
 		if (binding.dest.component == this)
 		{
 			this.getField(binding.dest.property, binding.dest.location);
-			canBeSource |= Object(binding).is2way;
+			canBeSource = Object(binding).is2way || canBeSource;
 		}
 		if (canBeSource)
 		{
@@ -518,7 +518,7 @@
 				
 				this.dispatchQueue(this.__highPrioEvents, eventObj);
 				this._databinding_original_dispatchEvent(eventObj);
-			}
+			};
 		}
 	}
 
diff -Naur Original/mx/data/binding/CustomFormatter.as Final/mx/data/binding/CustomFormatter.as
--- Original/mx/data/binding/CustomFormatter.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/binding/CustomFormatter.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       CustomFormatter.as
    Description: defines the class "mx.data.binding.CustomFormatter"
    Copyright:   Copyright (c) 2003
diff -Naur Original/mx/data/binding/CustomValidator.as Final/mx/data/binding/CustomValidator.as
--- Original/mx/data/binding/CustomValidator.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/binding/CustomValidator.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       CustomValidator.as
    Description: defines the class "mx.data.binding.CustomValidator"
    Copyright:   Copyright (c) 2003
diff -Naur Original/mx/data/binding/DataType.as Final/mx/data/binding/DataType.as
--- Original/mx/data/binding/DataType.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/binding/DataType.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       DataType.as
    Description: defines the class "mx.data.binding.DataType"
    Copyright:   Copyright (c) 2003
@@ -397,7 +397,7 @@
 		{
 			// bug# 79142 : special casing for XML and string.
 			// if there was no requestedType passed check against the type.name
-			result = null
+			result = null;
 		}
 		//Debug.trace("-4-mx.data.binding.DataType.getTypedValue", requestedType, result);
 		return result;
diff -Naur Original/mx/data/binding/Encoder.as Final/mx/data/binding/Encoder.as
--- Original/mx/data/binding/Encoder.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/binding/Encoder.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       Encoder.as
    Description: defines the class "mx.data.binding.Encoder"
    Copyright:   Copyright (c) 2003
diff -Naur Original/mx/data/binding/Kind.as Final/mx/data/binding/Kind.as
--- Original/mx/data/binding/Kind.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/binding/Kind.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       Kind.as
    Description: defines the class "mx.data.binding.Kind"
    Copyright:   Copyright (c) 2003
diff -Naur Original/mx/data/binding/Log.as Final/mx/data/binding/Log.as
--- Original/mx/data/binding/Log.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/binding/Log.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       Log.as
    Description: defines the class "mx.data.binding.Log"
    Copyright:   Copyright (c) 2003
diff -Naur Original/mx/data/binding/ObjectDumper.as Final/mx/data/binding/ObjectDumper.as
--- Original/mx/data/binding/ObjectDumper.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/binding/ObjectDumper.as	2008-01-05 20:12:55.000000000 +0900
@@ -1,36 +1,36 @@
-class mx.data.binding.ObjectDumper
-{	
-	public static function toString(obj, showFunctions, showUndefined, showXMLstructures, maxLineLength, indent)
+﻿class mx.data.binding.ObjectDumper
+{
+	public static function toString(obj:Object, showFunctions:Boolean, showUndefined:Boolean, showXMLstructures:Boolean, maxLineLength:Number, indent:Number):String
 	{
-		var od = new mx.data.binding.ObjectDumper();
+		var od:Object = new mx.data.binding.ObjectDumper();
 		if (maxLineLength == undefined)
 		{
 			maxLineLength = 100;
-		}		
+		}
 		if (indent == undefined) indent = 0;
 		return od.realToString(obj, showFunctions, showUndefined, showXMLstructures, maxLineLength, indent);
 	}
-	
+
 	private function ObjectDumper()
 	{
 		this.inProgress = new Array();
 	}
-	
-	var inProgress;
-	
-	private function realToString(obj, showFunctions, showUndefined, showXMLstructures, maxLineLength, indent)
+
+	var inProgress:Array;
+
+	private function realToString(obj:Object, showFunctions:Boolean, showUndefined:Boolean, showXMLstructures:Boolean, maxLineLength:Number, indent:Number):String
 	{
-		for (var x = 0; x < this.inProgress.length; x++)
+		for (var x:Number = 0; x < this.inProgress.length; x++)
 		{
 			if (this.inProgress[x] == obj) return "***";
 		}
 		this.inProgress.push(obj);
-		
+
 		indent ++;
-		var t = typeof(obj);
+		var t:String = typeof(obj);
 		//trace("<<<" + t + ">>>");
-		var result;
-		
+		var result:String;
+
 		if ((obj instanceof XMLNode) && (showXMLstructures != true))
 		{
 			result = obj.toString();
@@ -41,11 +41,11 @@
 		}
 		else if (t == "object")
 		{
-			var nameList = new Array();
+			var nameList:Array = new Array();
 			if (obj instanceof Array)
 			{
 				result = "["; // "Array" + ":";
-				for (var i = 0; i < obj.length; i++)
+				for (var i:Number = 0; i < obj.length; i++)
 				{
 					nameList.push(i);
 				}
@@ -53,26 +53,26 @@
 			else
 			{
 				result = "{"; // "Object" + ":";
-				for (var i in obj)
+				for (var i:String in obj)
 				{
 					nameList.push(i);
 				}
 				nameList.sort();
 			}
-				
+
 			//if (obj.length == undefined) trace("obj.length undefined");
 			//if (obj.length == null) trace("obj.length null");
 			//if (obj.length == 0) trace("obj.length 0");
-			//trace("namelist length " + nameList.length + ", obj.length " + obj.length);		
-			var sep = "";
-			for (var j = 0; j < nameList.length; j++)
+			//trace("namelist length " + nameList.length + ", obj.length " + obj.length);
+			var sep:String = "";
+			for (var j:Number = 0; j < nameList.length; j++)
 			{
-				var val = obj[nameList[j]];
-				
-				var show = true;
+				var val:String = obj[nameList[j]];
+
+				var show:Boolean = true;
 				if (typeof(val) == "function") show = (showFunctions == true);
 				if (typeof(val) == "undefined") show = (showUndefined == true);
-				
+
 				if (show)
 				{
 					result += sep;
@@ -100,29 +100,29 @@
 		{
 			result = String(obj);
 		}
-		
+
 		if (result == "undefined") result = "-";
 		this.inProgress.pop();
 		return mx.data.binding.ObjectDumper.replaceAll(result, "`", (result.length < maxLineLength) ? "" : ("\n" + doIndent(indent)));
 	}
 
-	public static function replaceAll (str : String, from: String, to: String)
+	public static function replaceAll (str : String, from: String, to: String):String
 	{
-		var chunks = str.split(from);
-		var result = "";
-		var sep = "";
-		for (var i = 0; i < chunks.length; i++)
+		var chunks:Array = str.split(from);
+		var result:String = "";
+		var sep:String = "";
+		for (var i:Number = 0; i < chunks.length; i++)
 		{
 			result += sep + chunks[i];
 			sep = to;
 		}
 		return result;
 	}
-	
-	private function doIndent(indent)
+
+	private function doIndent(indent:Number):String
 	{
-		var result = "";
-		for (var i = 0; i < indent; i ++)
+		var result:String = "";
+		for (var i:Number = 0; i < indent; i ++)
 		{
 			result += "     ";
 		}
diff -Naur Original/mx/data/binding/ObjectDumper.as~ Final/mx/data/binding/ObjectDumper.as~
--- Original/mx/data/binding/ObjectDumper.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/data/binding/ObjectDumper.as~	2008-01-05 20:12:44.000000000 +0900
@@ -0,0 +1,131 @@
+﻿class mx.data.binding.ObjectDumper
+{
+	public static function toString(obj:Object, showFunctions:Boolean, showUndefined:Boolean, showXMLstructures:Boolean, maxLineLength:Number, indent:Number):String
+	{
+		var od:Object = new mx.data.binding.ObjectDumper();
+		if (maxLineLength == undefined)
+		{
+			maxLineLength = 100;
+		}
+		if (indent == undefined) indent = 0;
+		return od.realToString(obj, showFunctions, showUndefined, showXMLstructures, maxLineLength, indent);
+	}
+
+	private function ObjectDumper()
+	{
+		this.inProgress = new Array();
+	}
+
+	var inProgress:Array;
+
+	private function realToString(obj:Object, showFunctions:Boolean, showUndefined:Boolean, showXMLstructures:Boolean, maxLineLength:Number, indent:Number):String
+	{
+		for (var x:Number = 0; x < this.inProgress.length; x++)
+		{
+			if (this.inProgress[x] == obj) return "***";
+		}
+		this.inProgress.push(obj);
+
+		indent ++;
+		var t:String = typeof(obj);
+		//trace("<<<" + t + ">>>");
+		var result:String;
+
+		if ((obj instanceof XMLNode) && (showXMLstructures != true))
+		{
+			result = obj.toString();
+		}
+		else if (obj instanceof Date)
+		{
+			result = obj.toString();
+		}
+		else if (t == "object")
+		{
+			var nameList:Array = new Array();
+			if (obj instanceof Array)
+			{
+				result = "["; // "Array" + ":";
+				for (var i:Number = 0; i < obj.length; i++)
+				{
+					nameList.push(i);
+				}
+			}
+			else
+			{
+				result = "{"; // "Object" + ":";
+				for (var i:String in obj)
+				{
+					nameList.push(i);
+				}
+				nameList.sort();
+			}
+
+			//if (obj.length == undefined) trace("obj.length undefined");
+			//if (obj.length == null) trace("obj.length null");
+			//if (obj.length == 0) trace("obj.length 0");
+			//trace("namelist length " + nameList.length + ", obj.length " + obj.length);
+			var sep:String = "";
+			for (var j:Number = 0; j < nameList.length; j++)
+			{
+				var val:String = obj[nameList[j]];
+
+				var show:Boolean = true;
+				if (typeof(val) == "function") show = (showFunctions == true);
+				if (typeof(val) == "undefined") show = (showUndefined == true);
+
+				if (show)
+				{
+					result += sep;
+					if (!(obj instanceof Array))
+						result += nameList[j] + ": ";
+					result +=
+						realToString(val, showFunctions, showUndefined, showXMLstructures, maxLineLength, indent);
+					sep = ", `";
+				}
+			}
+			if (obj instanceof Array)
+				result += "]";
+			else
+				result += "}";
+		}
+		else if (t == "function")
+		{
+			result = "function";
+		}
+		else if (t == "string")
+		{
+			result = "\"" + obj + "\"";
+		}
+		else
+		{
+			result = String(obj);
+		}
+
+		if (result == "undefined") result = "-";
+		this.inProgress.pop();
+		return mx.data.binding.ObjectDumper.replaceAll(result, "`", (result.length < maxLineLength) ? "" : ("\n" + doIndent(indent)));
+	}
+
+	public static function replaceAll (str : String, from: String, to: String):String
+	{
+		var chunks:Array = str.split(from);
+		var result:String = "";
+		var sep:String = "";
+		for (var i:Number = 0; i < chunks.length; i++)
+		{
+			result += sep + chunks[i];
+			sep = to;
+		}
+		return result;
+	}
+
+	private function doIndent(indent:Number):String
+	{
+		var result:String = "";
+		for (var i = 0; i < indent; i ++)
+		{
+			result += "     ";
+		}
+		return result;
+	}
+}
diff -Naur Original/mx/data/binding/TypedValue.as Final/mx/data/binding/TypedValue.as
--- Original/mx/data/binding/TypedValue.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/binding/TypedValue.as	2008-01-06 05:12:35.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       TypedValue.as
    Description: defines the class "mx.data.binding.TypedValue"
    Copyright:   Copyright (c) 2003
diff -Naur Original/mx/data/components/connclasses/RPCCall.as Final/mx/data/components/connclasses/RPCCall.as
--- Original/mx/data/components/connclasses/RPCCall.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/components/connclasses/RPCCall.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       RPCCall.as
    Description: defines the class "mx.data.components.connclasses.RPCCall"
    Copyright:   Copyright (c) 2003
diff -Naur Original/mx/data/components/DataBinding.as Final/mx/data/components/DataBinding.as
--- Original/mx/data/components/DataBinding.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/components/DataBinding.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,30 +1,30 @@
-[RequiresDataBinding(true)]
+﻿[RequiresDataBinding(true)]
 [IconFile("DataBindingClasses.png")]
 class mx.data.components.DataBinding extends MovieClip
 {
 	function Dummy()
 	{
-		new mx.data.binding.Binding();
-		new mx.data.binding.ComponentMixins();
-		new mx.data.binding.CustomFormatter();
-		new mx.data.binding.CustomValidator();
-		new mx.data.binding.DataAccessor();
-		new mx.data.binding.DataType();
-		new mx.data.binding.DateBase();
-		new mx.data.binding.Encoder();
-		new mx.data.binding.EndPoint();
-		new mx.data.binding.FieldAccessor();
-		new mx.data.binding.Formatter();
-		new mx.data.binding.Kind();
-		new mx.data.binding.Log();
-		new mx.data.binding.TypedValue();
+		var t01 = new mx.data.binding.Binding();
+		var t02 = new mx.data.binding.ComponentMixins();
+		var t03 = new mx.data.binding.CustomFormatter();
+		var t04 = new mx.data.binding.CustomValidator();
+		var t05 = new mx.data.binding.DataAccessor();
+		var t06 = new mx.data.binding.DataType();
+		var t07 = new mx.data.binding.DateBase();
+		var t08 = new mx.data.binding.Encoder();
+		var t09 = new mx.data.binding.EndPoint();
+		var t10 = new mx.data.binding.FieldAccessor();
+		var t11 = new mx.data.binding.Formatter();
+		var t12 = new mx.data.binding.Kind();
+		var t13 = new mx.data.binding.Log();
+		var t14 = new mx.data.binding.TypedValue();
 		
-		new mx.utils.ClassFinder();
-		new mx.utils.Collection();
-		new mx.utils.CollectionImpl();
-		new mx.utils.Iterator();
-		new mx.utils.IteratorImpl();
-		new mx.utils.StringFormatter();
-		new mx.utils.StringTokenParser();
+		var t15 = new mx.utils.ClassFinder();
+		var t16 = new mx.utils.Collection();
+		var t17 = new mx.utils.CollectionImpl();
+		var t18 = new mx.utils.Iterator();
+		var t19 = new mx.utils.IteratorImpl();
+		var t20 = new mx.utils.StringFormatter();
+		var t21 = new mx.utils.StringTokenParser();
 	}
 }
diff -Naur Original/mx/data/components/DataHolder.as Final/mx/data/components/DataHolder.as
--- Original/mx/data/components/DataHolder.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/components/DataHolder.as	2008-01-06 05:12:36.000000000 +0900
@@ -61,12 +61,12 @@
 		var getter = function()
 		{
 			return this.getProp(property);
-		}
+		};
 		
 		var setter = function(val)
 		{
 			this.setProp(property, val);
-		}
+		};
 			
 		this.addProperty(property, getter, setter);
 	}
diff -Naur Original/mx/data/components/DataSet.as Final/mx/data/components/DataSet.as
--- Original/mx/data/components/DataSet.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/components/DataSet.as	2008-01-06 05:12:36.000000000 +0900
@@ -5,24 +5,23 @@
 //this product.
 //****************************************************************************
 
-import mx.events.EventDispatcher;
-import mx.data.to.ValueListIterator;
+import mx.data.binding.Binding;
+import mx.data.binding.ComponentMixins;
+import mx.data.binding.DataType;
+import mx.data.binding.TypedValue;
+import mx.data.components.datasetclasses.DataSetDataProvider;
 import mx.data.components.datasetclasses.DataSetError;
+import mx.data.components.datasetclasses.DataSetIterator;
 import mx.data.components.datasetclasses.Delta;
 import mx.data.components.datasetclasses.DeltaImpl;
 import mx.data.components.datasetclasses.DeltaItem;
 import mx.data.components.datasetclasses.DeltaPacket;
-import mx.data.components.datasetclasses.DeltaPacketImpl;
 import mx.data.components.datasetclasses.DeltaPacketConsts;
-import mx.data.components.datasetclasses.DataSetDataProvider;
-import mx.data.components.datasetclasses.DataSetIterator;
-import mx.data.binding.TypedValue;
-import mx.xpath.XPathAPI;
-import mx.utils.Iterator;
+import mx.data.components.datasetclasses.DeltaPacketImpl;
+import mx.data.to.ValueListIterator;
+import mx.events.EventDispatcher;
 import mx.utils.ClassFinder;
-import mx.data.binding.ComponentMixins;
-import mx.data.binding.Binding;
-import mx.data.binding.DataType;
+import mx.utils.Iterator;
 
 
 [RequiresDataBinding(true)]
@@ -89,7 +88,7 @@
   @tiptext	Dispatched when the iterator's position is changed
   @helpid	1502
 */
-[Event("iteratorScrolled")];
+[Event("iteratorScrolled")]
 
 /**
   This event fires when a new transfer object is constructed using the createItem(...) method. 
@@ -98,7 +97,7 @@
   @helpid	1503
   @tiptext	Dispatched when a new item is constructed by the DataSet, before being added to the collection.
 */
-[Event("newItem")];
+[Event("newItem")]
 
 /**
   This event fires when values of calculated fields for the current transfer object need to be determined.
@@ -113,7 +112,7 @@
   @helpid	1506
   @tiptext	Dispatched when calculated fields should be updated
 */
-[Event("calcFields")];
+[Event("calcFields")]
 
 [IconFile("DataSet.png")]
 /**
@@ -352,7 +351,7 @@
 					itm = create ? createItem( itm ) : itm;
 					// set default vals if the properties arent already set
 					for( var j in __toProperties ) {
-						val1=_defValues[j];
+						var val1=_defValues[j];
 						if( val1 != null && itm[j] == null )
 							itm[j] = val1;
 					}
@@ -454,7 +453,7 @@
 				itm = create ? createItem( itm ) : itm;
 				// set default vals if the properties arent already set
 				for( var j in __toProperties ) {
-					val=_defValues[j];
+					var val=_defValues[j];
 					if( val != null && itm[j] == null )
 						itm[j] = val;
 				}
@@ -796,13 +795,13 @@
 				defaultSchema( transferObj );
 
 			var evt:Object = internalDispatchEvent( "addItem", { item:transferObj, result:true });
-			var result:Boolean = ( evt == null ) || evt.result;
+			result = ( evt == null ) || evt.result;
 			if( result && ( index <= length )) {
 				var id:String = internalAddItem( transferObj, index, true, false ); // rebuild index but don't pipe data
 				// log change to the delta packet
 				if( __logChanges )
 					logAddItem( transferObj, false ); // data hasn't been piped
-				var evt:Object ={ eventName:"addItems", firstItem:index, lastItem:index };
+				evt ={ eventName:"addItems", firstItem:index, lastItem:index };
 				resyncIterators( evt );
 				var itm:Object =_iterator.find({__ID__:id }); // try to find the added item
 				// move to the new item only if we can find it, i.e. it is in the current range
@@ -1476,11 +1475,12 @@
 			_deltaItems = new Array();
 			for( var i:Number=0; i<dil.length; i++ ) {
 				td=dil[i];
+				var d;
 				if( _optDeltaItems[td._id] == undefined ) {
 					d=createDelta( td );
 				}
 				else 
-					d= _optDeltaItems[td._id];
+					d=_optDeltaItems[td._id];
 				_deltaItems.push( d );
 			}
 			// need to reset the items array for this
@@ -1608,7 +1608,7 @@
 		var delItems:Array = new Array();
 
 		for( var i:Number=0; i<len; i++ ) {
-			itm=__items[i];
+			var itm=__items[i];
 			if( __logChanges )
 				logRemoveItem( __items[i], false );
 			delItems.push(itm[ItemId]);
@@ -1963,7 +1963,8 @@
 		else {
 			var cl:Array = d.getChangeList();
 			var cont:Boolean = true;
-			for( var i:Number=0; ( i<cl.length ) && cont; i++ ) 
+			var i:Number;
+			for( i=0; ( i<cl.length ) && cont; i++ ) 
 				cont = cl[i].message.length == 0;
 			if( i < cl.length )
 				resPckt.push( Object( d ));
@@ -2041,7 +2042,7 @@
 				dii = { newValue:di.__newValue, oldValue:di.__oldValue, curValue:di.__curValue, message:di.__message };
 			else
 				dii = { argList:di.__argList };
-			new DeltaItem( di.__kind, di.__name, dii, Object( d ));
+			var t = new DeltaItem( di.__kind, di.__name, dii, Object( d ));
 		} // for j
 		return( d );
 	}
@@ -2384,7 +2385,7 @@
 			if( desType == null )
 				desType = "String";
 			var fld= getField( fieldName );
-			val=fld.getTypedValue( desType );
+			var val=fld.getTypedValue( desType );
 			if( val == null )
 				val=fld.getTypedValue();
 				
@@ -2559,7 +2560,7 @@
 	  			has the following format 47126228642:Thu Jun 19 23:43:25 GMT-0700 2003
 	*/
 	private function getDPTransId():String {
-		return( internalGetId()+ ":"+ new Date().toString()); //!!@@ allow for user defined formatting of date
+		return( internalGetId()+ ":"+ (new Date()).toString()); //!!@@ allow for user defined formatting of date
 	}
 	
 	/**
@@ -2794,7 +2795,7 @@
 			if( __logChanges ) 
 				logRemoveItem( item, false ); // hasn't been piped
 			
-			var evt:Object = { eventName:"removeItems", firstItem:index, lastItem:index, removedIDs:new Array(item[ItemId])};
+			evt = { eventName:"removeItems", firstItem:index, lastItem:index, removedIDs:new Array(item[ItemId])};
 			resyncIterators( evt );
 			_allowReslv= ( __items.length > 0 );
 			__curItem = getCurrentItem();
@@ -2827,7 +2828,7 @@
 	  @return	Boolean indicating if the specified element is valid.
 	*/
 	private function isValidElement( el:Object ):Boolean {
-		return( el.type.original == false )
+		return( el.type.original == false );
 	}
 	
 	/**
@@ -2978,7 +2979,7 @@
 								oldVal = encodeValue( name, di.oldValue );
 							// check to see if we can remove this delta item and the delta
 							if( oldVal != value ) {
-								new DeltaItem( DeltaItem.Property, name, { oldValue:decodeValue( name, oldVal ), newValue:decodeValue( name, value ), message:"" }, Object( d )); 
+								var t = new DeltaItem( DeltaItem.Property, name, { oldValue:decodeValue( name, oldVal ), newValue:decodeValue( name, value ), message:"" }, Object( d )); 
 							}
 							else
 								if( d.getChangeList().length == 1 )
@@ -3075,25 +3076,25 @@
 		if( _allowReslv ) {
 			var propName = methodName.substring( 4 );
 			if( methodName.substr( 0, 4 ) == "get_" ) {
-				f = function() { return( getPropertyValue( propName )); };
+				f = function() { return( this.getPropertyValue( propName )); };
 			}
 			else 
 				if( methodName.substr( 0, 4 ) == "set_" ) {
-					f= function() { setPropertyValue( propName, arguments[0]);	};
+					f= function() { this.setPropertyValue( propName, arguments[0]);	};
 				} 
 				else {
 					arguments.shift();
 					f = function() {
-						__curItem[ methodName ].apply( __curItem, arguments ); // if no exception is thrown we continue
-						var id:Number =__curItem[ ItemId ];
-						if( __logChanges ) {
-							var d:Delta= getModDeltaInfo( id );
+						this.__curItem[ methodName ].apply( this.__curItem, arguments ); // if no exception is thrown we continue
+						var id:Number = this.__curItem[ this.ItemId ];
+						if( this.__logChanges ) {
+							var d:Delta= this.getModDeltaInfo( id );
 							new DeltaItem( DeltaItem.Method, methodName, { argList:arguments, message:"" }, Object( d ));
 						} // if logging
 						// if the method call modified some values then notify everyone 
-						var index:Number = _itemIndexById[ id ];
-						internalDispatchEvent( "modelChanged", { eventName:"updateItems", firstItem:index, lastItem:index });
-					} // function
+						var index:Number = this._itemIndexById[ id ];
+						this.internalDispatchEvent( "modelChanged", { eventName:"updateItems", firstItem:index, lastItem:index });
+					}; // function
 				} // else
 		} // if we are not initializing stuff
 		return( f );
diff -Naur Original/mx/data/components/datasetclasses/DataSetDataProvider.as Final/mx/data/components/datasetclasses/DataSetDataProvider.as
--- Original/mx/data/components/datasetclasses/DataSetDataProvider.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/components/datasetclasses/DataSetDataProvider.as	2008-01-06 05:12:36.000000000 +0900
@@ -5,7 +5,6 @@
 //this product.
 //****************************************************************************
 
-import mx.data.binding.DataType;
 import mx.data.components.datasetclasses.DataSetIterator;
 
 /**
diff -Naur Original/mx/data/components/datasetclasses/DataSetIterator.as Final/mx/data/components/datasetclasses/DataSetIterator.as
--- Original/mx/data/components/datasetclasses/DataSetIterator.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/components/datasetclasses/DataSetIterator.as	2008-01-06 05:12:36.000000000 +0900
@@ -5,8 +5,8 @@
 //this product.
 //****************************************************************************
 
-import mx.data.to.ValueListIterator;
 import mx.data.components.datasetclasses.DataSetError;
+import mx.data.to.ValueListIterator;
 
 /**
   The dataset cursor is a shared object amongst all of the indexes for a dataset.  It provides
@@ -359,7 +359,7 @@
 								result = _keyList[i] == eventObj.fieldName;
 							if( result ) {
 								//trace( "modified a key field!" );
-								var itm:Object =_dataset.__items[ eventObj.firstItem ];
+								itm =_dataset.__items[ eventObj.firstItem ];
 								// remove it from the list and find its new location
 								_index.splice( _indexById[itm[ItemId]], 1 );
 								var indx:Number = findObject( itm, FindInsertId );
@@ -680,7 +680,6 @@
 		var itm:Object;
 		var keep:Boolean = false;
 		var result:Number=0;
-		var e:Error;
 		var indx:Number = 0;
 		/* if we are sorted lets not loose the sort
 		if(( _options != Default ) && ( _sortData == null ))
@@ -693,7 +692,7 @@
 			try {
 				keep=__filterFunc( itm );
 			}
-			catch( e ) { 
+			catch( e:Error ) { 
 				keep=true;
 			}
 			if( keep ) {
diff -Naur Original/mx/data/components/datasetclasses/DeltaPacket.as Final/mx/data/components/datasetclasses/DeltaPacket.as
--- Original/mx/data/components/datasetclasses/DeltaPacket.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/components/datasetclasses/DeltaPacket.as	2008-01-06 05:12:36.000000000 +0900
@@ -5,8 +5,8 @@
 //this product.
 //****************************************************************************
 
-import mx.utils.Iterator;
 import mx.utils.Collection;
+import mx.utils.Iterator;
 
 /**
   The DeltaPacket interface provides access to the source component (e.g. DataSet) 
diff -Naur Original/mx/data/components/datasetclasses/DeltaPacketImpl.as Final/mx/data/components/datasetclasses/DeltaPacketImpl.as
--- Original/mx/data/components/datasetclasses/DeltaPacketImpl.as	2005-07-27 07:08:30.000000000 +0800
+++ Final/mx/data/components/datasetclasses/DeltaPacketImpl.as	2008-01-06 05:12:36.000000000 +0900
@@ -6,7 +6,6 @@
 //****************************************************************************
 
 import mx.data.components.datasetclasses.DeltaPacket;
-import mx.data.components.datasetclasses.Delta;
 import mx.utils.Iterator;
 import mx.utils.IteratorImpl;
 
diff -Naur Original/mx/data/components/datasetclasses/DeltaTreeDataProvider.as Final/mx/data/components/datasetclasses/DeltaTreeDataProvider.as
--- Original/mx/data/components/datasetclasses/DeltaTreeDataProvider.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/data/components/datasetclasses/DeltaTreeDataProvider.as	2008-01-06 05:12:36.000000000 +0900
@@ -5,9 +5,9 @@
 //this product.
 //****************************************************************************
 
-import mx.data.components.datasetclasses.DeltaPacket;
-import mx.data.components.datasetclasses.DeltaItem;
 import mx.data.components.datasetclasses.Delta;
+import mx.data.components.datasetclasses.DeltaItem;
+import mx.data.components.datasetclasses.DeltaPacket;
 import mx.utils.Iterator;
 
 /**
@@ -52,7 +52,7 @@
 					} // else
 					treeXML += "</node></delta_item>";
 				} // for
-				treeXML += "</delta_items>"
+				treeXML += "</delta_items>";
 			}
 			treeXML += "</delta>";
 		} // while
diff -Naur Original/mx/data/components/RDBMSResolver.as Final/mx/data/components/RDBMSResolver.as
--- Original/mx/data/components/RDBMSResolver.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/data/components/RDBMSResolver.as	2008-01-06 05:12:36.000000000 +0900
@@ -13,25 +13,20 @@
 //****************************************************************************
 
 
-import mx.data.components.datasetclasses.DeltaPacket;
-import mx.data.components.datasetclasses.DeltaPacketImpl;
-import mx.data.components.datasetclasses.DeltaPacketConsts;
-import mx.data.components.datasetclasses.Delta;
-import mx.data.components.datasetclasses.DeltaImpl;
-import mx.data.components.datasetclasses.DeltaItem;
-
-import mx.utils.Iterator;
-import mx.utils.Collection;
-import mx.utils.CollectionImpl;
-
-import mx.events.EventDispatcher;
-
-import mx.data.components.resclasses.FieldInfoItem;
-
 import mx.data.binding.ComponentMixins;
 import mx.data.binding.DataType;
 import mx.data.binding.FieldAccessor;
 import mx.data.binding.TypedValue;
+import mx.data.components.datasetclasses.Delta;
+import mx.data.components.datasetclasses.DeltaImpl;
+import mx.data.components.datasetclasses.DeltaItem;
+import mx.data.components.datasetclasses.DeltaPacket;
+import mx.data.components.datasetclasses.DeltaPacketConsts;
+import mx.data.components.datasetclasses.DeltaPacketImpl;
+import mx.data.components.resclasses.FieldInfoItem;
+import mx.events.EventDispatcher;
+import mx.utils.Collection;
+import mx.utils.Iterator;
 
 
 /**
@@ -973,7 +968,7 @@
 	private var __updateResults:XML;
 	
 	private var __unresolvedPackets	:Array;
-	private var __unresolvedDeltas:Array
+	private var __unresolvedDeltas:Array;
 	
 	private var _opNumber:Array;
 	private var _fieldValueObj:Object;
diff -Naur Original/mx/data/components/WebServiceConnector.as Final/mx/data/components/WebServiceConnector.as
--- Original/mx/data/components/WebServiceConnector.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/data/components/WebServiceConnector.as	2008-01-06 05:12:36.000000000 +0900
@@ -123,7 +123,7 @@
 			var f = function(fault)
 			{	
 				this.lastFault = fault;
-			}
+			};
 			this.service.onFault = f;
 			this.service.lastFault = null;
 		}
@@ -393,12 +393,12 @@
 				//trace("Web Service Result: " + mx.data.binding.ObjectDumper.toString(result));
 				this.WebServiceConnector.setResult(result, this);
 				this.WebServiceConnector.bumpCallsInProgress(-1);
-			}
+			};
 			callback.onFault = function(fault)
 			{
 				this.WebServiceConnector.notifyStatus("WebServiceFault", fault);
 				this.WebServiceConnector.bumpCallsInProgress(-1);
-			}
+			};
 		}
 		_global.__dataLogger.nestLevel--;
 	} 
diff -Naur Original/mx/data/components/WebServices.as Final/mx/data/components/WebServices.as
--- Original/mx/data/components/WebServices.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/data/components/WebServices.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-[RequiresDataBinding(true)]
+﻿[RequiresDataBinding(true)]
 [IconFile("WebServiceClasses.png")]
 class mx.data.components.WebServices extends MovieClip
 {
diff -Naur Original/mx/data/components/XMLConnector.as Final/mx/data/components/XMLConnector.as
--- Original/mx/data/components/XMLConnector.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/data/components/XMLConnector.as	2008-01-06 05:12:36.000000000 +0900
@@ -185,7 +185,7 @@
 				}
 
 				this.xmlconnector.bumpCallsInProgress(-1);
-			}
+			};
 			
 			_global.__dataLogger.logData(this, "Invoking XMLConnector <me.URL>(<params>)", {me: this, params: p});
 			p.contentType = "text/xml";
diff -Naur Original/mx/data/components/XUpdateResolver.as Final/mx/data/components/XUpdateResolver.as
--- Original/mx/data/components/XUpdateResolver.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/data/components/XUpdateResolver.as	2008-01-06 05:12:36.000000000 +0900
@@ -12,25 +12,18 @@
 //this product.
 //****************************************************************************
 
-import mx.data.components.datasetclasses.DeltaPacket;
-import mx.data.components.datasetclasses.DeltaPacketImpl;
-import mx.data.components.datasetclasses.DeltaPacketConsts;
-import mx.data.components.datasetclasses.Delta;
-import mx.data.components.datasetclasses.DeltaImpl;
-import mx.data.components.datasetclasses.DeltaItem;
-
-import mx.utils.Iterator;
-import mx.utils.Collection;
-import mx.utils.CollectionImpl;
-
-import mx.events.EventDispatcher;
-
-import mx.utils.StringTokenParser;
-
 import mx.data.binding.ComponentMixins;
 import mx.data.binding.DataType;
 import mx.data.binding.FieldAccessor;
 import mx.data.binding.TypedValue;
+import mx.data.components.datasetclasses.Delta;
+import mx.data.components.datasetclasses.DeltaImpl;
+import mx.data.components.datasetclasses.DeltaItem;
+import mx.data.components.datasetclasses.DeltaPacket;
+import mx.data.components.datasetclasses.DeltaPacketConsts;
+import mx.data.components.datasetclasses.DeltaPacketImpl;
+import mx.events.EventDispatcher;
+import mx.utils.Iterator;
 
 /**
   The Firefly resolver components provide developers with an easy and flexible method 
diff -Naur Original/mx/data/DataRange.as Final/mx/data/DataRange.as
--- Original/mx/data/DataRange.as	2004-06-02 04:56:54.000000000 +0800
+++ Final/mx/data/DataRange.as	2008-01-05 20:07:32.000000000 +0900
@@ -6,8 +6,8 @@
 //****************************************************************************
 
 interface mx.data.DataRange {
-	function getStart();
-	function getEnd();
-	function setEnd( e ):Void;
-	function setStart( s ):Void;
-}
\ No newline at end of file
+	function getStart():Number;
+	function getEnd():Number;
+	function setEnd( e:Object ):Void;
+	function setStart( s:Object ):Void;
+}
diff -Naur Original/mx/data/DataRange.as~ Final/mx/data/DataRange.as~
--- Original/mx/data/DataRange.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/data/DataRange.as~	2008-01-05 19:46:28.000000000 +0900
@@ -0,0 +1,13 @@
+﻿//****************************************************************************
+//Copyright (C) 2004 Macromedia, Inc. All Rights Reserved.
+//The following is Sample Code and is subject to all restrictions on
+//such code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+interface mx.data.DataRange {
+	function getStart():Object;
+	function getEnd():Object;
+	function setEnd( e:Object ):Void;
+	function setStart( s:Object ):Void;
+}
diff -Naur Original/mx/data/encoders/DatasetDeltaToXUpdateDelta.as Final/mx/data/encoders/DatasetDeltaToXUpdateDelta.as
--- Original/mx/data/encoders/DatasetDeltaToXUpdateDelta.as	2003-10-10 15:40:36.000000000 +0800
+++ Final/mx/data/encoders/DatasetDeltaToXUpdateDelta.as	2008-01-06 05:12:36.000000000 +0900
@@ -7,20 +7,16 @@
 
 import mx.data.binding.DataAccessor;
 import mx.data.binding.DataType;
-import mx.data.binding.TypedValue;
 import mx.data.binding.FieldAccessor;
-import mx.data.binding.ComponentMixins;
-
-import mx.utils.Iterator;
-import mx.utils.StringTokenParser;
-
-import mx.data.components.datasetclasses.DeltaPacket;
-import mx.data.components.datasetclasses.DeltaPacketImpl;
-import mx.data.components.datasetclasses.DeltaPacketConsts;
+import mx.data.binding.TypedValue;
 import mx.data.components.datasetclasses.Delta;
 import mx.data.components.datasetclasses.DeltaImpl;
 import mx.data.components.datasetclasses.DeltaItem;
-
+import mx.data.components.datasetclasses.DeltaPacket;
+import mx.data.components.datasetclasses.DeltaPacketConsts;
+import mx.data.components.datasetclasses.DeltaPacketImpl;
+import mx.utils.Iterator;
+import mx.utils.StringTokenParser;
 import mx.xpath.XPathAPI;
 
 
diff -Naur Original/mx/data/formatters/ComposeString.as Final/mx/data/formatters/ComposeString.as
--- Original/mx/data/formatters/ComposeString.as	2003-07-25 16:01:04.000000000 +0800
+++ Final/mx/data/formatters/ComposeString.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       ComposeString.as
    Description: defines the class "mx.data.formatters.ComposeString"
    Copyright:   Copyright (c) 2003
@@ -7,7 +7,7 @@
    Version:     1.0
 */
 
-import mx.data.binding.EndPoint;
+
 
 /**
 	A printf-like formatter for transforming records into strings.
diff -Naur Original/mx/data/formatters/Custom.as Final/mx/data/formatters/Custom.as
--- Original/mx/data/formatters/Custom.as	2003-08-29 18:35:10.000000000 +0800
+++ Final/mx/data/formatters/Custom.as	2008-01-06 05:12:36.000000000 +0900
@@ -7,7 +7,7 @@
    Version:     1.0
 */
 
-import mx.data.binding.EndPoint;
+
 
 /**
 	A Formatter which is implemented via a user-defined class.
diff -Naur Original/mx/data/formatters/NumberFormatter.as Final/mx/data/formatters/NumberFormatter.as
--- Original/mx/data/formatters/NumberFormatter.as	2003-10-10 15:40:36.000000000 +0800
+++ Final/mx/data/formatters/NumberFormatter.as	2008-01-06 05:12:36.000000000 +0900
@@ -7,7 +7,7 @@
    Version:     1.0
 */
 
-import mx.data.binding.EndPoint;
+
 
 /**
 	A Formatter for handling a variety of number formats.
diff -Naur Original/mx/data/formatters/RearrangeFields.as Final/mx/data/formatters/RearrangeFields.as
--- Original/mx/data/formatters/RearrangeFields.as	2003-10-09 18:36:28.000000000 +0800
+++ Final/mx/data/formatters/RearrangeFields.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       RearrangeFields.as
    Description: defines the class "mx.data.formatters.RearrangeFields"
    Copyright:   Copyright (c) 2003
@@ -7,7 +7,7 @@
    Version:     1.0
 */
 
-import mx.data.binding.EndPoint;
+
 
 /**
 	A formatter for rearranging the fields of a data record, or an array of data records.
diff -Naur Original/mx/data/kinds/ArrayForeignKey.as Final/mx/data/kinds/ArrayForeignKey.as
--- Original/mx/data/kinds/ArrayForeignKey.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/data/kinds/ArrayForeignKey.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       ArrayForeignKey.as
    Description: defines the class "mx.data.kinds.ArrayForeignKey"
    Copyright:   Copyright (c) 2003
diff -Naur Original/mx/data/kinds/AutoTrigger.as Final/mx/data/kinds/AutoTrigger.as
--- Original/mx/data/kinds/AutoTrigger.as	2003-10-09 18:36:30.000000000 +0800
+++ Final/mx/data/kinds/AutoTrigger.as	2008-01-06 05:12:36.000000000 +0900
@@ -52,7 +52,7 @@
 					this.__orig__trigger();
 					this.__inTrigger = false;
 				}
-			}
+			};
 		}
 	}
 }
diff -Naur Original/mx/data/kinds/ForeignKeyAPI.as Final/mx/data/kinds/ForeignKeyAPI.as
--- Original/mx/data/kinds/ForeignKeyAPI.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/data/kinds/ForeignKeyAPI.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       ForeignKeyAPI.as
    Description: defines the interface "mx.data.kinds.ForeignKeyAPI"
    Copyright:   Copyright (c) 2003
diff -Naur Original/mx/data/kinds/Lookup.as Final/mx/data/kinds/Lookup.as
--- Original/mx/data/kinds/Lookup.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/data/kinds/Lookup.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       Lookup.as
    Description: defines the class "mx.data.kinds.Lookup"
    Copyright:   Copyright (c) 2003
@@ -87,7 +87,7 @@
 			ev.location = this.location;
 			//Debug.trace("Lookup field changed", ev);
 			this.component.dispatchEvent(ev);
-		}
+		};
 
 		// attach the listener to the change event of the source data 
 		var info = this.fkAccessor.getDataChangeInfo();
diff -Naur Original/mx/data/PageableData.as Final/mx/data/PageableData.as
--- Original/mx/data/PageableData.as	2004-06-02 04:57:02.000000000 +0800
+++ Final/mx/data/PageableData.as	2008-01-05 19:45:36.000000000 +0900
@@ -8,8 +8,8 @@
 import mx.data.DataRange;
 
 interface mx.data.PageableData {
-	function addEventListener( event:String, listener ):Void;
+	function addEventListener( event:String, listener:Object ):Void;
 	function initialize( info:Object ):Void;
-	function requestRange( range: DataRange ):Number;
-	function removeEventListener( event:String, listener ):Void;
+	function requestRange( range:DataRange ):Number;
+	function removeEventListener( event:String, listener:Object ):Void;
 }
\ No newline at end of file
diff -Naur Original/mx/data/types/Bool.as Final/mx/data/types/Bool.as
--- Original/mx/data/types/Bool.as	2003-10-10 15:40:36.000000000 +0800
+++ Final/mx/data/types/Bool.as	2008-01-06 05:12:36.000000000 +0900
@@ -73,6 +73,6 @@
 					return([mx.data.binding.DataAccessor.conversionFailed(newValue, "Boolean")]);
 			}
 		} // if not null
-		return( this.dataAccessor.setTypedValue( new mx.data.binding.TypedValue( value, "Boolean" )))
+		return( this.dataAccessor.setTypedValue( new mx.data.binding.TypedValue( value, "Boolean" )));
 	}
 }
diff -Naur Original/mx/data/types/Custom.as Final/mx/data/types/Custom.as
--- Original/mx/data/types/Custom.as	2003-07-25 16:01:04.000000000 +0800
+++ Final/mx/data/types/Custom.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       Custom.as
    Description: defines the class "mx.data.types.Custom"
    Copyright:   Copyright (c) 2003
diff -Naur Original/mx/data/types/Num.as Final/mx/data/types/Num.as
--- Original/mx/data/types/Num.as	2003-10-22 04:22:00.000000000 +0800
+++ Final/mx/data/types/Num.as	2008-01-06 05:12:36.000000000 +0900
@@ -57,7 +57,7 @@
 					var	result;
 					if( newValue.value.length == 0 ) {
 						newValue.value = null;
-						newValue.typeName = "Number"
+						newValue.typeName = "Number";
 						result = this.dataAccessor.setTypedValue( newValue );
 					}
 					else {
diff -Naur Original/mx/data/types/Obj.as Final/mx/data/types/Obj.as
--- Original/mx/data/types/Obj.as	2003-07-30 16:01:06.000000000 +0800
+++ Final/mx/data/types/Obj.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-class mx.data.types.Obj extends mx.data.binding.DataType
+﻿class mx.data.types.Obj extends mx.data.binding.DataType
 {
 	function gettableTypes() : Array /* of String */
 	{
diff -Naur Original/mx/data/types/PhoneNumber.as Final/mx/data/types/PhoneNumber.as
--- Original/mx/data/types/PhoneNumber.as	2003-07-25 16:01:04.000000000 +0800
+++ Final/mx/data/types/PhoneNumber.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-class mx.data.types.PhoneNumber extends mx.data.binding.DataType
+﻿class mx.data.types.PhoneNumber extends mx.data.binding.DataType
 {
 	function gettableTypes() : Array /* of String */
 	{
@@ -12,7 +12,7 @@
 
 	var version = "2.0.0.0";
 	var wrongLengthError = "Your telephone number must be 10 digits in length.";
-	var invalidCharError = "Invalid characters in your phone number."
+	var invalidCharError = "Invalid characters in your phone number.";
 
 	function validate (value)
 	{
diff -Naur Original/mx/data/types/SocialSecurity.as Final/mx/data/types/SocialSecurity.as
--- Original/mx/data/types/SocialSecurity.as	2003-07-25 16:01:04.000000000 +0800
+++ Final/mx/data/types/SocialSecurity.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,9 +1,9 @@
-class mx.data.types.SocialSecurity extends mx.data.binding.DataType
+﻿class mx.data.types.SocialSecurity extends mx.data.binding.DataType
 {
 	var version = "2.0.0.0";
 	var wrongLengthError = "Social Security number must be 9 digits or in the form NNN-NN-NNNN.";
-	var invalidCharError = "Invalid characters in your Social Security number."
-	var zeroStartError = "Invalid SSN: SSN's can't start with 000."
+	var invalidCharError = "Invalid characters in your Social Security number.";
+	var zeroStartError = "Invalid SSN: SSN's can't start with 000.";
 
 	function gettableTypes() : Array /* of String */
 	{
diff -Naur Original/mx/data/types/ZipCode.as Final/mx/data/types/ZipCode.as
--- Original/mx/data/types/ZipCode.as	2003-07-25 16:01:04.000000000 +0800
+++ Final/mx/data/types/ZipCode.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-class mx.data.types.ZipCode extends mx.data.binding.DataType
+﻿class mx.data.types.ZipCode extends mx.data.binding.DataType
 {
 	function gettableTypes() : Array /* of String */
 	{
@@ -12,8 +12,8 @@
 	
 	static var version = "2.0.0.0";
 	var wrongLengthError = "Zip code must be 5 digits or 5+4 digits.";	
-	var invalidCharError = "Invalid characters in your zip code."
-	var wrongFormatError = "The zip+4 extension must be formatted like '12345-6789'."
+	var invalidCharError = "Invalid characters in your zip code.";
+	var wrongFormatError = "The zip+4 extension must be formatted like '12345-6789'.";
 	
 	function validate(value)
 	{
diff -Naur Original/mx/events/EventDispatcher.as Final/mx/events/EventDispatcher.as
--- Original/mx/events/EventDispatcher.as	2005-07-18 13:30:06.000000000 +0800
+++ Final/mx/events/EventDispatcher.as	2008-01-05 20:13:27.000000000 +0900
@@ -20,7 +20,7 @@
  	static var exceptions:Object = {move: 1, draw: 1, load:1};
 
 	// internal function for removing listeners
-	static function _removeEventListener(queue:Object, event:String, handler):Void
+	static function _removeEventListener(queue:Object, event:String, handler:String):Void
 	{
 		if (queue != undefined)
 		{
@@ -28,7 +28,7 @@
 			var i:Number;
 			for (i = 0; i < l; i++)
 			{
-				var o = queue[i];
+				var o:String = queue[i];
 				if (o == handler) {
 					queue.splice(i, 1);
 					return;
@@ -45,7 +45,7 @@
 	{
 		if (_fEventDispatcher == undefined)
 		{
-			_fEventDispatcher = new EventDispatcher;
+			_fEventDispatcher = new EventDispatcher();
 		}
 		object.addEventListener = _fEventDispatcher.addEventListener;
 		object.removeEventListener = _fEventDispatcher.removeEventListener;
@@ -64,7 +64,7 @@
 			// loop it as an object so it resists people removing listeners during dispatching
 			for (i in queue)
 			{
-				var o = queue[i];
+				var o:Object = queue[i];
 				var oType:String = typeof(o);
 
 				// a handler can be a function, object, or movieclip
@@ -80,7 +80,7 @@
  					if (o[eventObj.type] != undefined)
    					{
  						if (EventDispatcher.exceptions[eventObj.type] == undefined)
- 						{	
+ 						{
  							// this is a backdoor implementation that
  							// is not compliant with the standard
  							o[eventObj.type](eventObj);
@@ -116,7 +116,7 @@
 * @param event the name of the event ("click", "change", etc)
 * @param the function or object that should be called
 */
-	function addEventListener(event:String, handler):Void
+	function addEventListener(event:String, handler:String):Void
 	{
 		var queueName:String = "__q_" + event;
 		if (this[queueName] == undefined)
@@ -134,7 +134,7 @@
 * @param event the name of the event ("click", "change", etc)
 * @param the function or object that should be called
 */
-	function removeEventListener(event:String, handler):Void
+	function removeEventListener(event:String, handler:String):Void
 	{
 		var queueName:String = "__q_" + event;
 		EventDispatcher._removeEventListener(this[queueName], event, handler);
diff -Naur Original/mx/events/EventDispatcher.as~ Final/mx/events/EventDispatcher.as~
--- Original/mx/events/EventDispatcher.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/events/EventDispatcher.as~	2008-01-05 19:59:25.000000000 +0900
@@ -0,0 +1,145 @@
+﻿//****************************************************************************
+//Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
+//The following is Sample Code and is subject to all restrictions on
+//such code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+/**
+* base class for event listening and dispatching
+*
+* @helpid 3295
+* @tiptext
+*/
+class mx.events.EventDispatcher
+{
+	// make a instance of ourself so we can add methods to other objects
+	static var _fEventDispatcher:EventDispatcher = undefined;
+
+ 	// these events do not get called via backdoor because of name collisions with other methods
+ 	static var exceptions:Object = {move: 1, draw: 1, load:1};
+
+	// internal function for removing listeners
+	static function _removeEventListener(queue:Object, event:String, handler:String):Void
+	{
+		if (queue != undefined)
+		{
+			var l:Number = queue.length;
+			var i:Number;
+			for (i = 0; i < l; i++)
+			{
+				var o:String = queue[i];
+				if (o == handler) {
+					queue.splice(i, 1);
+					return;
+				}
+			}
+		}
+	}
+
+/**
+* add listening and dispatching methods to an object
+* @param object the object to receive the methods
+*/
+	static function initialize(object:Object):Void
+	{
+		if (_fEventDispatcher == undefined)
+		{
+			_fEventDispatcher = new EventDispatcher();
+		}
+		object.addEventListener = _fEventDispatcher.addEventListener;
+		object.removeEventListener = _fEventDispatcher.removeEventListener;
+		object.dispatchEvent = _fEventDispatcher.dispatchEvent;
+		object.dispatchQueue = _fEventDispatcher.dispatchQueue;
+	}
+
+	// internal function for dispatching events
+	function dispatchQueue(queueObj:Object, eventObj:Object):Void
+	{
+		var queueName:String = "__q_" + eventObj.type;
+		var queue:Array = queueObj[queueName];
+		if (queue != undefined)
+		{
+			var i:String;
+			// loop it as an object so it resists people removing listeners during dispatching
+			for (i in queue)
+			{
+				var o = queue[i];
+				var oType:String = typeof(o);
+
+				// a handler can be a function, object, or movieclip
+				if (oType == "object" || oType == "movieclip")
+				{
+					// this is a backdoor implementation that
+					// is not compliant with the standard
+   					if (o.handleEvent != undefined)
+   					{
+   						// this is the DOM3 way
+   						o.handleEvent(eventObj);
+   					}
+ 					if (o[eventObj.type] != undefined)
+   					{
+ 						if (EventDispatcher.exceptions[eventObj.type] == undefined)
+ 						{
+ 							// this is a backdoor implementation that
+ 							// is not compliant with the standard
+ 							o[eventObj.type](eventObj);
+ 						}
+   					}
+				}
+				else // it is a function
+				{
+					o.apply(queueObj, [eventObj]);
+				}
+			}
+		}
+	}
+
+/**
+* dispatch the event to all listeners
+* @param eventObj an Event or one of its subclasses describing the event
+*/
+	function dispatchEvent(eventObj:Object):Void
+	{
+		if (eventObj.target == undefined)
+			eventObj.target = this;
+
+		this[eventObj.type + "Handler"](eventObj);
+
+		// Dispatch to objects that are registered as listeners for
+		// this object.
+		this.dispatchQueue(this, eventObj);
+	}
+
+/**
+* add a listener for a particular event
+* @param event the name of the event ("click", "change", etc)
+* @param the function or object that should be called
+*/
+	function addEventListener(event:String, handler:String):Void
+	{
+		var queueName:String = "__q_" + event;
+		if (this[queueName] == undefined)
+		{
+			this[queueName] = new Array();
+		}
+		_global.ASSetPropFlags(this, queueName,1);
+
+		EventDispatcher._removeEventListener(this[queueName], event, handler);
+		this[queueName].push(handler);
+	}
+
+/**
+* remove a listener for a particular event
+* @param event the name of the event ("click", "change", etc)
+* @param the function or object that should be called
+*/
+	function removeEventListener(event:String, handler:String):Void
+	{
+		var queueName:String = "__q_" + event;
+		EventDispatcher._removeEventListener(this[queueName], event, handler);
+	}
+
+
+}
+
diff -Naur Original/mx/events/LowLevelEvents.as Final/mx/events/LowLevelEvents.as
--- Original/mx/events/LowLevelEvents.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/events/LowLevelEvents.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -209,7 +209,7 @@
 		if (__q_mouseMove.length > 0)
 		{
 			if (_onMouseMove != undefined)
-				onMouseMove == _onMouseMove;
+				onMouseMove = _onMouseMove;
 			else
 				delete onMouseMove;
 		}
@@ -279,8 +279,8 @@
 
 	static function classConstruct():Boolean
 	{
-		var ui = UIEventDispatcher;
-		var ll = LowLevelEvents;
+		var ui:Function = UIEventDispatcher;
+		var ll:Function = LowLevelEvents;
 		ui.lowLevelEvents.mouseEvents = ["addMouseEvents", "removeMouseEvents"];
 		ui.lowLevelEvents.somewhereEvents = ["addSomewhereEvents", "removeSomewhereEvents"];
 		ui.mouseEvents = ll.mouseEvents;
diff -Naur Original/mx/events/UIEventDispatcher.as Final/mx/events/UIEventDispatcher.as
--- Original/mx/events/UIEventDispatcher.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/events/UIEventDispatcher.as	2008-01-06 05:12:36.000000000 +0900
@@ -5,7 +5,7 @@
 //this product.
 //****************************************************************************
 import mx.events.EventDispatcher;
-import mx.core.UIObject;
+//import mx.core.UIObject;
 
 /**
 * event listening and dispatching for UIObjects.
@@ -99,7 +99,7 @@
 	{
 		if (_fEventDispatcher == undefined)
 		{
-			_fEventDispatcher = new UIEventDispatcher;
+			_fEventDispatcher = new UIEventDispatcher();
 		}
 		obj.addEventListener = _fEventDispatcher.__addEventListener;
 		obj.__origAddEventListener = _fEventDispatcher.addEventListener;
diff -Naur Original/mx/lang/Locale.as Final/mx/lang/Locale.as
--- Original/mx/lang/Locale.as	2005-07-08 07:40:50.000000000 +0800
+++ Final/mx/lang/Locale.as	2008-01-06 05:12:36.000000000 +0900
@@ -143,9 +143,9 @@
 		xmlDoc = new XML();
 		xmlDoc.ignoreWhite = true;
 		xmlDoc.onLoad = function(success:Boolean) {
-			onXMLLoad(success); // parse the XML
-			callback.call(null, success);
-		}
+			this.onXMLLoad(success); // parse the XML
+			this.callback.call(null, success);
+		};
 		
 		var langCode:String = xmlLang;
 		if(xmlMap[xmlLang] == undefined) {
@@ -177,13 +177,13 @@
 			xmlDoc = new XML();
 			xmlDoc.ignoreWhite = true;
 			xmlDoc.onLoad = function(success:Boolean) {
-				onXMLLoad(success); // parse the XML
-				callback.call(null, success);
-			}
+				this.onXMLLoad(success); // parse the XML
+				this.callback.call(null, success);
+			};
 			xmlDoc.load(xmlMap[langCode][0]);
 		} else {
 			// the xml is already loaded, retrieve it from the list
-			stringMap = stringMapList[langCode]
+			stringMap = stringMapList[langCode];
 
 			// call the callback here because onLoad is not called here
 			if (callback)
diff -Naur Original/mx/managers/FocusManager.as Final/mx/managers/FocusManager.as
--- Original/mx/managers/FocusManager.as	2004-05-25 21:00:04.000000000 +0800
+++ Final/mx/managers/FocusManager.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,9 +4,9 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.core.UIObject;
-import mx.core.UIComponent;
+//import mx.core.UIObject;
 import mx.controls.SimpleButton;
+import mx.core.UIComponent;
 import mx.managers.SystemManager;
 
 /* new rules as of 5/4/03:
@@ -36,8 +36,7 @@
 */
 	static var symbolOwner:Object = mx.managers.FocusManager;
 
-	// Version string
-#include "../core/ComponentVersion.as"
+	// Version string//#include "../core/ComponentVersion.as"
 
 /**
 * name of this class
@@ -324,10 +323,12 @@
 	{
 		// trace(this + " restoreFocus " + lastFocus);
 		var hscroll = lastSelFocus.hscroll;
+		var vscroll;
+		var bg;
 		if (hscroll != undefined)
 		{
-			var vscroll = lastSelFocus.scroll;
-			var bg = lastSelFocus.background;
+			vscroll = lastSelFocus.scroll;
+			bg = lastSelFocus.background;
 		}
 		lastFocus.setFocus();
 		// we reset a couple of fields onto the Selection object
@@ -581,7 +582,7 @@
 				// if there's children look in there
 				if (x.tabChildren)
 				{
-					getTabCandidateFromChildren(x, index, groupName, dir, firsttime && firstChild)
+					getTabCandidateFromChildren(x, index, groupName, dir, firsttime && firstChild);
 				}
 				// this goes down here so it can be used in child calls
 				firsttime = false;
@@ -634,7 +635,7 @@
 					x._searchKey = _searchKey;
 
 					// don't look inside if it has its own focus manager
-					getTabCandidateFromChildren(x, index, groupName, dir, firsttime && firstChild)
+					getTabCandidateFromChildren(x, index, groupName, dir, firsttime && firstChild);
 				}
 				// this goes down here so it can be used in child calls
 				firsttime = false;
@@ -725,7 +726,7 @@
 			o = p;
 		}
 		if (getFocusManagerFromObject(o) != this)
-			o == undefined;
+			o = undefined;
 
 		// trace("actual focus is " + o);
 		if (o == undefined)
@@ -837,7 +838,7 @@
 		{
 			if (defPushButton != undefined)
 			{
-				var o:SimpleButton = defPushButton;
+				o = defPushButton;
 				defPushButton = SimpleButton(x);
 				o.emphasized = false;
 				x.emphasized = true;
@@ -847,7 +848,7 @@
 		{
 			if (defPushButton != undefined && defPushButton != __defaultPushButton)
 			{
-				var o:SimpleButton = defPushButton;
+				o = defPushButton;
 				defPushButton = __defaultPushButton;
 				o.emphasized = false;
 				__defaultPushButton.emphasized = true;
@@ -951,10 +952,13 @@
 
 		// trace("set focus from mouseActivate");
 		var hscroll = x.hscroll;
+		var vscroll;
+		var bg;
+		
 		if (hscroll != undefined)
 		{
-			var vscroll = x.scroll;
-			var bg = x.background;
+			vscroll = x.scroll;
+			bg = x.background;
 		}
 		setFocus(x);
 		// we reset a couple of fields onto the Selection object
diff -Naur Original/mx/managers/OverlappedWindows.as Final/mx/managers/OverlappedWindows.as
--- Original/mx/managers/OverlappedWindows.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/managers/OverlappedWindows.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,8 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.managers.SystemManager;
 import mx.core.UIComponent;
+import mx.managers.SystemManager;
 
 class mx.managers.OverlappedWindows
 {
@@ -164,7 +164,7 @@
 						}
 					}
 				}
-				var z:MovieClip = SystemManager.form;
+				z = SystemManager.form;
 				z.focusManager.activate();
 			}
 		}
diff -Naur Original/mx/managers/PopUpManager.as Final/mx/managers/PopUpManager.as
--- Original/mx/managers/PopUpManager.as	2004-04-07 21:00:06.000000000 +0800
+++ Final/mx/managers/PopUpManager.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,10 +4,10 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
+import mx.core.UIObject;
 import mx.managers.DepthManager;
 import mx.managers.SystemManager;
-import mx.core.UIObject;
-import mx.core.UIComponent;
+//import mx.core.UIComponent;
 
 /**
 * @tiptext mouseDownOutside event
@@ -22,8 +22,7 @@
 */
 class mx.managers.PopUpManager
 {
-	// Version string
-#include "../core/ComponentVersion.as"
+	// Version string//#include "../core/ComponentVersion.as"
 
 /**
 * modality is accomplished by creating a full screen transparent window underneath the popup that eats all mouse clicks
@@ -89,7 +88,7 @@
 	static function createPopUp(parent:MovieClip, className:Object, modal:Boolean, initobj:Object, broadcastOutsideEvents:Boolean):MovieClip
 	{
 		if (mixins == undefined)
-			mixins = new PopUpManager;
+			mixins = new PopUpManager();
 
 		if (broadcastOutsideEvents == undefined)
 			broadcastOutsideEvents = false;
diff -Naur Original/mx/managers/SystemManager.as Final/mx/managers/SystemManager.as
--- Original/mx/managers/SystemManager.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/managers/SystemManager.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,8 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.events.EventDispatcher;
 import mx.core.UIComponent;
+import mx.events.EventDispatcher;
 
 /**
 * @tiptext idle event
diff -Naur Original/mx/remoting/Connection.as Final/mx/remoting/Connection.as
--- Original/mx/remoting/Connection.as	2004-03-11 09:22:26.000000000 +0800
+++ Final/mx/remoting/Connection.as	2008-01-05 13:06:44.000000000 +0900
@@ -11,19 +11,19 @@
 /**
 	Connection Class extends NetConnection
 	Manages a bidirectional connection between the Flash Player and the Flash Remoting service.
-	The Service methods use the Connection object to invoke methods on servers and return results. 
+	The Service methods use the Connection object to invoke methods on servers and return results.
 	@tiptext	Manages connection between the Flash Player and the Flash Remoting service
 	@helpid		4436
 */
-class mx.remoting.Connection extends NetConnection 
+class mx.remoting.Connection extends NetConnection
 {
-	
-	#include "RemotingComponentVersion.as"
+
+//#include "RemotingComponentVersion.as"
 
 	function Connection() {
 		super();
 	}
-	
+
 	/**
 		Creates a Flash Remoting service object, which allows access to application server functions
 		@param		serviceName			String containing the name of the service to call
@@ -32,20 +32,20 @@
 		@tiptext	Returns a proxy to the specified service
 		@helpid		4437
 	*/
-	public function getService(serviceName:String, client:Object):NetServiceProxy 
+	public function getService(serviceName:String, client:Object):NetServiceProxy
 	{
 		var result:NetServiceProxy = new NetServiceProxy(this, serviceName, client);
 		return( result );
 	}
 
 	/**
-		Defines a set of credentials to be presented to the server on all subsequent requests. SetCredentials can be called more than once. 
+		Defines a set of credentials to be presented to the server on all subsequent requests. SetCredentials can be called more than once.
 		@param		userId		String containing the user id to use
 		@param		password	String containing the user password to use
 		@tiptext	Specifies the security credentials used for connecting to a service
 		@helpid		4438
 	*/
-	public function setCredentials(userId:String, password:String ):Void  
+	public function setCredentials(userId:String, password:String ):Void
 	{
 		addHeader("Credentials", false, {userid: userId, password: password});
 	}
@@ -56,17 +56,17 @@
 		  @tiptext		Creates a copy of this connection but without current headers
 		  @helpid		4439
 	*/
-	public function clone():Connection 
+	public function clone():Connection
 	{
-		var nc = new Connection();
+		var nc:Connection = new Connection();
 		nc.connect(uri);
 		return( nc );
 	}
-	
+
 	/**
-	  Retrieves the Connection object's debug identifier. Note:this method will only return a value if the 
+	  Retrieves the Connection object's debug identifier. Note:this method will only return a value if the
 	  NetDebug.initialize() method has been previously called.
-	  
+
 	  @return	Number containing the ID
 	  @tiptext	Returns assigned debug id
 	  @helpid	4440
@@ -74,22 +74,22 @@
 	public function getDebugId():String {
 		return( null );
 	}
-	
+
 	/**
-	  Returns the current debug configruation. Note: this method will only return a value if the 
+	  Returns the current debug configruation. Note: this method will only return a value if the
 	  NetDebug.initialize() method has been previously called.
-	  
+
 	  @return	NetDebugConfig current debug configuration values
 	  @tiptext	Returns the current debug configuration
 	  @helpid 	4503
 	*/
-	public function getDebugConfig()/*:mx.remoting.debug.NetDebugConfig*/ {
+	public function getDebugConfig():Void /*:mx.remoting.debug.NetDebugConfig*/ {
 		// provided by ConnectionMixin
 		return( null );
 	}
-	
+
 	/**
-		this Connection object's debug identifier. Note:this method will only return a value if the 
+		this Connection object's debug identifier. Note:this method will only return a value if the
 		NetDebug.initialize() method has been previously called.
 		@tiptext	Sets this Connection object's debug identifier
 		@helpid 	4441
@@ -97,19 +97,19 @@
 	public function setDebugId( id:String ):Void {
 		// provided by ConnectionMixin
 	}
-	
+
 	/**
 	  Attaches debug methods and updates the configuration
 	*/
 	public function updateConfig():Void {
 		// provided by ConnectionMixin
 	}
-	
+
 	public var setupRecordSet:Function; // provided by ConnectionMixin
-	
+
 	/**
 	   Invokes a command or method on the server. You must create a server-side function to execute the remote method
-	   
+
 	   @param	remoteMethod String
 	   @param	resultObject String
 	   @tiptext	Invokes command or method on the server
@@ -118,24 +118,24 @@
 	public function call( /*remoteMethod:String, resultObject:Object, [p1..pn]*/ ):Void {
 		super.call.apply( super, arguments /*remoteMethod:String, resultObject:Object, [p1..pn]*/ );
 	}
-	
+
 	/**
-	  Makes the URL previously specified with connect() into a null value, thereby removing the connection 
-	  configuration for the remote gateway. Subsequent attempts to call Flash Remoting MX using the 
-	  Connection object fail. After using the Connection.close method, you must call connect() to define a new URL. 
-	  
+	  Makes the URL previously specified with connect() into a null value, thereby removing the connection
+	  configuration for the remote gateway. Subsequent attempts to call Flash Remoting MX using the
+	  Connection object fail. After using the Connection.close method, you must call connect() to define a new URL.
+
 	  @tiptext	Removes the connection configuration for the remote gateway
 	  @helpid	4443
 	*/
 	public function close():Void {
 		super.close();
 	}
-	
+
 	/**
-	  Defines the Flash Remoting URL that is used during Flash Remoting service function calls. This method 
-	  does not communicate with the server. When Flash Remoting MX executes a service function call, it makes 
-	  an HTTP or HTTPS connection to the application servers. This connection only persists until the results 
-	  of the call are returned to the Flash application. 
+	  Defines the Flash Remoting URL that is used during Flash Remoting service function calls. This method
+	  does not communicate with the server. When Flash Remoting MX executes a service function call, it makes
+	  an HTTP or HTTPS connection to the application servers. This connection only persists until the results
+	  of the call are returned to the Flash application.
 
 	  @param	url String containing the url of the gateway to connect to
 	  @tiptext	Configures the connection information for access to the specified gateway
@@ -144,12 +144,12 @@
 	public function connect( url:String ): Boolean {
 		return( super.connect( url ));
 	}
-	
+
 	/**
-	  Adds a context header to the Action Message Format (AMF) packet structure. This header is included with 
-	  every AMF packet sent over this connection. This method is used by the Connection.setCredentials method; 
-	  you do not normally use it directly in Flash applications. 
-	  
+	  Adds a context header to the Action Message Format (AMF) packet structure. This header is included with
+	  every AMF packet sent over this connection. This method is used by the Connection.setCredentials method;
+	  you do not normally use it directly in Flash applications.
+
 	  @param	name String containing the name of the header to add
 	  @param	mustUnderstand indicates if the server is required to understand and process this header
 	  @param	obj Object containing the values for the header
@@ -159,12 +159,12 @@
 	public function addHeader( name:String, mustUnderstand:Boolean, obj:Object ):Void {
 		super.addHeader( name, mustUnderstand, obj );
 	}
-	
+
 	/**
-	  Sends a client trace message associated with the Connection to the Net Connection Debugger (NCD). The 
-	  trace message includes the connection's Debug ID. Note:this method will only return a value if the 
+	  Sends a client trace message associated with the Connection to the Net Connection Debugger (NCD). The
+	  trace message includes the connection's Debug ID. Note:this method will only return a value if the
 	  NetDebug.initialize() method has been previously called
-	  
+
 	  @param	traceObj Object that will be sent to the NetConnection Debugger
 	  @tiptext	Sends client trace message to the NetConnection Debugger
 	  @helpid	4446
@@ -172,8 +172,8 @@
 	public function trace( traceObj:Object ):Void {
 		// provided by ConnectionMixin
 	}
-	
-	
+
+
 	// url related
 	public var uri:String;
 
@@ -183,14 +183,14 @@
 	*/
 	private function AppendToGatewayUrl(urlSuffix:String):Void {
 		__urlSuffix = urlSuffix;
-		if (__originalUrl == null) 
+		if (__originalUrl == null)
 		{
 			__originalUrl = uri;
 		}
-		var u = __originalUrl + urlSuffix;
+		var u:String = __originalUrl + urlSuffix;
 		connect(u);
 	}
-	
+
 	/*
 		 Method to replace the existing URL with a new one and connect to it.
 		 @param		newUrl		String containing the new url from the server
@@ -198,18 +198,18 @@
 	private function ReplaceGatewayUrl(newUrl:String):Void {
 		connect(newUrl);
 	}
-	
+
 	/*
 		 Called by the player when a RequestPersistentHeader is recieved from the server
 		 @param		info	Object containing the name mustUnderstand and data properties
 	*/
-	private function RequestPersistentHeader(info:Object ):Void 
+	private function RequestPersistentHeader(info:Object ):Void
 	{
 		//trace("NetConnection_RequestPersistentHeader(" + objectToString(info) + ")");
 		addHeader(info.name, info.mustUnderstand, info.data);
 	}
-	
+
 
 	private var __originalUrl:String;
 	private var __urlSuffix:String;
-}
\ No newline at end of file
+}
diff -Naur Original/mx/remoting/Connection.as~ Final/mx/remoting/Connection.as~
--- Original/mx/remoting/Connection.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/remoting/Connection.as~	2008-01-05 13:06:33.000000000 +0900
@@ -0,0 +1,215 @@
+//****************************************************************************
+//Copyright (C) 2004 Macromedia, Inc. All Rights Reserved.
+//The following is Sample Code and is subject to all restrictions on
+//such code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+import mx.remoting.NetServiceProxy;
+
+
+/**
+	Connection Class extends NetConnection
+	Manages a bidirectional connection between the Flash Player and the Flash Remoting service.
+	The Service methods use the Connection object to invoke methods on servers and return results.
+	@tiptext	Manages connection between the Flash Player and the Flash Remoting service
+	@helpid		4436
+*/
+class mx.remoting.Connection extends NetConnection
+{
+
+//#include "RemotingComponentVersion.as"
+
+	function Connection() {
+		super();
+	}
+
+	/**
+		Creates a Flash Remoting service object, which allows access to application server functions
+		@param		serviceName			String containing the name of the service to call
+		@param		client				Object	responder for method call results and status
+		@return		NetServiceProxy		instance of the proxy for the network client, local client and service name specified.
+		@tiptext	Returns a proxy to the specified service
+		@helpid		4437
+	*/
+	public function getService(serviceName:String, client:Object):NetServiceProxy
+	{
+		var result:NetServiceProxy = new NetServiceProxy(this, serviceName, client);
+		return( result );
+	}
+
+	/**
+		Defines a set of credentials to be presented to the server on all subsequent requests. SetCredentials can be called more than once.
+		@param		userId		String containing the user id to use
+		@param		password	String containing the user password to use
+		@tiptext	Specifies the security credentials used for connecting to a service
+		@helpid		4438
+	*/
+	public function setCredentials(userId:String, password:String ):Void
+	{
+		addHeader("Credentials", false, {userid: userId, password: password});
+	}
+
+	/**
+		  Creates a new NetConnection, similar to the old connection except it doesn't have the headers.
+		  @return		Connection	Object	The Connection created
+		  @tiptext		Creates a copy of this connection but without current headers
+		  @helpid		4439
+	*/
+	public function clone():Connection
+	{
+		var nc:Connection = new Connection();
+		nc.connect(uri);
+		return( nc );
+	}
+
+	/**
+	  Retrieves the Connection object's debug identifier. Note:this method will only return a value if the
+	  NetDebug.initialize() method has been previously called.
+
+	  @return	Number containing the ID
+	  @tiptext	Returns assigned debug id
+	  @helpid	4440
+	*/
+	public function getDebugId():String {
+		return( null );
+	}
+
+	/**
+	  Returns the current debug configruation. Note: this method will only return a value if the
+	  NetDebug.initialize() method has been previously called.
+
+	  @return	NetDebugConfig current debug configuration values
+	  @tiptext	Returns the current debug configuration
+	  @helpid 	4503
+	*/
+	public function getDebugConfig():Void /*:mx.remoting.debug.NetDebugConfig*/ {
+		// provided by ConnectionMixin
+		return( null );
+	}
+
+	/**
+		this Connection object's debug identifier. Note:this method will only return a value if the
+		NetDebug.initialize() method has been previously called.
+		@tiptext	Sets this Connection object's debug identifier
+		@helpid 	4441
+	*/
+	public function setDebugId( id:String ):Void {
+		// provided by ConnectionMixin
+	}
+
+	/**
+	  Attaches debug methods and updates the configuration
+	*/
+	public function updateConfig():Void {
+		// provided by ConnectionMixin
+	}
+
+	public var setupRecordSet:Function; // provided by ConnectionMixin
+
+	/**
+	   Invokes a command or method on the server. You must create a server-side function to execute the remote method
+
+	   @param	remoteMethod String
+	   @param	resultObject String
+	   @tiptext	Invokes command or method on the server
+	   @helpid	4442
+	*/
+	public function call( /*remoteMethod:String, resultObject:Object, [p1..pn]*/ ):Void {
+		super.call.apply( super, arguments /*remoteMethod:String, resultObject:Object, [p1..pn]*/ );
+	}
+
+	/**
+	  Makes the URL previously specified with connect() into a null value, thereby removing the connection
+	  configuration for the remote gateway. Subsequent attempts to call Flash Remoting MX using the
+	  Connection object fail. After using the Connection.close method, you must call connect() to define a new URL.
+
+	  @tiptext	Removes the connection configuration for the remote gateway
+	  @helpid	4443
+	*/
+	public function close():Void {
+		super.close();
+	}
+
+	/**
+	  Defines the Flash Remoting URL that is used during Flash Remoting service function calls. This method
+	  does not communicate with the server. When Flash Remoting MX executes a service function call, it makes
+	  an HTTP or HTTPS connection to the application servers. This connection only persists until the results
+	  of the call are returned to the Flash application.
+
+	  @param	url String containing the url of the gateway to connect to
+	  @tiptext	Configures the connection information for access to the specified gateway
+	  @helpid	4444
+	*/
+	public function connect( url:String ): Boolean {
+		return( super.connect( url ));
+	}
+
+	/**
+	  Adds a context header to the Action Message Format (AMF) packet structure. This header is included with
+	  every AMF packet sent over this connection. This method is used by the Connection.setCredentials method;
+	  you do not normally use it directly in Flash applications.
+
+	  @param	name String containing the name of the header to add
+	  @param	mustUnderstand indicates if the server is required to understand and process this header
+	  @param	obj Object containing the values for the header
+	  @tiptext	Adds a header to the connection which will be sent with any subsequent request
+	  @helpid	4445
+	*/
+	public function addHeader( name:String, mustUnderstand:Boolean, obj:Object ):Void {
+		super.addHeader( name, mustUnderstand, obj );
+	}
+
+	/**
+	  Sends a client trace message associated with the Connection to the Net Connection Debugger (NCD). The
+	  trace message includes the connection's Debug ID. Note:this method will only return a value if the
+	  NetDebug.initialize() method has been previously called
+
+	  @param	traceObj Object that will be sent to the NetConnection Debugger
+	  @tiptext	Sends client trace message to the NetConnection Debugger
+	  @helpid	4446
+	*/
+	public function trace( traceObj:Object ):Void {
+		// provided by ConnectionMixin
+	}
+
+
+	// url related
+	public var uri:String;
+
+	/*
+	  Appends a suffix to the existing URL and connects to it.
+	  @param	urlSuffix String containing the url suffix to append
+	*/
+	private function AppendToGatewayUrl(urlSuffix:String):Void {
+		__urlSuffix = urlSuffix;
+		if (__originalUrl == null)
+		{
+			__originalUrl = uri;
+		}
+		var u:url = __originalUrl + urlSuffix;
+		connect(u);
+	}
+
+	/*
+		 Method to replace the existing URL with a new one and connect to it.
+		 @param		newUrl		String containing the new url from the server
+	*/
+	private function ReplaceGatewayUrl(newUrl:String):Void {
+		connect(newUrl);
+	}
+
+	/*
+		 Called by the player when a RequestPersistentHeader is recieved from the server
+		 @param		info	Object containing the name mustUnderstand and data properties
+	*/
+	private function RequestPersistentHeader(info:Object ):Void
+	{
+		//trace("NetConnection_RequestPersistentHeader(" + objectToString(info) + ")");
+		addHeader(info.name, info.mustUnderstand, info.data);
+	}
+
+
+	private var __originalUrl:String;
+	private var __urlSuffix:String;
+}
diff -Naur Original/mx/remoting/DataGlue.as Final/mx/remoting/DataGlue.as
--- Original/mx/remoting/DataGlue.as	2004-06-02 04:57:28.000000000 +0800
+++ Final/mx/remoting/DataGlue.as	2008-01-06 05:12:36.000000000 +0900
@@ -19,7 +19,7 @@
 
 class mx.remoting.DataGlue extends Object {
 
-	#include "RemotingComponentVersion.as"
+//#include "RemotingComponentVersion.as"
 
 	function DataGlue( dp:Object ) 
 	{
@@ -47,7 +47,7 @@
 	}
 	
 	public function set labelString( val:String ):Void {
-		__labelStr = val
+		__labelStr = val;
 	}
 	
 	/* 
diff -Naur Original/mx/remoting/NetServiceProxy.as Final/mx/remoting/NetServiceProxy.as
--- Original/mx/remoting/NetServiceProxy.as	2004-06-02 04:57:40.000000000 +0800
+++ Final/mx/remoting/NetServiceProxy.as	2008-01-05 12:48:45.000000000 +0900
@@ -16,7 +16,7 @@
 	/**
 	  Contructs and instance of the proxy for the network client, local client
 	  and service name specified.
-	  
+
 	  @param	nc Object network connection
 	  @param	serviceName String containing the service to call
 	  @param	client Object local client "responder"
@@ -29,7 +29,7 @@
 			serviceName = servName;
 			client = cli;
 		}
-		// else - parameter is null, this probably means that 
+		// else - parameter is null, this probably means that
 		// this object has just been received as a typed object in an AMF message.
 		// just leave the data alone. construction of this object
 		// will be completed when _setParentService is called.
@@ -38,7 +38,7 @@
 
 	/**
 	  Called by the player to initialize the data recieved from an AMF message
-	  
+
 	  @param	service Object
 	*/
 	function _setParentService(service:Object):Void  {
@@ -48,16 +48,16 @@
 
 	/**
 	  This function gets called whenever somebody does "myService.methodName(parameters...)".
-	  We construct and return the function "f", which knows how to call the correct server method. 
-	  
+	  We construct and return the function "f", which knows how to call the correct server method.
+
 	  @param	methodName String containing the method or property that was accessed in AS on
 	  			this proxy.
 	 */
 	function __resolve( methodName:String ):Function {
 		if( _allowRes ) {
-			var f = function() {
-				// did the user give a default client when he created this NetServiceProxy? 
-				if (client != null)	{
+			var f:Function = function():String {
+				// did the user give a default client when he created this NetServiceProxy?
+				if (this.client != null)	{
 					// Yes. Let's create a responder object.
 					arguments.unshift(new NetServiceProxyResponder(this, methodName));
 				}
@@ -69,9 +69,9 @@
 				}
 				if(typeof(this.serviceName) == "function")
 					this.serviceName = this.servicename;
-				arguments.unshift(serviceName + "." + methodName);
-				return( nc.call.apply(nc, arguments));
-			}
+				arguments.unshift(this.serviceName + "." + methodName);
+				return( this.nc.call.apply(this.nc, arguments));
+			};
 			return f;
 		}
 		else
@@ -88,6 +88,6 @@
 	public var nc:Connection;
 	public var serviceName:String;
 	public var client:Object;
-	
+
 	private var _allowRes:Boolean= false;
 }
diff -Naur Original/mx/remoting/NetServiceProxy.as~ Final/mx/remoting/NetServiceProxy.as~
--- Original/mx/remoting/NetServiceProxy.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/remoting/NetServiceProxy.as~	2008-01-05 12:48:23.000000000 +0900
@@ -0,0 +1,93 @@
+﻿//****************************************************************************
+//Copyright (C) 2004 Macromedia, Inc. All Rights Reserved.
+//The following is Sample Code and is subject to all restrictions on
+//such code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+// Ensure that NetServiceProxy objects received via AMF messages get
+// correctly deserialized into actionscript objects.
+
+import mx.remoting.NetServiceProxyResponder;
+import mx.remoting.Connection;
+
+dynamic class mx.remoting.NetServiceProxy extends Object {
+
+	/**
+	  Contructs and instance of the proxy for the network client, local client
+	  and service name specified.
+
+	  @param	nc Object network connection
+	  @param	serviceName String containing the service to call
+	  @param	client Object local client "responder"
+	*/
+	function NetServiceProxy(netC:Connection, servName:String, cli:Object) {
+		super();
+		if (netC != null) {
+			// the constructor was called from ActionScript code
+			nc = netC;
+			serviceName = servName;
+			client = cli;
+		}
+		// else - parameter is null, this probably means that
+		// this object has just been received as a typed object in an AMF message.
+		// just leave the data alone. construction of this object
+		// will be completed when _setParentService is called.
+		_allowRes= true;
+	}
+
+	/**
+	  Called by the player to initialize the data recieved from an AMF message
+
+	  @param	service Object
+	*/
+	function _setParentService(service:Object):Void  {
+		nc = service.nc;
+		client = service.client;
+	}
+
+	/**
+	  This function gets called whenever somebody does "myService.methodName(parameters...)".
+	  We construct and return the function "f", which knows how to call the correct server method.
+
+	  @param	methodName String containing the method or property that was accessed in AS on
+	  			this proxy.
+	 */
+	function __resolve( methodName:String ):Function {
+		if( _allowRes ) {
+			var f:Function = function() {
+				// did the user give a default client when he created this NetServiceProxy?
+				if (this.client != null)	{
+					// Yes. Let's create a responder object.
+					arguments.unshift(new NetServiceProxyResponder(this, methodName));
+				}
+				else {
+					if (typeof(arguments[0].onResult) != "function") {
+						mx.remoting.NetServices.trace("NetServices", "warning", 3, "There is no defaultResponder, and no responder was given in call to " + methodName);
+						arguments.unshift(new NetServiceProxyResponder(this, methodName));
+					}
+				}
+				if(typeof(this.serviceName) == "function")
+					this.serviceName = this.servicename;
+				arguments.unshift(this.serviceName + "." + methodName);
+				return( this.nc.call.apply(this.nc, arguments));
+			};
+			return f;
+		}
+		else
+			return null;
+	}
+
+	// Ensure that NetServiceProxy instances received via AMF messages get
+	public static function registerNetServiceProxy():Boolean {
+	    Object.registerClass( "NetServiceProxy", mx.remoting.NetServiceProxy );
+		return true;
+	}
+
+	private static var init:Boolean = registerNetServiceProxy();
+	public var nc:Connection;
+	public var serviceName:String;
+	public var client:Object;
+
+	private var _allowRes:Boolean= false;
+}
diff -Naur Original/mx/remoting/NetServiceProxyResponder.as Final/mx/remoting/NetServiceProxyResponder.as
--- Original/mx/remoting/NetServiceProxyResponder.as	2004-06-02 04:57:50.000000000 +0800
+++ Final/mx/remoting/NetServiceProxyResponder.as	2008-01-05 19:50:54.000000000 +0900
@@ -16,7 +16,7 @@
 	/**
 	  Constructs a new instance of the netservices responder for the service
 	  and method specified.
-	  
+
 	  @param	serv Object service that methods are to be called on
 	  @param	method String containing the name of the method to invoke on the service
 	*/
@@ -25,25 +25,25 @@
 		service = serv;
 		methodName = method;
 	}
-	
+
 	/**
 	  This function gets called whenever an onResult is received from the server,
 	  a result of a call that is being handled by our responder object.
-	  
+
 	  @param	result Object containing the data recieved from the server
 	 */
-	function onResult( result ):Void {
-	
-		var client = service.client;
-	
+	function onResult( result:Object ):Void {
+
+		var client:Object = service.client;
+
 		// tell the result object what service it came from, if it wants to know.
 		// (this call usually has no effect, except for NetServiceProxy and RecordSet).
         if (result instanceof mx.remoting.NetServiceProxy || result instanceof mx.remoting.RecordSet)
         {
 		    result._setParentService( service );
         }
-	
-		var func = methodName + "_Result";
+
+		var func:String = methodName + "_Result";
 
 		if (typeof(client[func]) == "function")
 		{
@@ -65,13 +65,13 @@
 	/**
 	  This function gets called whenever an onStatus is received from the server
 	  as a result of a call that is being handled by our responder object.
-	  
+
 	  @param	result Object containing the error information returned from the server
 	*/
-	function onStatus(result):Void {
-		var client = service.client;
-	
-		var func = methodName + "_Status";
+	function onStatus(result:Object):Void {
+		var client:Object = service.client;
+
+		var func:String = methodName + "_Status";
 		if (typeof(client[func]) == "function")
 		{
 			// there is an "xxx_Status" method supplied - call it.
@@ -98,7 +98,7 @@
 			mx.remoting.NetServices.trace("NetServices", "info", 2, func + " was received from server: <" + result.level + "> " + result.description);
 		}
 	}
-	
+
 	var client:Object;
 	var service:Object;
 	var methodName:String;
diff -Naur Original/mx/remoting/NetServiceProxyResponder.as~ Final/mx/remoting/NetServiceProxyResponder.as~
--- Original/mx/remoting/NetServiceProxyResponder.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/remoting/NetServiceProxyResponder.as~	2008-01-05 19:50:09.000000000 +0900
@@ -0,0 +1,105 @@
+﻿//****************************************************************************
+//Copyright (C) 2004 Macromedia, Inc. All Rights Reserved.
+//The following is Sample Code and is subject to all restrictions on
+//such code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+// -----------------------------------------------------------------
+// NetServiceProxyResponder
+// This is the automatically-generated responder object that is used
+// when a service is called and no responder object was given.
+// -----------------------------------------------------------------
+
+class mx.remoting.NetServiceProxyResponder extends Object {
+
+	/**
+	  Constructs a new instance of the netservices responder for the service
+	  and method specified.
+
+	  @param	serv Object service that methods are to be called on
+	  @param	method String containing the name of the method to invoke on the service
+	*/
+	function NetServiceProxyResponder( serv:Object, method:String ) {
+		super();
+		service = serv;
+		methodName = method;
+	}
+
+	/**
+	  This function gets called whenever an onResult is received from the server,
+	  a result of a call that is being handled by our responder object.
+
+	  @param	result Object containing the data recieved from the server
+	 */
+	function onResult( result:Object ):Void {
+
+		var client:Object = service.client;
+
+		// tell the result object what service it came from, if it wants to know.
+		// (this call usually has no effect, except for NetServiceProxy and RecordSet).
+        if (result instanceof mx.remoting.NetServiceProxy || result instanceof mx.remoting.RecordSet)
+        {
+		    result._setParentService( service );
+        }
+
+		var func:String = methodName + "_Result";
+
+		if (typeof(client[func]) == "function")
+		{
+			// there is an "xxx_Result" method supplied - call it.
+			client[func].apply(client, [result]);
+		}
+		else if (typeof(client.onResult) == "function")
+		{
+			// there is an "onResult" method supplied - call it.
+			client.onResult(result);
+		}
+		else
+		{
+			// nobody to call. Dump something to the output window.
+			mx.remoting.NetServices.trace("NetServices", "info", 1, func + " was received from server: " + result);
+		}
+	}
+
+	/**
+	  This function gets called whenever an onStatus is received from the server
+	  as a result of a call that is being handled by our responder object.
+
+	  @param	result Object containing the error information returned from the server
+	*/
+	function onStatus(result:String):Void {
+		var client:Object = service.client;
+
+		var func:String = methodName + "_Status";
+		if (typeof(client[func]) == "function")
+		{
+			// there is an "xxx_Status" method supplied - call it.
+			client[func].apply(client, [result]);
+		}
+		else if (typeof(client.onStatus) == "function")
+		{
+			// there is an "onStatus" method supplied - call it.
+			client.onStatus(result);
+		}
+		else if (typeof(_root.onStatus) == "function")
+		{
+			// there is an "onStatus" method at the root level - call it.
+			_root.onStatus(result);
+		}
+		else if (typeof(_global.System.onStatus) == "function")
+		{
+			// there is an "onStatus" method at the global level - call it.
+			_global.System.onStatus(result);
+		}
+		else
+		{
+			// nobody to call. Dump something to the output window.
+			mx.remoting.NetServices.trace("NetServices", "info", 2, func + " was received from server: <" + result.level + "> " + result.description);
+		}
+	}
+
+	var client:Object;
+	var service:Object;
+	var methodName:String;
+}
diff -Naur Original/mx/remoting/NetServices.as Final/mx/remoting/NetServices.as
--- Original/mx/remoting/NetServices.as	2004-06-02 04:58:00.000000000 +0800
+++ Final/mx/remoting/NetServices.as	2008-01-05 19:51:36.000000000 +0900
@@ -10,8 +10,8 @@
 
 /**
 	NetServices Class extends Object
-	The NetServices object is a collection of methods that helps you create and use Connection Objects to 
-	server side services using Flash Remoting.  
+	The NetServices object is a collection of methods that helps you create and use Connection Objects to
+	server side services using Flash Remoting.
 
 	 @class	NetServices
 	 @tiptext A collection of mthods that help you create and use Connection Objects
@@ -19,24 +19,24 @@
 	 @helpid	4459
 */
 
-class mx.remoting.NetServices extends Object 
+class mx.remoting.NetServices extends Object
 {
-    #include "RemotingComponentVersion.as"
+   //#include "RemotingComponentVersion.as"
 
 	/**
 		Sets the default URL that Flash Remoting uses when it executes the createGatewayConnection method,
 		if no URL has been specified OR gatewayUrl has not been set
 		@param		String	url		The default URL to be used in absence of any URL passed in createGatewayConnection or gatewayUrl is not defined
 		@returns	nothing
-		@tiptext	Sets the default Flash Remoting URL 
+		@tiptext	Sets the default Flash Remoting URL
 		@helpid	4460
 	*/
-	public static function setDefaultGatewayUrl(url:String):Void 
+	public static function setDefaultGatewayUrl(url:String):Void
 	{
 		//trace("NetServices.setDefaultGatewayUrl " + url);
 		defaultGatewayUrl = url;
 	}
-	
+
 	/**
 		User specified gatewayUrl. This over-rides the defaultGatewayUrl. If nothing is specified when
 		invoking createGatewayConnection, the default gateway URL is picked up to create a connection.
@@ -45,26 +45,26 @@
 		@tiptext	user specified gateway URL
 		@helpid	4461
 	*/
-	public static function setGatewayUrl(url:String):Void 
+	public static function setGatewayUrl(url:String):Void
 	{
 		//trace("NetServices.setGatewayUrl " + url);
 		gatewayUrl = url;
 	}
-	
+
 	/**
-	  Creates a Connection object, which is used to make connections to services on the application 
-	  server. The Flash application only connects when you actually make a Flash Remoting service 
+	  Creates a Connection object, which is used to make connections to services on the application
+	  server. The Flash application only connects when you actually make a Flash Remoting service
 	  function call.
-	  
+
 	  @param	url		String containing the flash remoting gateway url
 	  @return	Connection	object with
 	  1. specified URL or
 	  2. URL specified in the createDefaultGatewayURL if it is invoked prior to this method with a valid url
-	  3. URL specified in the createGatewayURL if it it invoked prior to this method with a valid url 
+	  3. URL specified in the createGatewayURL if it it invoked prior to this method with a valid url
 	  @tiptext	creates a Connection object to a specified URL
 	  @helpid	4462
 	*/
-	public static function createGatewayConnection(url:String, infoLogger:Log):Connection 
+	public static function createGatewayConnection(url:String, infoLogger:Log):Connection
 	{
 		logger = infoLogger;
 		if (url == undefined)
@@ -72,15 +72,15 @@
 			// Our first choice: the "gatewayURL" param that got passed to this .swf via the object/embed tag
 			// The developer could also set "gatewayUrl" *before* including NetServices.as.
 			url = gatewayUrl;
-	
+
 			if (url == undefined)
 			{
 				// our second choice: the default url that the developer said to use
-				url = defaultGatewayUrl;		
+				url = defaultGatewayUrl;
 			}
 		}
-		
-		// See if we were able to find a gateway url to use	
+
+		// See if we were able to find a gateway url to use
 		if (url == undefined)
 		{
 			// no url. no good.
@@ -88,16 +88,16 @@
 			logger.logInfo("NetServices: createGatewayConnection - gateway url <"+url+"> is undefined", Log.DEBUG);
 			return null;
 		}
-	
+
 		// We found a gateway URL. Create the NetConnection object and connect to the URL.
-		var nc = new Connection();
+		var nc:Connection = new Connection();
 		nc.connect(url);
-	
+
 		//trace("NetServices.createGatewayConnection " + nc);
 		__sharedConnections[url] = nc;
 		return nc;
 	}
-	
+
 	/**
 	  This method returns any existing connections that have been previously created with the given uri
 
@@ -109,18 +109,18 @@
 	public static function getConnection( uri:String ):Connection {
 		return( __sharedConnections[uri] );
 	}
-	
+
 	/**
 	  Returns the hostname (and port) of the URL that contains the current .swf file.
 	  there is no trailing "/". returns null if the url is not http://something.
 	  example: if the swf url is http://my.foo.com:1234/some/thing/my.swf, this
 	  function will return "http://my.foo.com:1234".
-	  
+
 	  @return	String containing the host and port name
 	  @tiptext	Returns hostname and port of the URL containing the current .swf file
 	  @helpid	4464
 	*/
-	public static function getHostUrl():String 
+	public static function getHostUrl():String
 	{
 		if (!NetServices.isHttpUrl(_root._url))
 		{
@@ -138,10 +138,10 @@
 		}
 		return _root._url.substring(0, firstSlashPos);
 	}
-	
+
 	/*
 		Checks the passed URL and returns a true if the URL passed starts with http/https
-		
+
 		@param		String  url	The url to be checked
 		@return		Boolean	Returns true if the passed url starts with http/https
 		@tiptext	checks whether the URL is "http/https"
@@ -150,7 +150,7 @@
 		// return url.startsWith("http://") || url.startsWith("https://");
 		return ((url.indexOf("http://") == 0) || (url.indexOf("https://") == 0));
 	}
-	
+
 	/**
 		Converts a relative URL to a full URL by prepending the host and port name, if the
 		URL provided is a non-http one.
@@ -167,7 +167,7 @@
 	}
 
 	/*
-		Sends a serializable ActionScript object as a client trace event to the Connection Debugger. 
+		Sends a serializable ActionScript object as a client trace event to the Connection Debugger.
 		This trace event does not include connection information
 
 		@param		String	who
@@ -176,18 +176,18 @@
 		@param		String	message
 		@tiptext
 	*/
-	public static function trace(who, severity, number, message):Void {
+	public static function trace(who:String, severity:String, number:Number, message:String):Void {
 		//var fullMessage = who + " " + severity + " " + number + ": " + message;
 		//trace(fullMessage);
 		traceNetServices(who, severity, number, message);
 	}
-	
-	
-	public static var gatewayUrl:String = _root.gatewayUrl; // fix for bug#87385; changed from _global to _root 
+
+
+	public static var gatewayUrl:String = _root.gatewayUrl; // fix for bug#87385; changed from _global to _root
 	public static var defaultGatewayUrl:String;
 	public static var traceNetServices:Function; // mixed in by NetDebug
 	public static var logger:Log;
-	
+
 	private static var __sharedConnections:Array = new Array();
 }
 
diff -Naur Original/mx/remoting/NetServices.as~ Final/mx/remoting/NetServices.as~
--- Original/mx/remoting/NetServices.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/remoting/NetServices.as~	2008-01-05 12:50:50.000000000 +0900
@@ -0,0 +1,193 @@
+﻿//****************************************************************************
+//Copyright (C) 2004 Macromedia, Inc. All Rights Reserved.
+//The following is Sample Code and is subject to all restrictions on
+//such code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+import mx.remoting.Connection;
+import mx.services.Log;
+
+/**
+	NetServices Class extends Object
+	The NetServices object is a collection of methods that helps you create and use Connection Objects to
+	server side services using Flash Remoting.
+
+	 @class	NetServices
+	 @tiptext A collection of mthods that help you create and use Connection Objects
+	 @deprecated
+	 @helpid	4459
+*/
+
+class mx.remoting.NetServices extends Object
+{
+   //#include "RemotingComponentVersion.as"
+
+	/**
+		Sets the default URL that Flash Remoting uses when it executes the createGatewayConnection method,
+		if no URL has been specified OR gatewayUrl has not been set
+		@param		String	url		The default URL to be used in absence of any URL passed in createGatewayConnection or gatewayUrl is not defined
+		@returns	nothing
+		@tiptext	Sets the default Flash Remoting URL
+		@helpid	4460
+	*/
+	public static function setDefaultGatewayUrl(url:String):Void
+	{
+		//trace("NetServices.setDefaultGatewayUrl " + url);
+		defaultGatewayUrl = url;
+	}
+
+	/**
+		User specified gatewayUrl. This over-rides the defaultGatewayUrl. If nothing is specified when
+		invoking createGatewayConnection, the default gateway URL is picked up to create a connection.
+		@param		String	url		The URL to be set as gateway
+		@return		nothing
+		@tiptext	user specified gateway URL
+		@helpid	4461
+	*/
+	public static function setGatewayUrl(url:String):Void
+	{
+		//trace("NetServices.setGatewayUrl " + url);
+		gatewayUrl = url;
+	}
+
+	/**
+	  Creates a Connection object, which is used to make connections to services on the application
+	  server. The Flash application only connects when you actually make a Flash Remoting service
+	  function call.
+
+	  @param	url		String containing the flash remoting gateway url
+	  @return	Connection	object with
+	  1. specified URL or
+	  2. URL specified in the createDefaultGatewayURL if it is invoked prior to this method with a valid url
+	  3. URL specified in the createGatewayURL if it it invoked prior to this method with a valid url
+	  @tiptext	creates a Connection object to a specified URL
+	  @helpid	4462
+	*/
+	public static function createGatewayConnection(url:String, infoLogger:Log):Connection
+	{
+		logger = infoLogger;
+		if (url == undefined)
+		{
+			// Our first choice: the "gatewayURL" param that got passed to this .swf via the object/embed tag
+			// The developer could also set "gatewayUrl" *before* including NetServices.as.
+			url = gatewayUrl;
+
+			if (url == undefined)
+			{
+				// our second choice: the default url that the developer said to use
+				url = defaultGatewayUrl;
+			}
+		}
+
+		// See if we were able to find a gateway url to use
+		if (url == undefined)
+		{
+			// no url. no good.
+			mx.remoting.NetServices.trace("NetServices", "warning", 4, "createGatewayConnection - gatewayUrl is undefined");
+			logger.logInfo("NetServices: createGatewayConnection - gateway url <"+url+"> is undefined", Log.DEBUG);
+			return null;
+		}
+
+		// We found a gateway URL. Create the NetConnection object and connect to the URL.
+		var nc = new Connection();
+		nc.connect(url);
+
+		//trace("NetServices.createGatewayConnection " + nc);
+		__sharedConnections[url] = nc;
+		return nc;
+	}
+
+	/**
+	  This method returns any existing connections that have been previously created with the given uri
+
+	  @param	uri		String containing the location of the desired gateway
+	  @return	Connection	object which was previously created with the specified uri
+	  @tiptext	Returns existing connections
+	  @helpid	4463
+	*/
+	public static function getConnection( uri:String ):Connection {
+		return( __sharedConnections[uri] );
+	}
+
+	/**
+	  Returns the hostname (and port) of the URL that contains the current .swf file.
+	  there is no trailing "/". returns null if the url is not http://something.
+	  example: if the swf url is http://my.foo.com:1234/some/thing/my.swf, this
+	  function will return "http://my.foo.com:1234".
+
+	  @return	String containing the host and port name
+	  @tiptext	Returns hostname and port of the URL containing the current .swf file
+	  @helpid	4464
+	*/
+	public static function getHostUrl():String
+	{
+		if (!NetServices.isHttpUrl(_root._url))
+		{
+			// this url doesn't start with "http://", I don't know what to do with it.
+			mx.remoting.NetServices.trace("NetServices", "warning", 4, "createGatewayConnection - gatewayUrl is invalid");
+//			logger.logInfo("NetServices: createGatewayConnection - gateway url <"+gatewayUrl+"> is invalid", Log.DEBUG);
+			return null;
+		}
+		var firstSlashPos:Number = _root._url.indexOf("/", 8);
+		if (firstSlashPos < 0)
+		{
+			// hmmm...
+			mx.remoting.NetServices.trace("NetServices", "warning", 4, "createGatewayConnection - gatewayUrl is invalid");
+			return null;
+		}
+		return _root._url.substring(0, firstSlashPos);
+	}
+
+	/*
+		Checks the passed URL and returns a true if the URL passed starts with http/https
+
+		@param		String  url	The url to be checked
+		@return		Boolean	Returns true if the passed url starts with http/https
+		@tiptext	checks whether the URL is "http/https"
+	*/
+	public static function isHttpUrl(url:String):Boolean {
+		// return url.startsWith("http://") || url.startsWith("https://");
+		return ((url.indexOf("http://") == 0) || (url.indexOf("https://") == 0));
+	}
+
+	/**
+		Converts a relative URL to a full URL by prepending the host and port name, if the
+		URL provided is a non-http one.
+	    @return		String	a full URL
+		@param		String	url		The URL to be converted
+		@tiptext	converts a relative URL to a full URL
+		@helpid	4465
+	*/
+	public static function getHttpUrl(url:String) : String {
+	    if (!isHttpUrl(url))
+	        url = getHostUrl() + url;
+
+	    return url;
+	}
+
+	/*
+		Sends a serializable ActionScript object as a client trace event to the Connection Debugger.
+		This trace event does not include connection information
+
+		@param		String	who
+		@param		String	severity
+		@param		Number	number
+		@param		String	message
+		@tiptext
+	*/
+	public static function trace(who:String, severity:String, number:Number, message:String):Void {
+		//var fullMessage = who + " " + severity + " " + number + ": " + message;
+		//trace(fullMessage);
+		traceNetServices(who, severity, number, message);
+	}
+
+
+	public static var gatewayUrl:String = _root.gatewayUrl; // fix for bug#87385; changed from _global to _root
+	public static var defaultGatewayUrl:String;
+	public static var traceNetServices:Function; // mixed in by NetDebug
+	public static var logger:Log;
+
+	private static var __sharedConnections:Array = new Array();
+}
+
diff -Naur Original/mx/remoting/Operation.as Final/mx/remoting/Operation.as
--- Original/mx/remoting/Operation.as	2004-06-02 04:58:46.000000000 +0800
+++ Final/mx/remoting/Operation.as	2008-01-05 19:58:00.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2004 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -28,7 +28,7 @@
     /**
         Create any arguments from the request structure, which is needed for data binding, then send.
     */
-    function createThenSend(Void):PendingCall
+    function createThenSend(Void:Void):PendingCall
     {
         createArguments();
         return send();
@@ -37,9 +37,9 @@
     /**
         Create a PendingCall to manage the responders and send the request.
     */
-    function send(Void):PendingCall
+    function send(Void:Void):PendingCall
     {
-        __service.log.logInfo("Invoking " + __methodName + " on " + __service.name);	
+        __service.log.logInfo("Invoking " + __methodName + " on " + __service.name);
 	// did the user give a default client when he created this NetServiceProxy?
 		var result:PendingCall = new PendingCall(__service,__methodName);
 		result.responder = __responder;
@@ -113,10 +113,10 @@
             //[Pete] Copy request args to our own arguments array. This code
             //was taken from SOAP based RemoteObject.
 
-          
+
 	    // gather up the current request values and put into an array
             // called arguments for the invoker service.
-            for (var v in __request)
+            for (var v:String in __request)
             {
                 if (v != "arguments")
                 {
diff -Naur Original/mx/remoting/Operation.as~ Final/mx/remoting/Operation.as~
--- Original/mx/remoting/Operation.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/remoting/Operation.as~	2008-01-05 18:36:23.000000000 +0900
@@ -0,0 +1,136 @@
+﻿//****************************************************************************
+//Copyright (C) 2004 Macromedia, Inc. All Rights Reserved.
+//The following is Sample Code and is subject to all restrictions on
+//such code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+import mx.remoting.Service;
+import mx.remoting.PendingCall;
+import mx.rpc.Responder;
+
+/**
+ * Operation works as a layer between Service and PendingCall to
+ * keep a reference to a custom responder.
+ **/
+class mx.remoting.Operation
+{
+    public function Operation(methodName:String, parent:Service)
+    {
+        __service = parent;
+        __responder = parent.responder;
+        __methodName = methodName;
+        __invokationName = __service.name + "." + methodName;
+        __request = new Object();
+        __arguments = new Array();
+    }
+
+    /**
+        Create any arguments from the request structure, which is needed for data binding, then send.
+    */
+    function createThenSend(Void:Void):PendingCall
+    {
+        createArguments();
+        return send();
+    }
+
+    /**
+        Create a PendingCall to manage the responders and send the request.
+    */
+    function send(Void:Void):PendingCall
+    {
+        __service.log.logInfo("Invoking " + __methodName + " on " + __service.name);
+	// did the user give a default client when he created this NetServiceProxy?
+		var result:PendingCall = new PendingCall(__service,__methodName);
+		result.responder = __responder;
+
+        //Copy args before modifying
+        var inputArgs:Array = null;
+        if (__arguments == null)
+            inputArgs = new Array();
+        else
+            inputArgs = __arguments.concat();
+
+        //Calculate this every time as the service name may have been updated...
+        __invokationName = __service.name + "." + __methodName;
+
+        //Prepend args with invokation target and our pending call
+        inputArgs.unshift( __invokationName, result );
+
+		//Send our call through our Connection
+		__service.connection.call.apply( __service.connection, inputArgs );
+
+		return result;
+    }
+
+    /**
+       Only sets up the arguments... send() must be called to
+       actually send the request. This method's name is modelled on the WebServices
+       approach... although it's pretty meaningless to Flash Remoting.
+    */
+    function invoke(a:Array):Void
+    {
+        __arguments = a;
+    }
+
+    public function get responder ():Responder
+    {
+        return __responder;
+    }
+
+    public function set responder (r:Responder):Void
+    {
+        __responder = r;
+    }
+
+    public function get request():Object
+    {
+        return __request;
+    }
+
+    public function set request(r:Object):Void
+    {
+        __request = r;
+    }
+
+    /**
+    The name of the method this operation represents.
+    */
+    public function get name ():String
+    {
+        return __methodName;
+    }
+
+    /**
+    Creates arguments from the request.
+    */
+    private function createArguments():Void
+    {
+        if (__request != null)
+        {
+            __arguments = new Array();
+
+            //[Pete] Copy request args to our own arguments array. This code
+            //was taken from SOAP based RemoteObject.
+
+
+	    // gather up the current request values and put into an array
+            // called arguments for the invoker service.
+            for (var v in __request)
+            {
+                if (v != "arguments")
+                {
+                    //use unshift because for..in goes "last added first"
+                    __arguments.unshift(__request[v]);
+                }
+            }
+	}
+    }
+
+    private var __request : Object;
+    private var __invokationName : String;
+    private var __service : Service;
+    private var __responder : Responder;
+    private var __arguments : Array;
+    private var __methodName : String;
+}
diff -Naur Original/mx/remoting/PendingCall.as Final/mx/remoting/PendingCall.as
--- Original/mx/remoting/PendingCall.as	2004-06-02 04:58:54.000000000 +0800
+++ Final/mx/remoting/PendingCall.as	2008-01-05 19:57:42.000000000 +0900
@@ -12,22 +12,22 @@
 import mx.rpc.Fault;
 
 /**
-	On each call to a Service Object a PendingCall Object is generated which manages 
-	dispatching results recieved from the server via the associated service.  Once 
-	constructed the caller should assign a responder that will process the invocation 
+	On each call to a Service Object a PendingCall Object is generated which manages
+	dispatching results recieved from the server via the associated service.  Once
+	constructed the caller should assign a responder that will process the invocation
 	results.
 
 	@tiptext Manages dispatching results recieved from the associated service
 	@helpid	4489
 
 */
-class mx.remoting.PendingCall extends Object 
+class mx.remoting.PendingCall extends Object
 {
 	/*
-		Initializes a PendingCall object for a Service request. The PendingCall Object 
-		is created with a reference to the requested Service. The PendingCall Object is 
-		responsible for setting up the Responder and manage event handlers for 
-		Result/Status. 
+		Initializes a PendingCall object for a Service request. The PendingCall Object
+		is created with a reference to the requested Service. The PendingCall Object is
+		responsible for setting up the Responder and manage event handlers for
+		Result/Status.
 
 		@param		Service		srv		The Service on which request has been made
 		@param		String		methodName	the method to be invoked
@@ -37,29 +37,29 @@
 		__service = srv;
 		__methodName = methodName;
 	}
-	
-	
+
+
 	/**
 		Provides access to the associated responder
 		@return		Responder object that will process the results of the call.
-		@tiptext	The associated Responder for this PendingCall 
+		@tiptext	The associated Responder for this PendingCall
 		@helpid	4490
 	*/
 	public function get responder():Responder {
 		return( __responder );
 	}
-	
+
 	public function set responder( res:Responder ):Void {
 		__responder = res;
 	}
-	
+
 	/*
 		After successful invocation of a Service call, result is received and Handler method is invoked
 
 		@param		result	The result returned after successful invocation of a Service call
 		@tiptext	EventHandler for when a Result is received as a result of a Service call
 	*/
-	public function onResult( result ):Void 
+	public function onResult( result:Object ):Void
 	{
 		// tell the result object what service it came from, if it wants to know.
 		// (this call usually has no effect, except for NetServiceProxy and RecordSet).
@@ -69,17 +69,17 @@
 		    if (result instanceof mx.remoting.NetServiceProxy)
 		    {
 		        //Wrap NetServiceProxy result with new Services API to hide legacy "client" and "nc"
-		        var serv = new Service(null, null, result.serviceName, __service.connection, __service.responder)
+		        var serv:Service = new Service(null, null, result.serviceName, __service.connection, __service.responder);
 		        result = serv;
 		    }
 		    else if (result instanceof mx.remoting.RecordSet)
 		    {
-				var proxy = new mx.remoting.NetServiceProxy(__service.connection);
+				var proxy:Object = new mx.remoting.NetServiceProxy(__service.connection);
 				result._setParentService(proxy);
 				result.logger = __service.log;
 		    }
 		}
-		
+
 		if( __responder != null )
 			__responder.onResult( new ResultEvent( result ) );
 
@@ -87,17 +87,17 @@
 			__service.log.logInfo(__service.name + "."+ __methodName+ "() returned "+ mx.data.binding.ObjectDumper.toString( result ));
 		}
 	}
-	
+
 	/*
-		onStatus is invoked when an error is posted for a PendingCall. The information 
-		object has the attributes like code, details, description and type. The method 
-		then invokes a new Fault event with the information object attributes. 
+		onStatus is invoked when an error is posted for a PendingCall. The information
+		object has the attributes like code, details, description and type. The method
+		then invokes a new Fault event with the information object attributes.
 
 		@param		result	Object The object containing details, description and other information of the status
 		@tiptext	EventHandler for when a Result is received as a result of a Service call
 	*/
-	public function onStatus( status ):Void {
-		
+	public function onStatus( status:Object ):Void {
+
 		if( __responder != null )
 			__responder.onFault(new FaultEvent(new Fault(status.code, status.description, status.details, status.type)));
 
@@ -118,4 +118,4 @@
 
 	//Ensure NetServiceProxy is loaded and registered
 	private static var inited:Boolean = mx.remoting.NetServiceProxy.registerNetServiceProxy();
-}
\ No newline at end of file
+}
diff -Naur Original/mx/remoting/PendingCall.as~ Final/mx/remoting/PendingCall.as~
--- Original/mx/remoting/PendingCall.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/remoting/PendingCall.as~	2008-01-05 19:53:17.000000000 +0900
@@ -0,0 +1,121 @@
+﻿//****************************************************************************
+//Copyright (C) 2004 Macromedia, Inc. All Rights Reserved.
+//The following is Sample Code and is subject to all restrictions on
+//such code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+import mx.remoting.Service;
+import mx.rpc.Responder;
+import mx.rpc.ResultEvent;
+import mx.rpc.FaultEvent;
+import mx.rpc.Fault;
+
+/**
+	On each call to a Service Object a PendingCall Object is generated which manages
+	dispatching results recieved from the server via the associated service.  Once
+	constructed the caller should assign a responder that will process the invocation
+	results.
+
+	@tiptext Manages dispatching results recieved from the associated service
+	@helpid	4489
+
+*/
+class mx.remoting.PendingCall extends Object
+{
+	/*
+		Initializes a PendingCall object for a Service request. The PendingCall Object
+		is created with a reference to the requested Service. The PendingCall Object is
+		responsible for setting up the Responder and manage event handlers for
+		Result/Status.
+
+		@param		Service		srv		The Service on which request has been made
+		@param		String		methodName	the method to be invoked
+	*/
+	function PendingCall(srv:Service,methodName:String) {
+		super();
+		__service = srv;
+		__methodName = methodName;
+	}
+
+
+	/**
+		Provides access to the associated responder
+		@return		Responder object that will process the results of the call.
+		@tiptext	The associated Responder for this PendingCall
+		@helpid	4490
+	*/
+	public function get responder():Responder {
+		return( __responder );
+	}
+
+	public function set responder( res:Responder ):Void {
+		__responder = res;
+	}
+
+	/*
+		After successful invocation of a Service call, result is received and Handler method is invoked
+
+		@param		result	The result returned after successful invocation of a Service call
+		@tiptext	EventHandler for when a Result is received as a result of a Service call
+	*/
+	public function onResult( result:Object ):Void
+	{
+		// tell the result object what service it came from, if it wants to know.
+		// (this call usually has no effect, except for NetServiceProxy and RecordSet).
+		result.serviceName = result.serviceName;
+		if (result != null)
+		{
+		    if (result instanceof mx.remoting.NetServiceProxy)
+		    {
+		        //Wrap NetServiceProxy result with new Services API to hide legacy "client" and "nc"
+		        var serv:Service = new Service(null, null, result.serviceName, __service.connection, __service.responder);
+		        result = serv;
+		    }
+		    else if (result instanceof mx.remoting.RecordSet)
+		    {
+				var proxy:Object = new mx.remoting.NetServiceProxy(__service.connection);
+				result._setParentService(proxy);
+				result.logger = __service.log;
+		    }
+		}
+
+		if( __responder != null )
+			__responder.onResult( new ResultEvent( result ) );
+
+		if (__service.log != null){
+			__service.log.logInfo(__service.name + "."+ __methodName+ "() returned "+ mx.data.binding.ObjectDumper.toString( result ));
+		}
+	}
+
+	/*
+		onStatus is invoked when an error is posted for a PendingCall. The information
+		object has the attributes like code, details, description and type. The method
+		then invokes a new Fault event with the information object attributes.
+
+		@param		result	Object The object containing details, description and other information of the status
+		@tiptext	EventHandler for when a Result is received as a result of a Service call
+	*/
+	public function onStatus( status:String ):Void {
+
+		if( __responder != null )
+			__responder.onFault(new FaultEvent(new Fault(status.code, status.description, status.details, status.type)));
+
+		if (__service.log != null){
+			__service.log.logDebug("Service invocation failed.");
+			__service.log.logDebug(__service.name + "."+ __methodName+ "() returned "+ mx.data.binding.ObjectDumper.toString( status ));
+		}
+	}
+
+	public function get methodName():String{
+		return __methodName;
+	}
+
+	public var onFault:Function;
+	private var __responder:Responder;
+	private var __service:Service;
+	private var __methodName:String;
+
+	//Ensure NetServiceProxy is loaded and registered
+	private static var inited:Boolean = mx.remoting.NetServiceProxy.registerNetServiceProxy();
+}
diff -Naur Original/mx/remoting/RecordSet.as Final/mx/remoting/RecordSet.as
--- Original/mx/remoting/RecordSet.as	2004-06-09 11:49:00.000000000 +0800
+++ Final/mx/remoting/RecordSet.as	2008-01-05 20:08:32.000000000 +0900
@@ -17,24 +17,24 @@
 /**
   Record sets created on an application server usually consist of database query
   results. In a RecordSet object, individual records are identified by an index number.
-  the index starts at zero. Whenever 
-  a record set is sorted 
+  the index starts at zero. Whenever
+  a record set is sorted
   a record is added to a record set
   a record deleted from the record set
-  the index changes. 
-  
+  the index changes.
+
   Each field of the record is represented by a field in the object. For a RecordSet
   object that originated from an application server, the field names are the same as
   the names of the fields as defined by the server-side record set. For local RecordSet
   objects, the field names are as defined in the original call to the new RecordSet()
   function.
-   
+
    @tiptext	Contains database query results
    @helpid	4455
  */
 class mx.remoting.RecordSet extends Object implements PageableList {
-	
-	#include "RemotingComponentVersion.as"
+
+//#include "RemotingComponentVersion.as"
 
 	/**
 	  If a RecordSet object is received from a server via the AMF protocol, then
@@ -47,16 +47,16 @@
 		version: int
 		cursor: int
 		serviceName: string
-	  
+
 	  If the RecordSet is being created by the normal "new RecordSet()" call, then
 	  "serverInfo" will not exist.
  	 NOTE: the server counts records starting from number 1, but we count starting from 0.
-	  
+
  	 @param	columnNames	Array of strings with the names of the columns for this recordset.
  	 @tiptext	Creates a RecordSet with the specified column names
  	 @helpid	4456
 	*/
-	function RecordSet(columnNames:Array) {	
+	function RecordSet(columnNames:Array) {
 		super();
 		mx.events.EventDispatcher.initialize( this );
 		_items = new Array();
@@ -67,32 +67,32 @@
 			// shared object that's being reloaded into memory.
 			return;
 		}
-	
+
 		// serverinfo comes back in different case among the servers ... making it the same (mixed case)
 		if (serverInfo == null) {
 			if (serverinfo != null) {
 				serverInfo = serverinfo;
 			}
 		}
-	
+
 		if (serverInfo == null)	{
 			// there's no server information - we're done
 			mTitles = columnNames;
 			return;
 		}
-	
+
 		// this RecordSet came from a server.
 		if (serverInfo.version != 1) {
 			NetServices.trace("RecordSet", "warning", 100, "Received incompatible RecordSet version from server");
 			return;
 		}
-	
+
 		// set up the initial contents of the RecordSet
 		mTitles = serverInfo.columnNames;
 		mRecordsAvailable = 0;
 		//this.mHighWater = 0;
 		setData((serverInfo.cursor == null) ? 0 : (serverInfo.cursor - 1), serverInfo.initialData);
-	
+
 		if (serverInfo.initialData.length != serverInfo.totalCount)
 		{
 			mRecordSetID = serverInfo.id;
@@ -103,7 +103,7 @@
 				// if id is non-null, there are more records still on the server.
 				// this therefore is a server-associated RecordSet
 				serviceName = (serverInfo.serviceName == null) ? "RecordSet" : serverInfo.serviceName;
-	
+
 				// initialize other fields
 				mTotalCount = serverInfo.totalCount;
 				mDeliveryMode = "ondemand";
@@ -113,13 +113,13 @@
 			else
 				NetServices.trace("RecordSet", "warning", 102, "Missing some records, but there's no RecordSet id");
 		}
-		
+
 		serverInfo = null;
 	}
 
 	/**
-	 Inserts a record into the RecordSet object at the end. 
-	 
+	 Inserts a record into the RecordSet object at the end.
+
 	 @param		item	Object the record to add.
 	 @tiptext	Adds the specified item at the end of a RecordSet
 	 @helpid	4457
@@ -127,25 +127,25 @@
 	function addItem( item:Object ):Void {
 		addItemAt( length, item );
 	}
-	
+
 	/**
 	  Inserts a record into the RecordSet object at the specified index.
-	
+
 	  @param	index	Number	the index at which the record is to be inserted
 	  @param	item	Object	the record to add.
 	  @tiptext	Adds an item in the RecordSet at a specified index
 	  @helpid	4458
 	*/
-	function addItemAt( index:Number, item:Object ):Void 
+	function addItemAt( index:Number, item:Object ):Void
 	{
 		var addItemFlag:Boolean = true;
 
-		if((index<length) && (index >= 0)) 
+		if((index<length) && (index >= 0))
 			items.splice(index, 0, item);
 		else
 			if( index== length )
 				items[index]=item;
-		  	else 
+		  	else
 			{
 				addItemFlag = false;
 				NetServices.trace("Cannot add an item outside the bounds of the RecordSet");
@@ -155,76 +155,76 @@
 			item.__ID__ = uniqueID++;
 		updateViews( "addItems", index, index);
 	}
-	
+
 
 	/**
 	  Adds the specified listener to the list of listeners for given event.
-	  
+
 	  @param	event String containing the name of the event to listener for
 	  @param	listener Object/Function that will listen to the spceified event
 	  @tiptext	Adds the specified listener for the given event
 	  @helpid	4504
 	*/
-	function addEventListener(event:String, listener ):Void {
+	function addEventListener(event:String, listener:Object ):Void {
 		// functionality provided by EventDispatcher mixin
 	}
-	
+
 	/**
-	 Remove all records from the RecordSet. 
-	
+	 Remove all records from the RecordSet.
+
 	 @tiptext	Removes all the items from a RecordSet
 	 @helpid	4459
 	*/
-	function clear():Void 
+	function clear():Void
 	{
-		if( checkLocal()) 
+		if( checkLocal())
               return;
 
 		var len:Number = items.length;
-		
+
 		items.splice( 0 );
 		uniqueID = 0;
 		updateViews( "removeItems", 0, len );
 	}
-	
+
 	/**
 		Indicates if the RecordSet contains the specified record or not.
-	 
+
 		@param		item	Object	checks whether the record exists in the RecordSet.
 		@return		Boolean	true if the record exists in the RecordSet otherwise false.
 		@tiptext	Indicates if the specified item is contained in a RecordSet
 		@helpid	4460
 	*/
-	function contains( itmToCheck:Object ):Boolean 
+	function contains( itmToCheck:Object ):Boolean
 	{
 		if(isObjectEmpty(itmToCheck))
 			return false;
 
 		var itemAtIndex:Object;
 		var retStatus:Boolean;
-		for(var i=0; i<items.length; i++)
+		for(var i:Number =0; i<items.length; i++)
 		{
 			itemAtIndex = items[i];
 			retStatus = true;
-			for(var t in itmToCheck)
+			for(var t:String in itmToCheck)
 			{
 				if(itmToCheck[t] != itemAtIndex[t])
 				{
 					retStatus = false;
 					break;
 				}
-			} 
+			}
 			if(retStatus)
 				return true;
-		} 
+		}
 		return false;
 	}
-	
+
 	/**
 	 Returns the names of all the columns of a RecordSet object as an array of strings.
 	 The array is either the same array that you passed into the RecordSet constructor,
 	 or the equivalent array for an application server-associated RecordSet object.
-	
+
 	 @return	Array of strings (columNames).
 	 @tiptext	Returns an array of column names in a RecordSet
 	 @helpid	4461
@@ -237,7 +237,7 @@
 	 Returns the names of all the columns of a RecordSet object as an array of strings.
 	 The array is either the same array that you passed into the RecordSet constructor,
 	 or the equivalent array for an application server-associated RecordSet object.
-	
+
 	 @return	Array	an array of strings (columNames).
 	 @tiptext	Column names in a RecordSet
 	 @helpid	4462
@@ -245,10 +245,10 @@
 	function get columnNames():Array {
 		return( getColumnNames());
 	}
-	
+
 	/**
 	 Returns the number of records in the local RecordSet.
-	
+
 	 @return	Number	length of the local RecordSet.
 	 @tiptext	Number of items currently downloaded from the server
 	 @helpid	4463
@@ -256,10 +256,10 @@
 	function getLocalLength():Number {
 		return( items.length );
 	}
-	
+
 	/**
 	 Returns the number of records in the RecordSet.
-	
+
 	 @return	Number	length of the RecordSet.
 	 @tiptext	Total number of items available in a RecordSet
 	 @helpid	4464
@@ -279,20 +279,20 @@
 
 	/**
 	 Returns a new instance of RecordSetIterator for the RecordSet in use.
-	
+
 	 @return	RecordSetIterator	a new instance of iterator for the RecordSet in use.
 	 @tiptext	Returns an iterator for a RecordSet
 	 @helpid	4465
 	*/
 	function getIterator():Iterator
 	{
-		var rsIterator = new RecordSetIterator(this);
+		var rsIterator:Iterator = new RecordSetIterator(this);
 		return(rsIterator);
 	}
 
 	/**
 	 Returns the number of records in the RecordSet.
-	
+
 	 @return	Number	The length of the RecordSet.
 	 @tiptext	Returns the number of records in a RecordSet
 	 @helpid	4466
@@ -307,7 +307,7 @@
 	 record index number, it returns null. If the index number is valid but the requested
 	 record has not yet been downloaded, it returns the string "in progress". Remember that
 	 RecordSet object index changes when records sorted/deleted/added.
-	
+
 	 @param		index	Number The record number to retrieve.
 	 @return	Object	a record to be inserted
 	 @tiptext	Returns an item at a specified index in a RecordSet
@@ -315,7 +315,7 @@
 	*/
 	function getItemAt(index:Number):Object {
 		// trace("RecordSet.getItemAt(" + index + ")");
-		// It is server associated. See if the index is valid. 
+		// It is server associated. See if the index is valid.
 		if ((index < 0) || (index >= this.length)) {
 			return( null );
 		}
@@ -325,13 +325,13 @@
 			//trace("RecordSet.getItemAt not server-associated");
 			return( items[index] );
 		}
-	
+
 		// let the paging lookahead code have a look at this request.
 		// (even if the record is in memory we might still want to request a download of the page)
 		requestRecord(index);
-	
-		var result = items[index];
-		if (result == 1) 
+
+		var result:Object = items[index];
+		if (result == 1)
 		  return( "in progress" );
 		//trace("RecordSet.getItemAt(" + index + ") returning " + result);
 		return( result );
@@ -345,7 +345,7 @@
 	 not change when the RecordSet object is sorted or when records are added or
 	 deleted. When a record is deleted, its ID is retired and will never be used
 	 again in this RecordSet object.
-	
+
 	 @param		index	Number the index number of the record.
 	 @return	Object	a unique identification (ID) corresponding to the record, at the specified index. Returns null if the index is out of range.
 	 @tiptext	Returns the ID corresponding to the record at a specified index
@@ -354,10 +354,10 @@
 	function getItemID( index:Number ):Object {
 		return( items[index].__ID__ );
 	}
-	
+
 	/**
 	 Returns an array of all records of the RecordSet.
-	
+
 	 @return	Array	an array of all records.
 	 @tiptext	Provides access to local items of the RecordSet
 	 @helpid	4469
@@ -365,15 +365,15 @@
 	function get items():Array {
 		return( _items );
 	}
-	
+
 	function initialize( info:Object ):Void {
 		// nothing to do here
 	}
-	
+
 	//-------------------------------------------------------------
 	// public data Manipulation functions
 	//-------------------------------------------------------------
-	
+
 	/**
 	 Creates a new RecordSet object by calling the filterFunction method once for
 	 each record in the RecordSet object and consolidating all the records, for which the
@@ -385,27 +385,27 @@
 		If used on a RecordSet object that is not fully-populated, only the currently
 	 available records are filtered. The new RecordSet object does not inherit the
 	 original RecordSet object's list of views, nor any association with a server-side
-	 RecordSet object. 
-	
+	 RecordSet object.
+
 	 @param		filterFunction	Function an ActionScript function that takes one or two
-	 parameters and returns true or false . The first parameter is a single 
-	 record from the RecordSet object.The second, optional, parameter is a 
-	 context value that the function uses to determine whether to include 
+	 parameters and returns true or false . The first parameter is a single
+	 record from the RecordSet object.The second, optional, parameter is a
+	 context value that the function uses to determine whether to include
 	 the record in the result. The function must return true if the record
-	 should be included in the result RecordSet object. 
+	 should be included in the result RecordSet object.
 
 	 @param		context		a context value supplied by the caller. This value is the second parameter to the filter function.
 	 @return	RecordSet	a new RecordSet object that contains a reference, not a copy, to all the records that were selected by the filterFunction function.
 	 @tiptext	Returns a filtered RecordSet based on the specified filter function
 	 @helpid	4470
 	*/
-	function filter(filterFunction:Function, context):RecordSet {
-		if(checkLocal()) 
-		  return;
-	
+	function filter(filterFunction:Function, context:String):RecordSet {
+		if(checkLocal())
+		  return null;
+
 		// create a new, empty RecordSet
 		var result:RecordSet = new RecordSet(mTitles);
-	
+
 		// loop over all the records in the current RecordSet
 		// find the ones that the the filter function approves of,
 		// and add it to the result
@@ -416,7 +416,7 @@
 				result.addItem(item);
 			}
 		}
-	
+
 		//trace("RecordSet.filter: " + NetServices.objectToString(result));
 		return( result );
 	}
@@ -424,21 +424,21 @@
 	/**
 	 Sorts all the records using a user-specified compare function. The sort method sorts
 	 all the records in place, without making a new copy. The order is determined by the
-	 user-supplied compareFunction function. The original order is not remembered. 
-	
-	 @param	compareFunc Function an ActionScript comparison function that determines the sorting order. 
-	 Given the arguments A and B, the comparison function returns a value as follows: 
-	 -1 if A appears before B in the sorted sequence. 
-	 0 if A = B. 
-	 1 if A appears after B in the sorted sequence. 
-	 
-	 @param	optionFlags	Number one or more numbers or strings, separated by the | (bitwise OR) operator, 
-	 that change the behavior of the sort from the default. The following values are acceptable for option: 
-	 1 or Array.CASEINSENSITIVE 
-	 2 or Array.DESCENDING 
-	 4 or Array.UNIQUESORT 
-	 8 or Array.RETURNINDEXEDARRAY 
-	 16 or Array.NUMERIC 
+	 user-supplied compareFunction function. The original order is not remembered.
+
+	 @param	compareFunc Function an ActionScript comparison function that determines the sorting order.
+	 Given the arguments A and B, the comparison function returns a value as follows:
+	 -1 if A appears before B in the sorted sequence.
+	 0 if A = B.
+	 1 if A appears after B in the sorted sequence.
+
+	 @param	optionFlags	Number one or more numbers or strings, separated by the | (bitwise OR) operator,
+	 that change the behavior of the sort from the default. The following values are acceptable for option:
+	 1 or Array.CASEINSENSITIVE
+	 2 or Array.DESCENDING
+	 4 or Array.UNIQUESORT
+	 8 or Array.RETURNINDEXEDARRAY
+	 16 or Array.NUMERIC
 
 	 @tiptext	Sorts items based on a specified compare function
 	 @helpid	4471
@@ -446,64 +446,64 @@
 	function sortItems( compareFunc:Function, optionFlags:Number ):Void {
 		if( checkLocal())
 			return;
-		
+
 		items.sort( compareFunc, optionFlags );
 		updateViews( "sort" );
 	}
-	
+
 	/**
 	 Sorts all records in the RecordSet object without making a new copy. The sort key value for each
 	 record is the contents of the field identified by the field ID. The original order is not saved.
-	
+
 	 @param		fieldNames	Array fieldNames on which sorting needs to be done.
-	 @param		optionFlags	Number one or more numbers or strings, separated by	the | (bitwise OR) operator, 
-	 that change the behavior of the sort from the default. The following values are acceptable for option : 
-	 1 or Array.CASEINSENSITIVE 
-	 2 or Array.DESCENDING 
-	 4 or Array.UNIQUE 
-	 8 or Array.RETURNINDEXEDARRAY 
-	 16 or Array.NUMERIC 
-	 
+	 @param		optionFlags	Number one or more numbers or strings, separated by	the | (bitwise OR) operator,
+	 that change the behavior of the sort from the default. The following values are acceptable for option :
+	 1 or Array.CASEINSENSITIVE
+	 2 or Array.DESCENDING
+	 4 or Array.UNIQUE
+	 8 or Array.RETURNINDEXEDARRAY
+	 16 or Array.NUMERIC
+
 	 @tiptext	Sorts items based on fields specified
 	 @helpid	4472
 	*/
-	
+
 	function sortItemsBy( fieldNames:Array, order :String, optionFlags:Number ):Void {
 		if( checkLocal())
 			return;
 
-		if (typeof(order)=="string") 
+		if (typeof(order)=="string")
 		{
 			items.sortOn(fieldNames);
-			if (order.toUpperCase()=="DESC") 
+			if (order.toUpperCase()=="DESC")
 			{
 				items.reverse();
 			}
-		} 
-		else 
+		}
+		else
 		{
 			items.sortOn(fieldNames, optionFlags);
 		}
 		updateViews( "sort" );
 	}
-	
+
 	/**
-	 Sorts all the records using a user-specified compare function. The sort method sorts 
-	 all the records in place, without making a new copy. The order is determined 
+	 Sorts all the records using a user-specified compare function. The sort method sorts
+	 all the records in place, without making a new copy. The order is determined
 	 by the user-supplied compareFunction function. The original order is not remembered.
 
-	 @param	compareFunc	Function	an ActionScript comparison function that determines	the sorting order. Given the arguments A and B, the comparison function returns a value as follows: 
+	 @param	compareFunc	Function	an ActionScript comparison function that determines	the sorting order. Given the arguments A and B, the comparison function returns a value as follows:
 	 -1 if A appears before B in the sorted sequence.
-	 0 if A = B. 
-	 1 if A appears after B in the sorted sequence. 
+	 0 if A = B.
+	 1 if A appears after B in the sorted sequence.
 
 	 @tiptext	Sorts items with the specified compare function
 	 @helpid	4473
 	*/
 	function sort(compareFunc:Function):Void {
-		if (checkLocal()) 
+		if (checkLocal())
 		  return;
-	
+
 		items.sort(compareFunc);
 		updateViews( "sort" );
 	}
@@ -512,10 +512,10 @@
 	//-------------------------------------------------------------
 	// public data delivery functions
 	//-------------------------------------------------------------
-	
+
 	/**
 	 Determines whether a RecordSet object is empty or not.
-	 
+
 	 @return	Boolean		returns true if the RecordSet is empty otherwise false.
 	 @tiptext	Indicates if there are any items in a RecordSet
 	 @helpid	4474
@@ -523,12 +523,12 @@
 	function isEmpty():Boolean {
 		return( items.length == 0 );
 	}
-	
+
 	/**
 	 Determines whether a RecordSet object is local or associated with an application server
 	 and records remain to be retrieved from the application server. This method is functionally
 	 identical to the RecordSet.isFullyPopulated method.
-	
+
 	 @return	Boolean returns true if the RecordSet object is local and false if records remain to be retrieved from the application server.
 	 @tiptext	Indicates if this RecordSet is server associated
 	 @helpid	4475
@@ -541,7 +541,7 @@
 	 Determines whether a RecordSet object is fully populated, that is, has all its records. Local
 	 RecordSet objects are always fully populated. RecordSet objects provided by application servers
 	 are fully populated after all of their records have been downloaded from the application server.
-	
+
 	 @return	Boolean		returns true if the RecordSet object is fully populated or false if the RecordSet object is not fully populated.
 	 @tiptext	Indicates if a server associated RecordSet has had all items downloaded
 	 @helpid	4476
@@ -549,12 +549,12 @@
 	function isFullyPopulated():Boolean {
 		return( isLocal());
 	}
-	
+
 
 	/**
-	 Returns the number of records available on the server. 
-	 
-	 @return	Number length of the RecordSet at the server side. 
+	 Returns the number of records available on the server.
+
+	 @return	Number length of the RecordSet at the server side.
 	 @tiptext	Total number of items at the server for server associated RecordSets
 	 @helpid	4477
 	*/
@@ -569,9 +569,9 @@
 	 Returns the number of records that have been downloaded from the server. The count does not
 	 include records that have been requested but not yet arrived. For local RecordSet objects,
 	 this will always return the same value as the getLocalLength method.
-	
+
 	 @return	Number	length of the RecordSet which either equal to getLocalLength or getRemoteLength.
-	 @tiptext	Total number of items downloaded from the server 
+	 @tiptext	Total number of items downloaded from the server
 	 @helpid	4478
 	*/
 	function getNumberAvailable():Number {
@@ -580,16 +580,16 @@
 		else
 			return( mRecordsAvailable );
 	}
-	
+
 	/**
-	 Replaces a record in the RecordSet object at the specified index. The record's contents are replaced 
-	 with the contents of the record parameter. The record's ID does not change. When you use the 
-	 replaceItemAt method, avoid the following conditions: 
-	 1. Index out of range. 
-	 2. The record parameter is not an object. 
-	 3. The record parameter has unknown or missing fields. 
-	 4. The RecordSet object is associated with an application server and not fully populated yet. 
-	
+	 Replaces a record in the RecordSet object at the specified index. The record's contents are replaced
+	 with the contents of the record parameter. The record's ID does not change. When you use the
+	 replaceItemAt method, avoid the following conditions:
+	 1. Index out of range.
+	 2. The record parameter is not an object.
+	 3. The record parameter has unknown or missing fields.
+	 4. The RecordSet object is associated with an application server and not fully populated yet.
+
 	 @param		index	Number the index number of the record.
 	 @param		item	Object the record which will replace the existing record at the specified index.
 	 @tiptext	Replaces an item at the specified index
@@ -597,17 +597,17 @@
 	*/
 	function replaceItemAt( index:Number, item:Object ):Void {
 		if (index>=0 && index<=length) {
-			var tmpID = getItemID(index);
+			var tmpID:Object = getItemID(index);
 			items[index] = item;
 			items[index].__ID__ = tmpID;
 			updateViews( "updateItems", index, index );
 		}
 	}
-	
+
 	/**
 	 Removes all records from the record set. Do not use the removeAll method, when the RecordSet
 	 object is associated with an application server and not fully populated yet.
-	
+
 	 @return	Void
 	 @tiptext	Removes all the items from a RecordSet
 	 @helpid	4480
@@ -615,13 +615,13 @@
 	function removeAll():Void {
 		clear();
 	}
-	
+
 	/**
 	 Removes the record at the specified index in the RecordSet. The associated record ID is never used again in the RecordSet object.
-	 When you use the removeItemAt method, avoid the following conditions: 
-	 1. Index out of range. 
+	 When you use the removeItemAt method, avoid the following conditions:
+	 1. Index out of range.
 	 2. The RecordSet object is associated with an application server and not fully populated yet.
-	
+
 	 @param		index	Number the index number of the record.
 	 @return	Object	The removed record
 	 @tiptext	Removes an item from the specified index
@@ -638,71 +638,71 @@
 
 	/**
 	  Removes the specified listener from the list of listeners for given event.
-	  
+
 	  @param	event String containing the name of the event
 	  @param	listener Object/Function that will listen to the spceified event
 	  @tiptext	Removes the specified listener for the given event
 	  @helpid	4503
 	*/
-	function removeEventListener( event:String, listener ):Void {
+	function removeEventListener( event:String, listener:Object ):Void {
 		// functionality provided by EventDispatcher mixin
 	}
 
-	function requestRange( range:DataRange ):Number {
+	function requestRange( range:DataRange ):Object {
 		var index:Number = range.getStart();
-		var lastIndex:Number= range.getEnd();
+		var lastIndex:Number = range.getEnd();
 		return( internalRequestRange( index, lastIndex ));
 	}
 
 	/**
 	 Changes the delivery mode of a record set associated with an application server.
-	 At any time, a RecordSet object associated with an application server is operating 
+	 At any time, a RecordSet object associated with an application server is operating
 	 in a particular data-delivery mode. The new mode setting takes effect immediately,
 	 except that pending application server requests are allowed to complete. You can
 	 change mode settings and delivery mode parameters.
-	
-	 @param		mode				String				Identifies the delivery mode. The options are ondemand (default), fetchall, and page. 
+
+	 @param		mode				String				Identifies the delivery mode. The options are ondemand (default), fetchall, and page.
 	 @param		pagesize			Number (Optional)	In page mode, what the page size is in fetchall mode, how many records to fetch in each server request. The default is 25.
 	 @param		numPrefetchPages	Number(Optional)	In page mode, the number of pages to prefetch. The default is 0, fetch only the required page.
 	 @tiptext	Sets the delivery mode for server associated RecordSets
 	 @helpid	4482
 	*/
-	
+
 	function setDeliveryMode(mode:String, pagesize:Number, numPrefetchPages:Number):Void {
 		//trace("RecordSet.setDeliveryMode(" + mode + "," + pagesize + "," + numPrefetchPages + ")");
 		mDeliveryMode = mode.toLowerCase();
 		stopFetchAll();
-		
+
 		//fix for 88084
-		if (pagesize == null || pagesize <=0) 
+		if (pagesize == null || pagesize <=0)
 		{
 			// deduce the page size from our views...
 			// !!@ doc note: you must up at least one view (via setDataProvider) before doing setDeliveryMode
-			// !!@ doc note: if there are multiple views, we use the pagesize of the first view 
+			// !!@ doc note: if there are multiple views, we use the pagesize of the first view
 			// !!@ doc note: if the listbox gets resized, you must call setDeliveryMode again
 			//pagesize = this.views[0].getRowCount();
 			//if (pagesize == null)
 			pagesize = 25;
 		}
-		
+
 		switch( mDeliveryMode ) {
 			case "ondemand":
 			break;
-			
+
 			case "page":
 				if (numPrefetchPages == null)
 					numPrefetchPages = 0;
-		
+
 				mPageSize = pagesize;
 				mNumPrefetchPages = numPrefetchPages;
 				// !!@ doc note: 0 is ok for numPrefetchPages, it means fetch only the current page.
 			break;
-			
+
 			case "fetchall":
 				stopFetchAll();
 				startFetchAll(pagesize);
 			break;
-			
+
 			default:
 				NetServices.trace("RecordSet", "warning", 107, "SetDeliveryMode: unknown mode string");
 			break;
@@ -710,33 +710,33 @@
 	}
 
 	/**
-	  Replaces one field of a record with a new value specified. When you use the editField method, avoid the following conditions: 
+	  Replaces one field of a record with a new value specified. When you use the editField method, avoid the following conditions:
 	  Index out of range
 	  The RecordSet object is associated with an application server and not fully populated yet
 	  Unknown field name. The fieldName parameter does not equal a valid column name
-	
+
 	 @param		index		Number	The index number of the record.
 	 @param		fieldName	String	The field name to replace.
 	 @param		value		(any dataType)	The new value to insert into the field.
 	 @tiptext	Sets the value of the specified field for an item at a given index
 	 @helpid	4483
 	*/
-	function editField (index : Number, fieldName : String , value):Void 
+	function editField (index:Number, fieldName:String , value:String):Void
 	{
 		changeFieldValue(index,fieldName,value);
-	}	
+	}
 
 
 	/**
-	 
+
 	 Returns the specified fieldName of a record at the specified index in the RecordSet.
-	
+
 	 @param		index	Number	the index of the item
 	 @param		fieldName	String	the name of the field to edit
 	 @return	Object	an Object containing the field data from the record
 	 @tiptext	Returns the specified field data from an item at a specified index
 	 @helpid	4484
-	
+
 	*/
 	function getEditingData (index:Number, fieldName:String):Object
 	{
@@ -744,52 +744,52 @@
 	}
 
 	/**
-	 Replaces one field of a record with a new value. When you use the setField method, avoid the following conditions: 
-	 Index out of range. The RecordSet object is associated with an application server and not fully populated yet. 
+	 Replaces one field of a record with a new value. When you use the setField method, avoid the following conditions:
+	 Index out of range. The RecordSet object is associated with an application server and not fully populated yet.
 	 Unknown field name. The fieldName parameter does not equal a valid column name
-	
+
 	 @param	Number	The index number of the record.
 	 @param	String	The field name to replace.
 	 @param	(any dataType)	The new value to insert into the field.
 	 @tiptext	Sets the value of the specified field for an item at a given index
 	 @helpid	4485
 	*/
-	function setField (index : Number, fieldName : String , value):Void 
+	function setField (index:Number, fieldName:String , value:String):Void
 	{
 		changeFieldValue(index,fieldName,value);
-	}	
+	}
 
-	private function changeFieldValue(index : Number, fieldName : String , value):Void 
+	private function changeFieldValue(index : Number, fieldName : String , value:String):Void
 	{
 		if (checkLocal()) return;
 
 		if (index<0 || index>=getLength()) {
 			return;
 		}
-		
+
 		items[index][fieldName] = value;
 		updateViews( "updateItems", index, index);
 	}
-	
+
 	//returns true if Object has no attrubutes
-	private function isObjectEmpty(objToCheck:Object)
-	{	
+	private function isObjectEmpty(objToCheck:Object):Boolean
+	{
 		var emptyFlag:Boolean = true;
-		for(var i in objToCheck)
+		for(var i:Object in objToCheck)
 		{
 			emptyFlag = false;
 			return emptyFlag;
 		}
 		return emptyFlag;
 	}
-	
+
 	//reads an array and returns an object
 	private function arrayToObject(anArray:Array):Object {
 		if (mTitles == null) {
 			NetServices.trace("RecordSet", "warning", 105, "getItem: titles are not available");
 			return( null );
 		}
-	
+
 		var result:Object = new Object();
 		var alen:Number = anArray.length;
 		var title:String;
@@ -812,18 +812,18 @@
 	}
 
 	private function getRecordSetService():NetServiceProxy {
-		if (mRecordSetService == null) 
+		if (mRecordSetService == null)
 		{
-			if (gateway_conn == null) 
+			if (gateway_conn == null)
 			{
 				// _setParentService never got called. this will only happen if:
 				//  - RecordSet is not the top-level return value, or
-				//  - NetServiceProxyResponder is not in use (i.e. there is a developer-supplied response object 
+				//  - NetServiceProxyResponder is not in use (i.e. there is a developer-supplied response object
 				//    for the service call that returned this RecordSet
-				
+
 				gateway_conn = mx.remoting.NetServices.createGatewayConnection();
 			}
-			else 
+			else
 			{
 				// A parent netconnect has been supplied. If necessary,
 				// make a new netconnection, so we can have separate debug flags
@@ -831,34 +831,34 @@
 					gateway_conn = gateway_conn.clone();
 				}
 			}
-			
+
 			if (_global.netDebugInstance != undefined) {
 				gateway_conn.setupRecordSet();
 				gateway_conn.setDebugId("RecordSet " + mRecordSetID);
 			}
-	
+
 			mRecordSetService = gateway_conn.getService(serviceName, this);
 			if (mRecordSetService == null) {
 				NetServices.trace("RecordSet", "warning", 101, "Failed to create RecordSet service");
 				mRecordSetService = null; // so we don't get a flood of error messages
 			}
 		}
-		
+
 		return( mRecordSetService );
 	}
-	
+
 	private function internalRequestRange( index:Number, lastIndex:Number ):Number {
 		//trace("RecordSet.internalRequestRecordRange(" + index + "," + lastIndex + ")");
 		var highestRequested:Number = -1;
 		// make sure indices are valid
 		if (index < 0)
 			index = 0;
-			
+
 		if (lastIndex >= getRemoteLength())
 			lastIndex = getRemoteLength() - 1;
-	
+
 		// find sequences of null entries to request
-		// we could also just make a bunch of individual requests, but this seems 
+		// we could also just make a bunch of individual requests, but this seems
 		// cleaner. the server should be able to handle either case efficiently.
 		var first:Number; // this is the index of the first null entry in a group
 		var last:Number;
@@ -873,8 +873,8 @@
 				index++;
 			}
 			last = index - 1;
-	
-			if (first <= last) 
+
+			if (first <= last)
 			{
 				logger.logInfo( " Fetching records from index ["+first+"] to index ["+last+"]");
 				getRecordSetService().getRecords(mRecordSetID, first + 1, last - first + 1);
@@ -884,7 +884,7 @@
 		}
 		return( highestRequested );
 	}
-	
+
 	private function removeItems( index:Number, len:Number):Void {
 		var itemIDs:Array = new Array();
 		for (var i:Number=0; i<len; i++) {
@@ -900,17 +900,17 @@
 	//-------------------------------------------------------------
 	// Responses from the RecordSet service
 	//-------------------------------------------------------------
-	
+
 	// this function is where all our data comes in from the RecordSet service
 	private function getRecords_Result(info:Object):Void {
 		//trace("RecordSet.getRecords_Result(), start=" + info.Cursor +
 		//	", id=" + info.id + ", data=" + info.Page);
-	
+
 		setData(info.Cursor - 1, info.Page);
 		mOutstandingRecordCount -= info.Page.length;
 		// !!@ assert (this.mOutstandingRecordCount) >= 0
 		updateViews("updateItems", info.Cursor - 1, info.Cursor - 1 + info.Page.length - 1);
-	
+
 		if ((mRecordsAvailable == mTotalCount) && !mAllNotified) {
 			updateViews("allRows");
 			mRecordSetService.release();
@@ -919,14 +919,14 @@
 			mRecordSetService = null;
 		}
 	}
-	
+
 	private function release_Result():Void {
 		// ignore this
 	}
 
-	private function requestOneRecord(index):Void 
+	private function requestOneRecord(index:Number):Void
 	{
-		if (items[index] == null) 
+		if (items[index] == null)
 		{
 			if(mDeliveryMode == "ondemand")
 				logger.logInfo(" INFO: Fetching Record ["+index+"]");
@@ -937,9 +937,9 @@
 			updateViews("fetchRows", index, index);
 		}
 	}
-	
+
 	private function requestRecord(index:Number):Void {
-		if (mDeliveryMode != "page") 
+		if (mDeliveryMode != "page")
 		{
 			// fetchall, ondemand or unknown
 			requestOneRecord(index);
@@ -950,7 +950,7 @@
 			// !!@ there is probably a better algorithm, but messier
 			// the current algorithm works fine if records are always fetched in increasing index order
 			// but goes wierd if not.
-		
+
 			// See if we need to prefetch the next N+1 pages, starting at index
 			// (its N+1 because we always prefetch *the current page* as well
 			// as any requested other pages)
@@ -968,7 +968,7 @@
 		//trace("setData " + start + "," +dataArray.length);
 		var datalen:Number = dataArray.length;
 		var index:Number;
-		var rec:Object
+		var rec:Object;
 		for (var i:Number = 0; i < datalen; i++) {
 			index = i + start;
 			rec = items[index];
@@ -978,7 +978,7 @@
 			}
 			else
 				mRecordsAvailable += 1;
-	
+
 			items[index] = arrayToObject(dataArray[i]);
 			items[index].__ID__ = uniqueID++;
 		}
@@ -990,7 +990,7 @@
 			mDataFetcher.disable();
 		mDataFetcher = new mx.remoting.RsDataFetcher(this, pagesize);
 	}
-	
+
 	private function stopFetchAll():Void {
 		//trace("RecordSet.stopFetchAll()");
 		mDataFetcher.disable();
@@ -1000,17 +1000,17 @@
 	private function updateViews(event:String, first:Number, last:Number): Void {
 		dispatchEvent({type:"modelChanged", eventName: event, firstItem:first, lastItem:last});
 	}
-	
+
 	// Ensure that RecordSets received via AMF messages get
 	private static function registerRecordSet():Boolean {
 		Object.registerClass( "RecordSet", mx.remoting.RecordSet );
 		return( true );
 	}
-	
+
 	// server-associated RecordSet only
 	public var serverInfo:Object; // attached by the player
 	public var serverinfo:Object; // attached by the player
-	public var serviceName:String; 
+	public var serviceName:String;
 
 	//-------------------------------------------------------------
 	// private definitions
diff -Naur Original/mx/remoting/RecordSet.as~ Final/mx/remoting/RecordSet.as~
--- Original/mx/remoting/RecordSet.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/remoting/RecordSet.as~	2008-01-05 20:06:06.000000000 +0900
@@ -0,0 +1,1043 @@
+﻿//****************************************************************************
+//Copyright (C) 2004 Macromedia, Inc. All Rights Reserved.
+//The following is Sample Code and is subject to all restrictions on
+//such code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+import mx.remoting.Connection;
+import mx.remoting.NetServiceProxy;
+import mx.remoting.NetServices;
+import mx.remoting.RsDataFetcher;
+import mx.data.DataRange;
+import mx.data.PageableList;
+import mx.remoting.RecordSetIterator;
+import mx.utils.Iterator;
+
+/**
+  Record sets created on an application server usually consist of database query
+  results. In a RecordSet object, individual records are identified by an index number.
+  the index starts at zero. Whenever
+  a record set is sorted
+  a record is added to a record set
+  a record deleted from the record set
+  the index changes.
+
+  Each field of the record is represented by a field in the object. For a RecordSet
+  object that originated from an application server, the field names are the same as
+  the names of the fields as defined by the server-side record set. For local RecordSet
+  objects, the field names are as defined in the original call to the new RecordSet()
+  function.
+
+   @tiptext	Contains database query results
+   @helpid	4455
+ */
+class mx.remoting.RecordSet extends Object implements PageableList {
+
+//#include "RemotingComponentVersion.as"
+
+	/**
+	  If a RecordSet object is received from a server via the AMF protocol, then
+	  there will be a field called "serverInfo" already existing when the constructor is called
+	  by the AMF deserializer. The fields are:
+	 	totalCount: int
+	 	columnNames: array of string
+		initialData: array of array of field
+		id: string
+		version: int
+		cursor: int
+		serviceName: string
+
+	  If the RecordSet is being created by the normal "new RecordSet()" call, then
+	  "serverInfo" will not exist.
+ 	 NOTE: the server counts records starting from number 1, but we count starting from 0.
+
+ 	 @param	columnNames	Array of strings with the names of the columns for this recordset.
+ 	 @tiptext	Creates a RecordSet with the specified column names
+ 	 @helpid	4456
+	*/
+	function RecordSet(columnNames:Array) {
+		super();
+		mx.events.EventDispatcher.initialize( this );
+		_items = new Array();
+		uniqueID=0;
+		if (mTitles != null) {
+			// we've already been constructed.
+			// this should happen only when the object is a
+			// shared object that's being reloaded into memory.
+			return;
+		}
+
+		// serverinfo comes back in different case among the servers ... making it the same (mixed case)
+		if (serverInfo == null) {
+			if (serverinfo != null) {
+				serverInfo = serverinfo;
+			}
+		}
+
+		if (serverInfo == null)	{
+			// there's no server information - we're done
+			mTitles = columnNames;
+			return;
+		}
+
+		// this RecordSet came from a server.
+		if (serverInfo.version != 1) {
+			NetServices.trace("RecordSet", "warning", 100, "Received incompatible RecordSet version from server");
+			return;
+		}
+
+		// set up the initial contents of the RecordSet
+		mTitles = serverInfo.columnNames;
+		mRecordsAvailable = 0;
+		//this.mHighWater = 0;
+		setData((serverInfo.cursor == null) ? 0 : (serverInfo.cursor - 1), serverInfo.initialData);
+
+		if (serverInfo.initialData.length != serverInfo.totalCount)
+		{
+			mRecordSetID = serverInfo.id;
+			// we haven't yet got all the data
+			// RED FLAG: "Id" is in mixed case
+			if (mRecordSetID != null)
+			{
+				// if id is non-null, there are more records still on the server.
+				// this therefore is a server-associated RecordSet
+				serviceName = (serverInfo.serviceName == null) ? "RecordSet" : serverInfo.serviceName;
+
+				// initialize other fields
+				mTotalCount = serverInfo.totalCount;
+				mDeliveryMode = "ondemand";
+				mAllNotified = false;
+				mOutstandingRecordCount = 0;
+			}
+			else
+				NetServices.trace("RecordSet", "warning", 102, "Missing some records, but there's no RecordSet id");
+		}
+
+		serverInfo = null;
+	}
+
+	/**
+	 Inserts a record into the RecordSet object at the end.
+
+	 @param		item	Object the record to add.
+	 @tiptext	Adds the specified item at the end of a RecordSet
+	 @helpid	4457
+	*/
+	function addItem( item:Object ):Void {
+		addItemAt( length, item );
+	}
+
+	/**
+	  Inserts a record into the RecordSet object at the specified index.
+
+	  @param	index	Number	the index at which the record is to be inserted
+	  @param	item	Object	the record to add.
+	  @tiptext	Adds an item in the RecordSet at a specified index
+	  @helpid	4458
+	*/
+	function addItemAt( index:Number, item:Object ):Void
+	{
+		var addItemFlag:Boolean = true;
+
+		if((index<length) && (index >= 0))
+			items.splice(index, 0, item);
+		else
+			if( index== length )
+				items[index]=item;
+		  	else
+			{
+				addItemFlag = false;
+				NetServices.trace("Cannot add an item outside the bounds of the RecordSet");
+				return;
+			}
+		if(addItemFlag)
+			item.__ID__ = uniqueID++;
+		updateViews( "addItems", index, index);
+	}
+
+
+	/**
+	  Adds the specified listener to the list of listeners for given event.
+
+	  @param	event String containing the name of the event to listener for
+	  @param	listener Object/Function that will listen to the spceified event
+	  @tiptext	Adds the specified listener for the given event
+	  @helpid	4504
+	*/
+	function addEventListener(event:String, listener:Object ):Void {
+		// functionality provided by EventDispatcher mixin
+	}
+
+	/**
+	 Remove all records from the RecordSet.
+
+	 @tiptext	Removes all the items from a RecordSet
+	 @helpid	4459
+	*/
+	function clear():Void
+	{
+		if( checkLocal())
+              return;
+
+		var len:Number = items.length;
+
+		items.splice( 0 );
+		uniqueID = 0;
+		updateViews( "removeItems", 0, len );
+	}
+
+	/**
+		Indicates if the RecordSet contains the specified record or not.
+
+		@param		item	Object	checks whether the record exists in the RecordSet.
+		@return		Boolean	true if the record exists in the RecordSet otherwise false.
+		@tiptext	Indicates if the specified item is contained in a RecordSet
+		@helpid	4460
+	*/
+	function contains( itmToCheck:Object ):Boolean
+	{
+		if(isObjectEmpty(itmToCheck))
+			return false;
+
+		var itemAtIndex:Object;
+		var retStatus:Boolean;
+		for(var i:Number =0; i<items.length; i++)
+		{
+			itemAtIndex = items[i];
+			retStatus = true;
+			for(var t:String in itmToCheck)
+			{
+				if(itmToCheck[t] != itemAtIndex[t])
+				{
+					retStatus = false;
+					break;
+				}
+			}
+			if(retStatus)
+				return true;
+		}
+		return false;
+	}
+
+	/**
+	 Returns the names of all the columns of a RecordSet object as an array of strings.
+	 The array is either the same array that you passed into the RecordSet constructor,
+	 or the equivalent array for an application server-associated RecordSet object.
+
+	 @return	Array of strings (columNames).
+	 @tiptext	Returns an array of column names in a RecordSet
+	 @helpid	4461
+	*/
+	function getColumnNames():Array {
+		return( mTitles );
+	}
+
+	/**
+	 Returns the names of all the columns of a RecordSet object as an array of strings.
+	 The array is either the same array that you passed into the RecordSet constructor,
+	 or the equivalent array for an application server-associated RecordSet object.
+
+	 @return	Array	an array of strings (columNames).
+	 @tiptext	Column names in a RecordSet
+	 @helpid	4462
+	*/
+	function get columnNames():Array {
+		return( getColumnNames());
+	}
+
+	/**
+	 Returns the number of records in the local RecordSet.
+
+	 @return	Number	length of the local RecordSet.
+	 @tiptext	Number of items currently downloaded from the server
+	 @helpid	4463
+	*/
+	function getLocalLength():Number {
+		return( items.length );
+	}
+
+	/**
+	 Returns the number of records in the RecordSet.
+
+	 @return	Number	length of the RecordSet.
+	 @tiptext	Total number of items available in a RecordSet
+	 @helpid	4464
+	*/
+	function getLength():Number {
+		if (mRecordSetID != null) {
+			// a server-associated RecordSet
+			//trace("RecordSet.getLength from server: " + mTotalCount);
+			return( mTotalCount );
+		}
+		else {
+			// a local RecordSet
+			//trace("RecordSet.getLength: " + items.length);
+			return( items.length );
+		}
+	}
+
+	/**
+	 Returns a new instance of RecordSetIterator for the RecordSet in use.
+
+	 @return	RecordSetIterator	a new instance of iterator for the RecordSet in use.
+	 @tiptext	Returns an iterator for a RecordSet
+	 @helpid	4465
+	*/
+	function getIterator():Iterator
+	{
+		var rsIterator:Iterator = new RecordSetIterator(this);
+		return(rsIterator);
+	}
+
+	/**
+	 Returns the number of records in the RecordSet.
+
+	 @return	Number	The length of the RecordSet.
+	 @tiptext	Returns the number of records in a RecordSet
+	 @helpid	4466
+	*/
+	function get length():Number {
+		return( getLength());
+	}
+
+	/**
+ 	 Returns a record if the index is valid and the record has downloaded completely.
+	 If the requested record index number is less than zero or greater than the largest
+	 record index number, it returns null. If the index number is valid but the requested
+	 record has not yet been downloaded, it returns the string "in progress". Remember that
+	 RecordSet object index changes when records sorted/deleted/added.
+
+	 @param		index	Number The record number to retrieve.
+	 @return	Object	a record to be inserted
+	 @tiptext	Returns an item at a specified index in a RecordSet
+	 @helpid	4467
+	*/
+	function getItemAt(index:Number):Object {
+		// trace("RecordSet.getItemAt(" + index + ")");
+		// It is server associated. See if the index is valid.
+		if ((index < 0) || (index >= this.length)) {
+			return( null );
+		}
+		// RED FLAG "Id"
+		if (mRecordSetID == null) {
+			// this is not a server-associated RecordSet
+			//trace("RecordSet.getItemAt not server-associated");
+			return( items[index] );
+		}
+
+		// let the paging lookahead code have a look at this request.
+		// (even if the record is in memory we might still want to request a download of the page)
+		requestRecord(index);
+
+		var result:Object = items[index];
+		if (result == 1)
+		  return( "in progress" );
+		//trace("RecordSet.getItemAt(" + index + ") returning " + result);
+		return( result );
+	}
+
+	/**
+	 Returns a unique ID corresponding to the record, at the specified index.
+	 The RecordSet object assigns each record a unique ID. The ID is not part
+	 of the record; it is a separate item that is associated with the record
+	 internally within the RecordSet object. Unlike a record index, its ID will
+	 not change when the RecordSet object is sorted or when records are added or
+	 deleted. When a record is deleted, its ID is retired and will never be used
+	 again in this RecordSet object.
+
+	 @param		index	Number the index number of the record.
+	 @return	Object	a unique identification (ID) corresponding to the record, at the specified index. Returns null if the index is out of range.
+	 @tiptext	Returns the ID corresponding to the record at a specified index
+	 @helpid	4468
+	*/
+	function getItemID( index:Number ):Object {
+		return( items[index].__ID__ );
+	}
+
+	/**
+	 Returns an array of all records of the RecordSet.
+
+	 @return	Array	an array of all records.
+	 @tiptext	Provides access to local items of the RecordSet
+	 @helpid	4469
+	*/
+	function get items():Array {
+		return( _items );
+	}
+
+	function initialize( info:Object ):Void {
+		// nothing to do here
+	}
+
+	//-------------------------------------------------------------
+	// public data Manipulation functions
+	//-------------------------------------------------------------
+
+	/**
+	 Creates a new RecordSet object by calling the filterFunction method once for
+	 each record in the RecordSet object and consolidating all the records, for which the
+	 filterFunction method returns true, into a new RecordSet object. The order
+	 of the records in the new RecordSet object is the same as their order in the
+	 original RecordSet object. The order in which the original RecordSet object is
+	 traversed during the filtering process is not defined.
+
+		If used on a RecordSet object that is not fully-populated, only the currently
+	 available records are filtered. The new RecordSet object does not inherit the
+	 original RecordSet object's list of views, nor any association with a server-side
+	 RecordSet object.
+
+	 @param		filterFunction	Function an ActionScript function that takes one or two
+	 parameters and returns true or false . The first parameter is a single
+	 record from the RecordSet object.The second, optional, parameter is a
+	 context value that the function uses to determine whether to include
+	 the record in the result. The function must return true if the record
+	 should be included in the result RecordSet object.
+
+	 @param		context		a context value supplied by the caller. This value is the second parameter to the filter function.
+	 @return	RecordSet	a new RecordSet object that contains a reference, not a copy, to all the records that were selected by the filterFunction function.
+	 @tiptext	Returns a filtered RecordSet based on the specified filter function
+	 @helpid	4470
+	*/
+	function filter(filterFunction:Function, context:String):RecordSet {
+		if(checkLocal())
+		  return null;
+
+		// create a new, empty RecordSet
+		var result:RecordSet = new RecordSet(mTitles);
+
+		// loop over all the records in the current RecordSet
+		// find the ones that the the filter function approves of,
+		// and add it to the result
+		var rcount:Number = length;
+		for(var i:Number = 0; i < rcount; i++) {
+			var item:Object = getItemAt(i);
+			if ((item != null) && (item != 1) && filterFunction(item, context))	{
+				result.addItem(item);
+			}
+		}
+
+		//trace("RecordSet.filter: " + NetServices.objectToString(result));
+		return( result );
+	}
+
+	/**
+	 Sorts all the records using a user-specified compare function. The sort method sorts
+	 all the records in place, without making a new copy. The order is determined by the
+	 user-supplied compareFunction function. The original order is not remembered.
+
+	 @param	compareFunc Function an ActionScript comparison function that determines the sorting order.
+	 Given the arguments A and B, the comparison function returns a value as follows:
+	 -1 if A appears before B in the sorted sequence.
+	 0 if A = B.
+	 1 if A appears after B in the sorted sequence.
+
+	 @param	optionFlags	Number one or more numbers or strings, separated by the | (bitwise OR) operator,
+	 that change the behavior of the sort from the default. The following values are acceptable for option:
+	 1 or Array.CASEINSENSITIVE
+	 2 or Array.DESCENDING
+	 4 or Array.UNIQUESORT
+	 8 or Array.RETURNINDEXEDARRAY
+	 16 or Array.NUMERIC
+
+	 @tiptext	Sorts items based on a specified compare function
+	 @helpid	4471
+	*/
+	function sortItems( compareFunc:Function, optionFlags:Number ):Void {
+		if( checkLocal())
+			return;
+
+		items.sort( compareFunc, optionFlags );
+		updateViews( "sort" );
+	}
+
+	/**
+	 Sorts all records in the RecordSet object without making a new copy. The sort key value for each
+	 record is the contents of the field identified by the field ID. The original order is not saved.
+
+	 @param		fieldNames	Array fieldNames on which sorting needs to be done.
+	 @param		optionFlags	Number one or more numbers or strings, separated by	the | (bitwise OR) operator,
+	 that change the behavior of the sort from the default. The following values are acceptable for option :
+	 1 or Array.CASEINSENSITIVE
+	 2 or Array.DESCENDING
+	 4 or Array.UNIQUE
+	 8 or Array.RETURNINDEXEDARRAY
+	 16 or Array.NUMERIC
+
+	 @tiptext	Sorts items based on fields specified
+	 @helpid	4472
+	*/
+
+	function sortItemsBy( fieldNames:Array, order :String, optionFlags:Number ):Void {
+		if( checkLocal())
+			return;
+
+		if (typeof(order)=="string")
+		{
+			items.sortOn(fieldNames);
+			if (order.toUpperCase()=="DESC")
+			{
+				items.reverse();
+			}
+		}
+		else
+		{
+			items.sortOn(fieldNames, optionFlags);
+		}
+		updateViews( "sort" );
+	}
+
+	/**
+	 Sorts all the records using a user-specified compare function. The sort method sorts
+	 all the records in place, without making a new copy. The order is determined
+	 by the user-supplied compareFunction function. The original order is not remembered.
+
+	 @param	compareFunc	Function	an ActionScript comparison function that determines	the sorting order. Given the arguments A and B, the comparison function returns a value as follows:
+	 -1 if A appears before B in the sorted sequence.
+	 0 if A = B.
+	 1 if A appears after B in the sorted sequence.
+
+	 @tiptext	Sorts items with the specified compare function
+	 @helpid	4473
+	*/
+	function sort(compareFunc:Function):Void {
+		if (checkLocal())
+		  return;
+
+		items.sort(compareFunc);
+		updateViews( "sort" );
+	}
+
+
+	//-------------------------------------------------------------
+	// public data delivery functions
+	//-------------------------------------------------------------
+
+	/**
+	 Determines whether a RecordSet object is empty or not.
+
+	 @return	Boolean		returns true if the RecordSet is empty otherwise false.
+	 @tiptext	Indicates if there are any items in a RecordSet
+	 @helpid	4474
+	*/
+	function isEmpty():Boolean {
+		return( items.length == 0 );
+	}
+
+	/**
+	 Determines whether a RecordSet object is local or associated with an application server
+	 and records remain to be retrieved from the application server. This method is functionally
+	 identical to the RecordSet.isFullyPopulated method.
+
+	 @return	Boolean returns true if the RecordSet object is local and false if records remain to be retrieved from the application server.
+	 @tiptext	Indicates if this RecordSet is server associated
+	 @helpid	4475
+	*/
+	function isLocal():Boolean {
+		return( mRecordSetID == null );
+	}
+
+	/**
+	 Determines whether a RecordSet object is fully populated, that is, has all its records. Local
+	 RecordSet objects are always fully populated. RecordSet objects provided by application servers
+	 are fully populated after all of their records have been downloaded from the application server.
+
+	 @return	Boolean		returns true if the RecordSet object is fully populated or false if the RecordSet object is not fully populated.
+	 @tiptext	Indicates if a server associated RecordSet has had all items downloaded
+	 @helpid	4476
+	*/
+	function isFullyPopulated():Boolean {
+		return( isLocal());
+	}
+
+
+	/**
+	 Returns the number of records available on the server.
+
+	 @return	Number length of the RecordSet at the server side.
+	 @tiptext	Total number of items at the server for server associated RecordSets
+	 @helpid	4477
+	*/
+	function getRemoteLength():Number {
+		if( isLocal())
+			return( mRecordsAvailable );
+		else
+			return( mTotalCount );
+	}
+
+	/**
+	 Returns the number of records that have been downloaded from the server. The count does not
+	 include records that have been requested but not yet arrived. For local RecordSet objects,
+	 this will always return the same value as the getLocalLength method.
+
+	 @return	Number	length of the RecordSet which either equal to getLocalLength or getRemoteLength.
+	 @tiptext	Total number of items downloaded from the server
+	 @helpid	4478
+	*/
+	function getNumberAvailable():Number {
+		if (isLocal())
+			return( getLength());
+		else
+			return( mRecordsAvailable );
+	}
+
+	/**
+	 Replaces a record in the RecordSet object at the specified index. The record's contents are replaced
+	 with the contents of the record parameter. The record's ID does not change. When you use the
+	 replaceItemAt method, avoid the following conditions:
+	 1. Index out of range.
+	 2. The record parameter is not an object.
+	 3. The record parameter has unknown or missing fields.
+	 4. The RecordSet object is associated with an application server and not fully populated yet.
+
+	 @param		index	Number the index number of the record.
+	 @param		item	Object the record which will replace the existing record at the specified index.
+	 @tiptext	Replaces an item at the specified index
+	 @helpid	4479
+	*/
+	function replaceItemAt( index:Number, item:Object ):Void {
+		if (index>=0 && index<=length) {
+			var tmpID:Object = getItemID(index);
+			items[index] = item;
+			items[index].__ID__ = tmpID;
+			updateViews( "updateItems", index, index );
+		}
+	}
+
+	/**
+	 Removes all records from the record set. Do not use the removeAll method, when the RecordSet
+	 object is associated with an application server and not fully populated yet.
+
+	 @return	Void
+	 @tiptext	Removes all the items from a RecordSet
+	 @helpid	4480
+	*/
+	function removeAll():Void {
+		clear();
+	}
+
+	/**
+	 Removes the record at the specified index in the RecordSet. The associated record ID is never used again in the RecordSet object.
+	 When you use the removeItemAt method, avoid the following conditions:
+	 1. Index out of range.
+	 2. The RecordSet object is associated with an application server and not fully populated yet.
+
+	 @param		index	Number the index number of the record.
+	 @return	Object	The removed record
+	 @tiptext	Removes an item from the specified index
+	 @helpid	4481
+	*/
+	function removeItemAt( index: Number ):Object {
+		var result:Object = _items[index];
+		_items.splice( index, 1 );
+		var rItems:Array = [_items[index]];
+		var rIDs:Array = [getItemID(index)];
+		dispatchEvent({type:"modelChanged", eventName:"removeItems", firstItem:index, lastItem:index, removedItems:rItems, removedIDs:rIDs});
+		return( result );
+	}
+
+	/**
+	  Removes the specified listener from the list of listeners for given event.
+
+	  @param	event String containing the name of the event
+	  @param	listener Object/Function that will listen to the spceified event
+	  @tiptext	Removes the specified listener for the given event
+	  @helpid	4503
+	*/
+	function removeEventListener( event:String, listener:Object ):Void {
+		// functionality provided by EventDispatcher mixin
+	}
+
+	function requestRange( range:DataRange ):Object {
+		var index:Number = range.getStart();
+		var lastIndex:Object = range.getEnd();
+		return( internalRequestRange( index, lastIndex ));
+	}
+
+	/**
+	 Changes the delivery mode of a record set associated with an application server.
+	 At any time, a RecordSet object associated with an application server is operating
+	 in a particular data-delivery mode. The new mode setting takes effect immediately,
+	 except that pending application server requests are allowed to complete. You can
+	 change mode settings and delivery mode parameters.
+
+	 @param		mode				String				Identifies the delivery mode. The options are ondemand (default), fetchall, and page.
+	 @param		pagesize			Number (Optional)	In page mode, what the page size is in fetchall mode, how many records to fetch in each server request. The default is 25.
+	 @param		numPrefetchPages	Number(Optional)	In page mode, the number of pages to prefetch. The default is 0, fetch only the required page.
+	 @tiptext	Sets the delivery mode for server associated RecordSets
+	 @helpid	4482
+	*/
+
+	function setDeliveryMode(mode:String, pagesize:Number, numPrefetchPages:Number):Void {
+		//trace("RecordSet.setDeliveryMode(" + mode + "," + pagesize + "," + numPrefetchPages + ")");
+		mDeliveryMode = mode.toLowerCase();
+		stopFetchAll();
+
+		//fix for 88084
+		if (pagesize == null || pagesize <=0)
+		{
+			// deduce the page size from our views...
+			// !!@ doc note: you must up at least one view (via setDataProvider) before doing setDeliveryMode
+			// !!@ doc note: if there are multiple views, we use the pagesize of the first view
+			// !!@ doc note: if the listbox gets resized, you must call setDeliveryMode again
+			//pagesize = this.views[0].getRowCount();
+			//if (pagesize == null)
+			pagesize = 25;
+		}
+
+		switch( mDeliveryMode ) {
+			case "ondemand":
+			break;
+
+			case "page":
+				if (numPrefetchPages == null)
+					numPrefetchPages = 0;
+
+				mPageSize = pagesize;
+				mNumPrefetchPages = numPrefetchPages;
+				// !!@ doc note: 0 is ok for numPrefetchPages, it means fetch only the current page.
+			break;
+
+			case "fetchall":
+				stopFetchAll();
+				startFetchAll(pagesize);
+			break;
+
+			default:
+				NetServices.trace("RecordSet", "warning", 107, "SetDeliveryMode: unknown mode string");
+			break;
+		}
+	}
+
+	/**
+	  Replaces one field of a record with a new value specified. When you use the editField method, avoid the following conditions:
+	  Index out of range
+	  The RecordSet object is associated with an application server and not fully populated yet
+	  Unknown field name. The fieldName parameter does not equal a valid column name
+
+	 @param		index		Number	The index number of the record.
+	 @param		fieldName	String	The field name to replace.
+	 @param		value		(any dataType)	The new value to insert into the field.
+	 @tiptext	Sets the value of the specified field for an item at a given index
+	 @helpid	4483
+	*/
+	function editField (index:Number, fieldName:String , value:String):Void
+	{
+		changeFieldValue(index,fieldName,value);
+	}
+
+
+	/**
+
+	 Returns the specified fieldName of a record at the specified index in the RecordSet.
+
+	 @param		index	Number	the index of the item
+	 @param		fieldName	String	the name of the field to edit
+	 @return	Object	an Object containing the field data from the record
+	 @tiptext	Returns the specified field data from an item at a specified index
+	 @helpid	4484
+
+	*/
+	function getEditingData (index:Number, fieldName:String):Object
+	{
+		return items[index][fieldName];
+	}
+
+	/**
+	 Replaces one field of a record with a new value. When you use the setField method, avoid the following conditions:
+	 Index out of range. The RecordSet object is associated with an application server and not fully populated yet.
+	 Unknown field name. The fieldName parameter does not equal a valid column name
+
+	 @param	Number	The index number of the record.
+	 @param	String	The field name to replace.
+	 @param	(any dataType)	The new value to insert into the field.
+	 @tiptext	Sets the value of the specified field for an item at a given index
+	 @helpid	4485
+	*/
+	function setField (index:Number, fieldName:String , value:String):Void
+	{
+		changeFieldValue(index,fieldName,value);
+	}
+
+	private function changeFieldValue(index : Number, fieldName : String , value:String):Void
+	{
+		if (checkLocal()) return;
+
+		if (index<0 || index>=getLength()) {
+			return;
+		}
+
+		items[index][fieldName] = value;
+		updateViews( "updateItems", index, index);
+	}
+
+	//returns true if Object has no attrubutes
+	private function isObjectEmpty(objToCheck:Object):Boolean
+	{
+		var emptyFlag:Boolean = true;
+		for(var i:Object in objToCheck)
+		{
+			emptyFlag = false;
+			return emptyFlag;
+		}
+		return emptyFlag;
+	}
+
+	//reads an array and returns an object
+	private function arrayToObject(anArray:Array):Object {
+		if (mTitles == null) {
+			NetServices.trace("RecordSet", "warning", 105, "getItem: titles are not available");
+			return( null );
+		}
+
+		var result:Object = new Object();
+		var alen:Number = anArray.length;
+		var title:String;
+		for (var i:Number = 0; i < alen; i++) {
+			title=mTitles[i];
+			if (title == null)
+				title = "column" + i + 1;
+			result[title] = anArray[i];
+		}
+		return( result );
+	}
+
+	private function checkLocal():Boolean{
+		if (isLocal())
+			return( false );
+		else {
+			NetServices.trace("RecordSet", "warning", 108, "Operation not allowed on partial recordset");
+			return( true );
+		}
+	}
+
+	private function getRecordSetService():NetServiceProxy {
+		if (mRecordSetService == null)
+		{
+			if (gateway_conn == null)
+			{
+				// _setParentService never got called. this will only happen if:
+				//  - RecordSet is not the top-level return value, or
+				//  - NetServiceProxyResponder is not in use (i.e. there is a developer-supplied response object
+				//    for the service call that returned this RecordSet
+
+				gateway_conn = mx.remoting.NetServices.createGatewayConnection();
+			}
+			else
+			{
+				// A parent netconnect has been supplied. If necessary,
+				// make a new netconnection, so we can have separate debug flags
+				if (_global.netDebugInstance != undefined) {
+					gateway_conn = gateway_conn.clone();
+				}
+			}
+
+			if (_global.netDebugInstance != undefined) {
+				gateway_conn.setupRecordSet();
+				gateway_conn.setDebugId("RecordSet " + mRecordSetID);
+			}
+
+			mRecordSetService = gateway_conn.getService(serviceName, this);
+			if (mRecordSetService == null) {
+				NetServices.trace("RecordSet", "warning", 101, "Failed to create RecordSet service");
+				mRecordSetService = null; // so we don't get a flood of error messages
+			}
+		}
+
+		return( mRecordSetService );
+	}
+
+	private function internalRequestRange( index:Number, lastIndex:Object ):Number {
+		//trace("RecordSet.internalRequestRecordRange(" + index + "," + lastIndex + ")");
+		var highestRequested:Number = -1;
+		// make sure indices are valid
+		if (index < 0)
+			index = 0;
+
+		if (lastIndex >= getRemoteLength())
+			lastIndex = getRemoteLength() - 1;
+
+		// find sequences of null entries to request
+		// we could also just make a bunch of individual requests, but this seems
+		// cleaner. the server should be able to handle either case efficiently.
+		var first:Number; // this is the index of the first null entry in a group
+		var last:Number;
+		while (index <= lastIndex) {
+			while ((index <= lastIndex) && (items[index] != null))
+				index++;
+
+			first = index;
+			while ((index <= lastIndex) && (items[index] == null)) {
+				mOutstandingRecordCount++;
+				items[index] = 1;
+				index++;
+			}
+			last = index - 1;
+
+			if (first <= last)
+			{
+				logger.logInfo( " Fetching records from index ["+first+"] to index ["+last+"]");
+				getRecordSetService().getRecords(mRecordSetID, first + 1, last - first + 1);
+				highestRequested = last;
+				updateViews("fetchRows", first, last);
+			}
+		}
+		return( highestRequested );
+	}
+
+	private function removeItems( index:Number, len:Number):Void {
+		var itemIDs:Array = new Array();
+		for (var i:Number=0; i<len; i++) {
+			itemIDs.push(getItemID(index+i));
+		}
+		var oldItems:Array = items.splice(index, len);
+		//updateViews( "removeItems", index, index+len, oldItems, itemIDs );
+		dispatchEvent({type:"modelChanged", eventName:"removeItems",
+					  		firstItem:index, lastItem:index+len-1,
+							removedItems:oldItems, removedIDs:itemIDs});
+	}
+
+	//-------------------------------------------------------------
+	// Responses from the RecordSet service
+	//-------------------------------------------------------------
+
+	// this function is where all our data comes in from the RecordSet service
+	private function getRecords_Result(info:Object):Void {
+		//trace("RecordSet.getRecords_Result(), start=" + info.Cursor +
+		//	", id=" + info.id + ", data=" + info.Page);
+
+		setData(info.Cursor - 1, info.Page);
+		mOutstandingRecordCount -= info.Page.length;
+		// !!@ assert (this.mOutstandingRecordCount) >= 0
+		updateViews("updateItems", info.Cursor - 1, info.Cursor - 1 + info.Page.length - 1);
+
+		if ((mRecordsAvailable == mTotalCount) && !mAllNotified) {
+			updateViews("allRows");
+			mRecordSetService.release();
+			mAllNotified = true;
+			mRecordSetID = null;
+			mRecordSetService = null;
+		}
+	}
+
+	private function release_Result():Void {
+		// ignore this
+	}
+
+	private function requestOneRecord(index:Number):Void
+	{
+		if (items[index] == null)
+		{
+			if(mDeliveryMode == "ondemand")
+				logger.logInfo(" INFO: Fetching Record ["+index+"]");
+
+			getRecordSetService().getRecords(mRecordSetID, index + 1, 1);
+			mOutstandingRecordCount++;
+			items[index] = 1;
+			updateViews("fetchRows", index, index);
+		}
+	}
+
+	private function requestRecord(index:Number):Void {
+		if (mDeliveryMode != "page")
+		{
+			// fetchall, ondemand or unknown
+			requestOneRecord(index);
+			// !!@ if in fetchall mode, should start fetching from here, and wrap around to 1 later on
+		}
+		else {
+			// we're in page mode
+			// !!@ there is probably a better algorithm, but messier
+			// the current algorithm works fine if records are always fetched in increasing index order
+			// but goes wierd if not.
+
+			// See if we need to prefetch the next N+1 pages, starting at index
+			// (its N+1 because we always prefetch *the current page* as well
+			// as any requested other pages)
+			var firstIndex:Number = int(index / mPageSize) * mPageSize;
+			var lastIndex:Number = firstIndex + (mPageSize * (mNumPrefetchPages + 1)) - 1;
+			internalRequestRange(firstIndex, lastIndex);
+		}
+	}
+
+	private function _setParentService(service:NetServiceProxy):Void {
+		gateway_conn = service.nc;
+	}
+
+	private function setData(start:Number, dataArray:Array):Void {
+		//trace("setData " + start + "," +dataArray.length);
+		var datalen:Number = dataArray.length;
+		var index:Number;
+		var rec:Object;
+		for (var i:Number = 0; i < datalen; i++) {
+			index = i + start;
+			rec = items[index];
+			if ((rec != null) && (rec != 1)) {
+				// why are we getting this data! we already have it
+				NetServices.trace("RecordSet", "warning", 106, "Already got record # " + index);
+			}
+			else
+				mRecordsAvailable += 1;
+
+			items[index] = arrayToObject(dataArray[i]);
+			items[index].__ID__ = uniqueID++;
+		}
+	}
+
+	private function startFetchAll(pagesize:Number):Void {
+		//trace("RecordSet.startFetchAll()");
+		if( mDataFetcher != null )
+			mDataFetcher.disable();
+		mDataFetcher = new mx.remoting.RsDataFetcher(this, pagesize);
+	}
+
+	private function stopFetchAll():Void {
+		//trace("RecordSet.stopFetchAll()");
+		mDataFetcher.disable();
+		mDataFetcher = null;
+	}
+
+	private function updateViews(event:String, first:Number, last:Number): Void {
+		dispatchEvent({type:"modelChanged", eventName: event, firstItem:first, lastItem:last});
+	}
+
+	// Ensure that RecordSets received via AMF messages get
+	private static function registerRecordSet():Boolean {
+		Object.registerClass( "RecordSet", mx.remoting.RecordSet );
+		return( true );
+	}
+
+	// server-associated RecordSet only
+	public var serverInfo:Object; // attached by the player
+	public var serverinfo:Object; // attached by the player
+	public var serviceName:String;
+
+	//-------------------------------------------------------------
+	// private definitions
+	//-------------------------------------------------------------
+
+	private static var init:Boolean = registerRecordSet();
+	private var dispatchEvent:Function; // mixed in by the EventDispatcher
+	// all RecordSets have these fields
+	private var mTitles:Array;
+	private var uniqueID:Number;
+	private var _items: Array;
+
+	// server-associated RecordSet only
+	private var mRecordSetID:Number; // - if non-null, then this is a server associated RecordSet
+	private var mRecordSetService:NetServiceProxy;
+	private var mTotalCount:Number;
+	private var mRecordsAvailable:Number;
+	private var mDeliveryMode:String;
+	private var gateway_conn:Connection;
+	private var mDataFetcher:RsDataFetcher;
+
+	// only if deliverymode = "page"
+	private var mPageSize:Number;
+	private var mNumPrefetchPages:Number;
+	private var mAllNotified:Boolean;
+	private var mOutstandingRecordCount:Number;
+	var logger:mx.services.Log;
+}
+
+
diff -Naur Original/mx/remoting/RecordSetIterator.as Final/mx/remoting/RecordSetIterator.as
--- Original/mx/remoting/RecordSetIterator.as	2004-06-02 04:59:10.000000000 +0800
+++ Final/mx/remoting/RecordSetIterator.as	2008-01-06 05:12:36.000000000 +0900
@@ -11,7 +11,7 @@
 class mx.remoting.RecordSetIterator implements Iterator
 {
 
-	#include "RemotingComponentVersion.as"
+//#include "RemotingComponentVersion.as"
 /**
 	Initialize the Iterator and maintain a link to it's RecordSet
 	
diff -Naur Original/mx/remoting/RemotingComponentVersion.as Final/mx/remoting/RemotingComponentVersion.as
--- Original/mx/remoting/RemotingComponentVersion.as	2004-06-09 11:51:28.000000000 +0800
+++ Final/mx/remoting/RemotingComponentVersion.as	2008-01-06 05:12:36.000000000 +0900
@@ -8,4 +8,6 @@
 /**
 RemotingComponentVersion is for internal use only.
 */
-	static var version:String = "1.2.0.124";
+interface mx.remoting.RemotingComponentVersion {
+	//public static var version:String = "1.2.0.124";
+}
diff -Naur Original/mx/remoting/RsDataRange.as Final/mx/remoting/RsDataRange.as
--- Original/mx/remoting/RsDataRange.as	2004-06-09 11:49:32.000000000 +0800
+++ Final/mx/remoting/RsDataRange.as	2008-01-05 20:09:20.000000000 +0900
@@ -11,11 +11,11 @@
   to provide the next range of records to fetch by the RecordSet.
 */
 class mx.remoting.RsDataRange extends Object implements mx.data.DataRange {
-	
+
 	/**
 	  Constructs and instance with the start and end range of records to
 	  fetch from the server.
-	  
+
 	  @param	s Number containing the first record in the range to fetch
 	  @param	e Number containing the last record in the range to fetch
 	*/
@@ -24,23 +24,23 @@
 		_start = s;
 		_end = e;
 	}
-	
-	function getStart() {
+
+	function getStart():Number {
 		return( _start );
 	}
-	
-	function getEnd() {
+
+	function getEnd():Number {
 		return( _end );
 	}
-	
-	function setEnd( e ):Void {
+
+	function setEnd( e:Number ):Void {
 		_end = e;
 	}
-	
-	function setStart( s ):Void {
+
+	function setStart( s:Number ):Void {
 		_start = s;
 	}
-	
+
 	private var _start:Number;
 	private var _end:Number;
-}
\ No newline at end of file
+}
diff -Naur Original/mx/remoting/RsDataRange.as~ Final/mx/remoting/RsDataRange.as~
--- Original/mx/remoting/RsDataRange.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/remoting/RsDataRange.as~	2008-01-05 20:09:05.000000000 +0900
@@ -0,0 +1,46 @@
+﻿//****************************************************************************
+//Copyright (C) 2004 Macromedia, Inc. All Rights Reserved.
+//The following is Sample Code and is subject to all restrictions on
+//such code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+/**
+  This class provides the RecordSet data fetcher with the methods needed to
+  support paging.  The RsDataFetcher will create an instance of this class
+  to provide the next range of records to fetch by the RecordSet.
+*/
+class mx.remoting.RsDataRange extends Object implements mx.data.DataRange {
+
+	/**
+	  Constructs and instance with the start and end range of records to
+	  fetch from the server.
+
+	  @param	s Number containing the first record in the range to fetch
+	  @param	e Number containing the last record in the range to fetch
+	*/
+	function RsDataRange( s:Number, e:Number ) {
+		super();
+		_start = s;
+		_end = e;
+	}
+
+	function getStart():Number {
+		return( _start );
+	}
+
+	function getEnd():Number {
+		return( _end );
+	}
+
+	function setEnd( e ):Void {
+		_end = e;
+	}
+
+	function setStart( s ):Void {
+		_start = s;
+	}
+
+	private var _start:Number;
+	private var _end:Number;
+}
diff -Naur Original/mx/remoting/Service.as Final/mx/remoting/Service.as
--- Original/mx/remoting/Service.as	2004-06-02 04:59:52.000000000 +0800
+++ Final/mx/remoting/Service.as	2008-01-05 18:41:20.000000000 +0900
@@ -13,7 +13,7 @@
 import mx.services.Log;
 
 /**
-	The Services object is a collection of methods that helps you create and use connections to services 
+	The Services object is a collection of methods that helps you create and use connections to services
 	using Flash Remoting. The Services object helps you create and use Connection objects.
 
 	@tiptext Proxy for a remote service
@@ -21,23 +21,23 @@
 */
 dynamic class mx.remoting.Service extends Object
 {
-	#include "RemotingComponentVersion.as"
-	
+//#include "RemotingComponentVersion.as"
+
 	/**
 	  The connection can be passed or a gatewayURI string. If the connection is not passed a
 	  connection will be created for the specified gatwayURI, if a connection with the same URI doesn't
 	  already exist. Using the gatewayURI allows for the sharing of the connection.
-	  
+
 	  @param	gatewayURI	String containing the gateway that should be created or used from the current pool.
 	  						if this parameter is blank "" and the conn parameter is null the Url for the service
-							will default to that specified using the gatewayUrl value of the flashvars parameter 
+							will default to that specified using the gatewayUrl value of the flashvars parameter
 							specified in the HTML page.
 	  @param	logger	Log to send debugging messages to
 	  @param	serviceName	String containing the name of the service to invoke the method on.
-							
+
 	  @param	conn	Connection this service should be associated with, if this value is null and the gatewayURI
-	  					parameter is empty the gateway will be established using the gatewayUrl value of the 
-						flashvars parameter specified in the HTML page 
+	  					parameter is empty the gateway will be established using the gatewayUrl value of the
+						flashvars parameter specified in the HTML page
 	  @param	resp	Responder that will handle all of the call backs for the method calls made
 	  @tiptext	Creates a new Service
 	  @helpid	4451
@@ -47,12 +47,12 @@
 		super();
 
 		log = logger;
-		
+
 		log.logInfo("Creating Service for " + serviceName, Log.VERBOSE);
 		// fix for bug#87385
 		if(( gatewayURI == "" ) && ( conn == null ))
 			gatewayURI = NetServices.gatewayUrl;
-			
+
 		gatewayURI = NetServices.getHttpUrl(gatewayURI);
 
 		if( conn == null )
@@ -74,9 +74,9 @@
 	}
 
 	/**
-	  Read only accessor for the associated connection. This returns any existing connections 
+	  Read only accessor for the associated connection. This returns any existing connections
 	  that have been previously created with the given uri
-	  
+
 	  @return	Connection associated with this service
 	  @tiptext	Returns associated connection
 	  @helpid	4452
@@ -88,8 +88,8 @@
 
        /*
 		This function gets called whenever somebody does "myService.methodName(parameters...)".
-		A function "opFunc", which knows how to call the correct server method is constructed 
-		and returned. 
+		A function "opFunc", which knows how to call the correct server method is constructed
+		and returned.
 
 		@param		methodName	String	String containing the method or property that was accessed in AS on this proxy.
        */
@@ -115,37 +115,37 @@
 	*/
 	function __makeOpFunc(name:String):Function
 	{
-		var op = new Operation(name, this);
+		var op:Object = new Operation(name, this);
 
 		//This method is accessed as serviceName.methodName(args) and automatically sends the request
-		var myFunc = function ()
+		var myFunc:Function = function ():String
 		{
 		    op.invoke(arguments);
 		    return op.send();
-		}
+		};
 
 		//This method is accessed using serviceName.methodName.send()
 		//Users must have set up arguments for binding in the RemoteObject method tags.
 		myFunc.send = function():PendingCall
 		{
 		    return op.createThenSend();
-		}
+		};
 
 		//This method is accessed using serviceName.methodName.setResponder(resp)
 		myFunc.setResponder = function(resp:Responder):Void
 		{
 		    op.responder = resp;
-		}
+		};
 
 		myFunc.getRequest = function():Object
 		{
 		    return op.request;
-		}
+		};
 
 		myFunc.setRequest = function(val:Object):Void
 		{
 		    op.request = val;
-		}
+		};
 
 		//Register getter/setters for request property
 		myFunc.addProperty("request", myFunc.getRequest, myFunc.setRequest);
@@ -156,7 +156,7 @@
 	}
 
         /**
-			Returns the the name of the service which can be a Java classname/JNDI 
+			Returns the the name of the service which can be a Java classname/JNDI
 			location or a ColdFusion component
 
 			@return		The service name, such as a Java classname or JNDI location.
@@ -185,4 +185,4 @@
 	private var __responder:Responder;
 	private var _allowRes:Boolean = false;
 	var log:Log;
-}
\ No newline at end of file
+}
diff -Naur Original/mx/remoting/Service.as~ Final/mx/remoting/Service.as~
--- Original/mx/remoting/Service.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/remoting/Service.as~	2008-01-05 18:41:10.000000000 +0900
@@ -0,0 +1,188 @@
+﻿//****************************************************************************
+//Copyright (C) 2004 Macromedia, Inc. All Rights Reserved.
+//The following is Sample Code and is subject to all restrictions on
+//such code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+import mx.rpc.Responder;
+import mx.remoting.Connection;
+import mx.remoting.NetServices;
+import mx.remoting.PendingCall;
+import mx.remoting.Operation;
+import mx.services.Log;
+
+/**
+	The Services object is a collection of methods that helps you create and use connections to services
+	using Flash Remoting. The Services object helps you create and use Connection objects.
+
+	@tiptext Proxy for a remote service
+	@helpid	4450
+*/
+dynamic class mx.remoting.Service extends Object
+{
+//#include "RemotingComponentVersion.as"
+
+	/**
+	  The connection can be passed or a gatewayURI string. If the connection is not passed a
+	  connection will be created for the specified gatwayURI, if a connection with the same URI doesn't
+	  already exist. Using the gatewayURI allows for the sharing of the connection.
+
+	  @param	gatewayURI	String containing the gateway that should be created or used from the current pool.
+	  						if this parameter is blank "" and the conn parameter is null the Url for the service
+							will default to that specified using the gatewayUrl value of the flashvars parameter
+							specified in the HTML page.
+	  @param	logger	Log to send debugging messages to
+	  @param	serviceName	String containing the name of the service to invoke the method on.
+
+	  @param	conn	Connection this service should be associated with, if this value is null and the gatewayURI
+	  					parameter is empty the gateway will be established using the gatewayUrl value of the
+						flashvars parameter specified in the HTML page
+	  @param	resp	Responder that will handle all of the call backs for the method calls made
+	  @tiptext	Creates a new Service
+	  @helpid	4451
+	*/
+	function Service( gatewayURI:String, logger:Log, serviceName:String, conn:Connection, resp:Responder )
+	{
+		super();
+
+		log = logger;
+
+		log.logInfo("Creating Service for " + serviceName, Log.VERBOSE);
+		// fix for bug#87385
+		if(( gatewayURI == "" ) && ( conn == null ))
+			gatewayURI = NetServices.gatewayUrl;
+
+		gatewayURI = NetServices.getHttpUrl(gatewayURI);
+
+		if( conn == null )
+		{
+			conn = NetServices.getConnection(gatewayURI);
+			if( conn == null )
+			{
+				log.logInfo("Creating gateway connection for " + gatewayURI, Log.VERBOSE);
+				conn = NetServices.createGatewayConnection(gatewayURI, logger);
+			}
+		}
+		__conn = conn;
+		conn.updateConfig();
+		_allowRes = true;
+		__serviceName = serviceName;
+		__responder = resp;
+
+		log.logInfo("Successfully created Service", Log.VERBOSE);
+	}
+
+	/**
+	  Read only accessor for the associated connection. This returns any existing connections
+	  that have been previously created with the given uri
+
+	  @return	Connection associated with this service
+	  @tiptext	Returns associated connection
+	  @helpid	4452
+	*/
+	function get connection():Connection
+	{
+		return( __conn );
+	}
+
+       /*
+		This function gets called whenever somebody does "myService.methodName(parameters...)".
+		A function "opFunc", which knows how to call the correct server method is constructed
+		and returned.
+
+		@param		methodName	String	String containing the method or property that was accessed in AS on this proxy.
+       */
+	function __resolve( methodName:String ):Function
+	{
+		if( _allowRes )
+		{
+                    //Register a function as a property on this Service so that __resolve is not called again.
+		    var opFunc:Function = __makeOpFunc(methodName);
+		    this[methodName] = opFunc;
+		    return opFunc;
+		}
+		else
+		{
+		    return null;
+		}
+	}
+
+	/*
+        Creates and returns a function "myFunc" to handle calls to a service function. The function
+		created is attached to a specific service.
+		@param		name	String	The name of the method for this Operation.
+	*/
+	function __makeOpFunc(name:String):Function
+	{
+		var op:object = new Operation(name, this);
+
+		//This method is accessed as serviceName.methodName(args) and automatically sends the request
+		var myFunc:Function = function ():String
+		{
+		    op.invoke(arguments);
+		    return op.send();
+		};
+
+		//This method is accessed using serviceName.methodName.send()
+		//Users must have set up arguments for binding in the RemoteObject method tags.
+		myFunc.send = function():PendingCall
+		{
+		    return op.createThenSend();
+		};
+
+		//This method is accessed using serviceName.methodName.setResponder(resp)
+		myFunc.setResponder = function(resp:Responder):Void
+		{
+		    op.responder = resp;
+		};
+
+		myFunc.getRequest = function():Object
+		{
+		    return op.request;
+		};
+
+		myFunc.setRequest = function(val:Object):Void
+		{
+		    op.request = val;
+		};
+
+		//Register getter/setters for request property
+		myFunc.addProperty("request", myFunc.getRequest, myFunc.setRequest);
+
+		myFunc.operation = op;
+
+		return myFunc;
+	}
+
+        /**
+			Returns the the name of the service which can be a Java classname/JNDI
+			location or a ColdFusion component
+
+			@return		The service name, such as a Java classname or JNDI location.
+			@tiptext	Returns the name of the Service
+			@helpid		4453
+        */
+	public function get name():String
+	{
+	    return __serviceName;
+	}
+
+	/**
+		Responder associated with this service.
+
+		@return		Responder Object The service-level Responder.
+		@tiptext	Returns the associated responder
+		@helpid		4454
+	*/
+	public function get responder():Responder
+	{
+	    return __responder;
+	}
+
+	private var __conn:Connection;
+	private var __serviceName:String;
+	private var __responder:Responder;
+	private var _allowRes:Boolean = false;
+	var log:Log;
+}
diff -Naur Original/mx/rpc/Fault.as Final/mx/rpc/Fault.as
--- Original/mx/rpc/Fault.as	2004-06-02 05:03:48.000000000 +0800
+++ Final/mx/rpc/Fault.as	2008-01-05 18:33:02.000000000 +0900
@@ -7,7 +7,7 @@
 
 /**
   Contains the error details from a fault that occurred during a method invocation
-  
+
   @tiptext	Contains the details of a fault that occurred during a method invocation
   @helpid	4495
 */
@@ -31,7 +31,7 @@
 
 	/**
 	  Provides access to the fault code provided by the remote service
-	
+
 	  @tiptext	Provides access to the fault code provided by the remote service
 	  @helpid	4496
 	*/
@@ -41,7 +41,7 @@
 
 	/**
 	  Provide access to the description of the fault by the remote service
-	  
+
 	  @tiptext 	Provide access to the description of the fault by the remote service
 	  @helpid	4497
 	*/
@@ -51,7 +51,7 @@
 
 	/**
 	  Provides access to the detail information provided by the remote service
-	  
+
 	  @tiptext	Provides access to the detail information provided by the remote service
 	  @helpid	4498
 	*/
@@ -61,7 +61,7 @@
 
 	/**
 	  Provides access to the description of the error provided by the remote service
-	  
+
 	  @tiptext	Provides access to the description of the error provided by the remote service
 	  @helpid	4499
 	*/
@@ -70,9 +70,9 @@
 	    {
 	        if (__faultstring.indexOf(":") > -1)
 	        {
-	            __description = __faultstring.substring(__faultstring.indexOf(":") + 1)
+	            __description = __faultstring.substring(__faultstring.indexOf(":") + 1);
                 //trim off any leading spaces
-                var st = 0;
+                var st:Number = 0;
                 while (__description.indexOf(' ', st) == st) ++st;
                 if (st > 0) __description = __description.substring(st);
 	        }
@@ -86,7 +86,7 @@
 
 	/**
 	  Provides access to the type information provided by the remote service.
-	  
+
 	  @tiptext	Provides access to the type information provided by the remote service
 	  @helpid	4500
 	*/
@@ -99,4 +99,4 @@
 	private var __faultcode:String;
 	private var __faultstring:String;
 	private var __type:String;
-}
\ No newline at end of file
+}
diff -Naur Original/mx/rpc/Fault.as~ Final/mx/rpc/Fault.as~
--- Original/mx/rpc/Fault.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/rpc/Fault.as~	2008-01-06 05:12:36.000000000 +0900
@@ -0,0 +1,102 @@
+﻿//****************************************************************************
+//Copyright (C) 2004 Macromedia, Inc. All Rights Reserved.
+//The following is Sample Code and is subject to all restrictions on
+//such code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+/**
+  Contains the error details from a fault that occurred during a method invocation
+  
+  @tiptext	Contains the details of a fault that occurred during a method invocation
+  @helpid	4495
+*/
+class mx.rpc.Fault extends Object {
+
+	/**
+	  Constructs an instance of the fault with the specified code, message, and details
+
+	  @param	code String containing the fault code
+	  @param	msg String containing the fault message
+	  @param	detail String containing any details associted with the fault
+	  @param	type String containing the name of the exception class that was thrown on the server
+	*/
+	function Fault( code:String, msg:String, detail:String, type:String ) {
+		super();
+		__faultcode = code;
+		__faultstring = msg;
+		__detail = detail;
+		__type = type;
+	}
+
+	/**
+	  Provides access to the fault code provided by the remote service
+	
+	  @tiptext	Provides access to the fault code provided by the remote service
+	  @helpid	4496
+	*/
+	function get faultcode():String {
+		return( __faultcode );
+	}
+
+	/**
+	  Provide access to the description of the fault by the remote service
+	  
+	  @tiptext 	Provide access to the description of the fault by the remote service
+	  @helpid	4497
+	*/
+	function get faultstring():String {
+		return( __faultstring );
+	}
+
+	/**
+	  Provides access to the detail information provided by the remote service
+	  
+	  @tiptext	Provides access to the detail information provided by the remote service
+	  @helpid	4498
+	*/
+	function get detail():String {
+		return( __detail );
+	}
+
+	/**
+	  Provides access to the description of the error provided by the remote service
+	  
+	  @tiptext	Provides access to the description of the error provided by the remote service
+	  @helpid	4499
+	*/
+	function get description():String {
+	    if (__description == null)
+	    {
+	        if (__faultstring.indexOf(":") > -1)
+	        {
+	            __description = __faultstring.substring(__faultstring.indexOf(":") + 1);
+                //trim off any leading spaces
+                var st = 0;
+                while (__description.indexOf(' ', st) == st) ++st;
+                if (st > 0) __description = __description.substring(st);
+	        }
+	        else
+	        {
+	            __description = __faultstring;
+	        }
+	    }
+	    return __description;
+	}
+
+	/**
+	  Provides access to the type information provided by the remote service.
+	  
+	  @tiptext	Provides access to the type information provided by the remote service
+	  @helpid	4500
+	*/
+	function get type():String {
+		return( __type );
+	}
+
+	private var __detail:String;
+	private var __description:String;
+	private var __faultcode:String;
+	private var __faultstring:String;
+	private var __type:String;
+}
\ No newline at end of file
diff -Naur Original/mx/screens/Form.as Final/mx/screens/Form.as
--- Original/mx/screens/Form.as	2003-08-28 06:56:34.000000000 +0800
+++ Final/mx/screens/Form.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -6,7 +6,7 @@
 //****************************************************************************
 
 import mx.screens.Screen;
-import mx.managers.SystemManager;
+//import mx.managers.SystemManager;
 
 [InspectableList("autoLoad","contentPath")]
 /**
@@ -233,7 +233,7 @@
 		if (_sendRevealDuringRedraw && visible == true)
 		{
 
-			dispatchEvent({type:"reveal", target:this})
+			dispatchEvent({type:"reveal", target:this});
 			_sendRevealDuringRedraw = false;
 		}
 	}
diff -Naur Original/mx/screens/Screen.as Final/mx/screens/Screen.as
--- Original/mx/screens/Screen.as	2003-08-28 12:03:14.000000000 +0800
+++ Final/mx/screens/Screen.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -7,9 +7,8 @@
 
 import mx.controls.Loader;
 import mx.events.UIEventDispatcher;
-import mx.core.ext.UIObjectExtensions;
-import mx.core.ext.UIComponentExtensions;
-import mx.events.LowLevelEvents;
+//import mx.core.ext.UIObjectExtensions;
+//import mx.core.ext.UIComponentExtensions;
 
 /**
 * @tiptext allTransitionsInDone event
@@ -314,7 +313,7 @@
 		// either a Presentation (slide) or Application (form).  We do
 		// the slide/form-specific fixups in the overriden childLoaded().
 
-		var prop:Object;
+		var prop:String;
 		var loadedMC: MovieClip = null;
 		var realParentScreen:Screen = mx.screens.Screen(obj._parent);
 
@@ -336,7 +335,7 @@
 				pt.y = obj.y;
 				this.globalToLocal(pt);
 				obj._x = pt.x;
-				obj._y = pt.y
+				obj._y = pt.y;
 			} else {
 				var pt:Object = new Object();
 				pt.x = x;
diff -Naur Original/mx/screens/Slide.as Final/mx/screens/Slide.as
--- Original/mx/screens/Slide.as	2003-08-20 05:42:14.000000000 +0800
+++ Final/mx/screens/Slide.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -66,7 +66,7 @@
 	private var _shown = false;
 
 	// prevents arrow keys doing slide navigation while focus is on a text field
-	private static var _disableArrowKeys:Boolean = false;
+	static var _disableArrowKeys:Boolean = false;
 
 	// allows arrow keys to enable slide navigation when focus is on a non-text field component (e.g. button)
 	private static var _focusFixup:Object = null;
@@ -78,7 +78,7 @@
 	private var _laterGotoSlide = null;
 
 	// are we handling a keyDown
-	private static var _inKeyDown:Boolean = false;
+	static var _inKeyDown:Boolean = false;
 
 	// for handling default clicks to set focus 
 	private static var _focusSeq:Number = 0;
@@ -642,17 +642,16 @@
 
 		if (_focusFixup == null) // initialize keyDown event listener and selection listener if not done already
 		{
-
-			_focusFixup = new Object()
+			_focusFixup = new Object();
 			_focusFixup.onSetFocus = function(o, n)
 			{
-				_focusSeq++;
+				this._focusSeq++;
 				if ((n != null) && (typeof(n) != "movieclip") && !n._isSlide) {
 					mx.screens.Slide._disableArrowKeys = true;
 				} else
 					mx.screens.Slide._disableArrowKeys = false;
 
-			}
+			};
 
 			Selection.addListener(_focusFixup);
 
@@ -665,9 +664,9 @@
 				if (Slide.currentFocusedSlide.useDefaultKeyDownHandler()) {
 					Slide.currentFocusedSlide.callDefaultKeyDownHandler(o);
 				}
-				_inKeyDown = false;
+				Slide._inKeyDown = false;
 
-			}
+			};
 
 			Key.addListener(_focusFixup);
 		}
@@ -695,7 +694,7 @@
 
 	// walks the tree to see if the combination of ancestor autoKeyNav flags
 	// means we should use default keyboard handling for this slide
-	private function useDefaultKeyDownHandler():Boolean
+	function useDefaultKeyDownHandler():Boolean
 	{
 		var sld:Slide = this;
 		while (sld.parentIsSlide && (sld.autoKeyNav == "inherit")) {
@@ -705,11 +704,11 @@
 
 		retVal = ((sld.autoKeyNav == "true") ||
 				  (sld.autoKeyNav == "inherit"));
-		return(retVal)
+		return(retVal);
 	}
 
 	// invoke default keydown handling, gotten from rootSlide
-	private function callDefaultKeyDownHandler(o:Object) {
+	function callDefaultKeyDownHandler(o:Object) {
 		var sld:Slide = this;
 		while (sld.parentIsSlide && (sld.defaultKeyDownHandler == null)) {
 			sld = sld.parentSlide;
@@ -997,7 +996,7 @@
 			if (mousedSlide && mousedSlide.allAncestorsVisible() && (Slide.currentFocusedSlide.rootSlide != mousedSlide.rootSlide)) {
 				_focusSeq++;
 				_clickFocusSeq = _focusSeq;
-				doLater(mousedSlide.rootSlide.currentSlide, "clickSetFocus")
+				doLater(mousedSlide.rootSlide.currentSlide, "clickSetFocus");
 			}
 			
 		} 
diff -Naur Original/mx/services/ArrayProxy.as Final/mx/services/ArrayProxy.as
--- Original/mx/services/ArrayProxy.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/ArrayProxy.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-    //////////////////////////////////////////////////////////////////
+﻿    //////////////////////////////////////////////////////////////////
     // ArrayProxy
     //
     // This class provides what looks like an Array to the outside,
diff -Naur Original/mx/services/DataType.as Final/mx/services/DataType.as
--- Original/mx/services/DataType.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/DataType.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-import mx.services.QName;
+﻿import mx.services.QName;
 import mx.services.SchemaVersion;
 
 class mx.services.DataType
diff -Naur Original/mx/services/ElementDecl.as Final/mx/services/ElementDecl.as
--- Original/mx/services/ElementDecl.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/ElementDecl.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-import mx.services.QName;
+﻿//import mx.services.QName;
 
 class mx.services.ElementDecl
 {
diff -Naur Original/mx/services/Log.as Final/mx/services/Log.as
--- Original/mx/services/Log.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/Log.as	2008-01-05 12:37:13.000000000 +0900
@@ -14,19 +14,19 @@
 // sneville@macromedia.com
 // ------------------------------------------------------------
 /**
-  @helpid 1745 
+  @helpid 1745
   @tiptext contains logging data
 */
 class mx.services.Log
 {
     var level:Number;
     var name:String;
-    
+
 	/**
 	  @helpid  1603
 	  @tiptext	Creates a new instance of a Log object
 	*/
-    function Log(logLevel, name)
+    function Log(logLevel:Number, name:String)
     {
         this.level = (logLevel == undefined)
             ? Log.BRIEF
@@ -43,7 +43,7 @@
     static var VERBOSE:Number = 1;
     static var DEBUG:Number = 2;
 
-    function logInfo(msg, level)
+    function logInfo(msg:String, level:Number)
     {
         if (level == undefined)
         {
@@ -63,25 +63,25 @@
         }
     }
 
-    function logDebug(msg)
+    function logDebug(msg:String)
     {
         this.logInfo(msg, Log.DEBUG);
     }
 
-    function getDateString()
+    function getDateString():String
     {
-        var d = new Date();
+        var d:Date = new Date();
         return (d.getMonth()+1) + "/" + d.getDate() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
     }
 
 	/**
       Default version of onLog just trace()s the message.  Override to do
       other stuff (write to db, network, file, etc)
-	  
+
 	  @helpid 	1724
 	  @tiptext	used to handle logger output
 	*/
-    function onLog(message)
+    function onLog(message:String)
     {
         trace(message);
     }
diff -Naur Original/mx/services/Log.as~ Final/mx/services/Log.as~
--- Original/mx/services/Log.as~	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/services/Log.as~	2008-01-05 12:36:56.000000000 +0900
@@ -0,0 +1,88 @@
+﻿// ------------------------------------------------------------
+// WEB SERVICE LOGGING UTILITY
+//
+// log object that can optionally be passed to WebService,
+// WebServiceProxy, WSDL, XMLSchema, and SOAP. These objects
+// use log.logInfo or log.logDebug functions to report
+// info to the log object, which then may call the onLog
+// method that is presumed to be implemented by the Log creator
+// (the app using the log).
+//
+// The WebServiceProxy object creates logs and chains them
+// together, if a log was passed into the WebService constructor.
+// ------------------------------------------------------------
+// sneville@macromedia.com
+// ------------------------------------------------------------
+/**
+  @helpid 1745
+  @tiptext contains logging data
+*/
+class mx.services.Log
+{
+    var level:Number;
+    var name:String;
+
+	/**
+	  @helpid  1603
+	  @tiptext	Creates a new instance of a Log object
+	*/
+    function Log(logLevel:Number, name:String)
+    {
+        this.level = (logLevel == undefined)
+            ? Log.BRIEF
+            : logLevel;
+
+        this.name = (name == undefined)
+            ? ""
+            : name;
+    }
+
+    // Level constants
+    static var NONE:Number = -1;
+    static var BRIEF:Number = 0;
+    static var VERBOSE:Number = 1;
+    static var DEBUG:Number = 2;
+
+    function logInfo(msg:String, level:Number)
+    {
+        if (level == undefined)
+        {
+            level = Log.BRIEF;
+        }
+
+        if (level <= this.level)
+        {
+            if (level == Log.DEBUG)
+            {
+                this.onLog(this.getDateString() + " [DEBUG] " + this.name + ": " + msg);
+            }
+            else
+            {
+                this.onLog(this.getDateString() + " [INFO] " + this.name + ": " + msg);
+            }
+        }
+    }
+
+    function logDebug(msg:String)
+    {
+        this.logInfo(msg, Log.DEBUG);
+    }
+
+    function getDateString():String
+    {
+        var d:Number = new Date();
+        return (d.getMonth()+1) + "/" + d.getDate() + " " + d.getHours() + ":" + d.getMinutes() + ":" + d.getSeconds();
+    }
+
+	/**
+      Default version of onLog just trace()s the message.  Override to do
+      other stuff (write to db, network, file, etc)
+
+	  @helpid 	1724
+	  @tiptext	used to handle logger output
+	*/
+    function onLog(message:String)
+    {
+        trace(message);
+    }
+}
diff -Naur Original/mx/services/Namespace.as Final/mx/services/Namespace.as
--- Original/mx/services/Namespace.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/Namespace.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-// ------------------------------------------------------------
+﻿// ------------------------------------------------------------
 // BASIC NAMESPACE SUPPORT FOR ACTIONSCRIPT XML OBJECTS
 // http://www.w3.org/TR/REC-xml-names/
 // ------------------------------------------------------------
@@ -6,8 +6,8 @@
 // gdaniels@macromedia.com
 // ------------------------------------------------------------
 
-import mx.services.QName;
 import mx.services.PrefixedQName;
+import mx.services.QName;
 
 // ------------------------------------------------------------
 // Update XMLNode prototype with namespace properties
@@ -47,7 +47,7 @@
                     this.prefixedQName = new PrefixedQName(myPrefix, myQN);
                     return myQN;
                 }
-            }
+            };
         }
 
         if (o.setChildValue == undefined) {
@@ -62,10 +62,10 @@
                 var childNode = this.getElementsByLocalName(name)[0];
                 if (childNode != undefined) {
                     childNode.firstChild.removeNode();
-                    var node = _doc.createTextNode(value);
+                    var node = this._doc.createTextNode(value);
                     childNode.appendChild(node);
                 }
-            }
+            };
         }
 
         if (o.setValue == undefined) {
@@ -73,16 +73,16 @@
             {
                 trace("setting value to " + value);
                 this.firstChild.removeNode();
-                var node = _doc.createTextNode(value);
+                var node = this._doc.createTextNode(value);
                 this.appendChild(node);
-            }
+            };
         }
     
         if (o.getQualifiedName == undefined) {
             o.getQualifiedName = function()
             {
                 return this.nodeName;
-            }
+            };
         }
     
         if (o.getPrefix == undefined) {
@@ -103,7 +103,7 @@
                     }
                     return myPrefix;
                 }
-            }
+            };
         }
     
         if (o.getLocalName == undefined) {
@@ -124,14 +124,14 @@
                     }
                     return name;
                 }
-            }
+            };
         }
     
         if (o.getNamespaceURI == undefined) {
             o.getNamespaceURI = function()
             {
                 return (this.getQName()).namespaceURI;
-            }
+            };
         }
     
         if (o.loadNSMappings == undefined) {
@@ -173,7 +173,7 @@
                         }
                     }
                 }
-            }
+            };
         }
     
         if (o.getPrefixForNamespace == undefined) {
@@ -206,7 +206,7 @@
                     pfx = "";
     
                 return pfx;
-            }
+            };
         }
     
         if (o.getNamespaceForPrefix == undefined) {
@@ -225,7 +225,7 @@
                 }
     
                 return ns;
-            }
+            };
         }
     
         if (o.getElementsByQName == undefined) {
@@ -250,7 +250,7 @@
                 }
     
                 return elements;
-            }
+            };
         }
     
         if (o.getElementsByLocalName == undefined) {
@@ -274,7 +274,7 @@
                 }
     
                 return elements;
-            }
+            };
         }
     
         if (o.getElementsByReferencedName == undefined) {
@@ -316,7 +316,7 @@
                     }
                 }
                 return elements;
-            }
+            };
         }
     
         if (o.getAttributeByQName == undefined) {
@@ -339,7 +339,7 @@
                         return this.attributes[attrName];
                     }
                 }
-            }
+            };
         }
     
         if (o.getQNameFromString == undefined) {
@@ -355,7 +355,7 @@
                     prefixedName = prefixedName.substring(i+1);
                 }
                 return new QName(prefixedName, this.getNamespaceForPrefix(prefix));
-            }
+            };
         }
     
         if (o.registerNamespace == undefined) {
@@ -374,7 +374,7 @@
                 {
                     this.mappings[prefix] = namespaceURI;
                 }
-            }
+            };
         }
     
         if (o.unregisterNamespace == undefined) {
@@ -388,32 +388,32 @@
                     }
                     this.mappings[prefix] = undefined;
                 }
-            }
+            };
         }
     
         // ------------------------------------------------------------
         // Update XML DOM prototype with namespace support
         // ------------------------------------------------------------
 
-        var o = XML.prototype;
+        o = XML.prototype;
 
         o.nscount = 0;
 
         o.getElementsByQName = function(qname)
         {
             return this.firstChild.getElementsByQName(qname);
-        }
+        };
 
         o.getElementsByReferencedName = function(tname, qname)
         {
             var tnsIndex = tname.indexOf(":");
             var n = (tnsIndex != -1) ? tname.substring(tnsIndex+1) : tname;
             return this.firstChild.getElementsByReferencedName(n, qname);
-        }
+        };
 
         o.getElementsByLocalName = function(lname)
         {
             return this.firstChild.getElementsByLocalName(lname);
-        }
+        };
     }
 }
diff -Naur Original/mx/services/PendingCall.as Final/mx/services/PendingCall.as
--- Original/mx/services/PendingCall.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/PendingCall.as	2008-01-06 05:12:36.000000000 +0900
@@ -5,17 +5,16 @@
 // a request and a response envelope and a pointer back to the associated
 // SOAPCall (see above).
 // ------------------------------------
-import mx.services.SOAPConstants;
+import mx.services.ArrayProxy;
+import mx.services.DataType;
 import mx.services.Log;
+import mx.services.PrefixedQName;
 import mx.services.QName;
+import mx.services.RowSetProxy;
 import mx.services.SOAPCall;
+import mx.services.SOAPConstants;
 import mx.services.SOAPFault;
 import mx.services.SOAPHeader;
-import mx.services.DataType;
-import mx.services.SchemaVersion;
-import mx.services.ArrayProxy;
-import mx.services.RowSetProxy;
-import mx.services.PrefixedQName;
 
 /**
   @helpid	1746
@@ -89,7 +88,7 @@
             this.timerID = undefined;
             var fault = new SOAPFault("Timeout", "Timeout while calling method " + this.myCall.operationName + "!");
             this.onFault(fault);
-        }
+        };
 
         this.timerID = setInterval(this, "timeoutFunc", timeoutMS);
     }
diff -Naur Original/mx/services/PrefixedQName.as Final/mx/services/PrefixedQName.as
--- Original/mx/services/PrefixedQName.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/PrefixedQName.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-class mx.services.PrefixedQName
+﻿class mx.services.PrefixedQName
 {
     var prefix;
     var qname;
diff -Naur Original/mx/services/QName.as Final/mx/services/QName.as
--- Original/mx/services/QName.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/QName.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-// ------------------------------------------------------------
+﻿// ------------------------------------------------------------
 // QName and Prefixed QName Definitions
 // What's in a Name? A rose by any other name...
 // ------------------------------------------------------------
@@ -15,6 +15,6 @@
 
     public function equals(qname)
     {
-        return ((this.namespaceURI == qname.namespaceURI) && (this.localPart == qname.localPart))
+        return ((this.namespaceURI == qname.namespaceURI) && (this.localPart == qname.localPart));
     }
 }
diff -Naur Original/mx/services/RowSetProxy.as Final/mx/services/RowSetProxy.as
--- Original/mx/services/RowSetProxy.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/RowSetProxy.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//////////////////////////////////////////////////////////////////
+﻿//////////////////////////////////////////////////////////////////
 // RowSetProxy
 //
 // This class provides what looks like an Array (i.e. a DataProvider)
diff -Naur Original/mx/services/Schema.as Final/mx/services/Schema.as
--- Original/mx/services/Schema.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/Schema.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-// ------------------------------------------------------------
+﻿// ------------------------------------------------------------
 // XML SCHEMA PARSER
 // ------------------------------------------------------------
 // Reads a schema document, and converts it to a set of
@@ -31,12 +31,12 @@
 
 ////////////////////////////////////////////////////////////////////////////
 
-import mx.services.SchemaVersion;
-import mx.services.SchemaContext;
 import mx.services.DataType;
-import mx.services.QName;
 import mx.services.ElementDecl;
-import mx.services.SOAPFault;
+import mx.services.QName;
+import mx.services.SchemaContext;
+import mx.services.SchemaVersion;
+//import mx.services.SOAPFault;
 
 // -------------
 // SCHEMA OBJECT
@@ -323,7 +323,7 @@
             if ((numProps == 1) && (elDecl.maxOccurs == "unbounded"))
             {
                 // .NET-style ArrayOfSomething
-                dtype.name = "array"
+                dtype.name = "array";
                 dtype.typeType = DataType.ARRAY_TYPE;
                 dtype.arrayType = propDataType.schemaType;
                 dtype.itemElement = new QName(elDecl.name, elDecl.namespace);
diff -Naur Original/mx/services/SchemaContext.as Final/mx/services/SchemaContext.as
--- Original/mx/services/SchemaContext.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/SchemaContext.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,16 +1,16 @@
-// --------------
+﻿// --------------
 // SCHEMA CONTEXT
 // --------------
 // A SchemaContext is a container for Schemas, indexed by targetNamespace.
 // You can load up a SchemaContext with schemas from, for instance, a WSDL
 // document, and then use it to reference types and elements by QName.
+import mx.services.DataType;
 import mx.services.Log;
-import mx.services.SchemaVersion;
-import mx.services.SOAPFault;
+import mx.services.QName;
 import mx.services.Schema;
+import mx.services.SchemaVersion;
 import mx.services.SOAPConstants;
-import mx.services.QName;
-import mx.services.DataType;
+import mx.services.SOAPFault;
 
 class mx.services.SchemaContext
 {
diff -Naur Original/mx/services/SchemaVersion.as Final/mx/services/SchemaVersion.as
--- Original/mx/services/SchemaVersion.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/SchemaVersion.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-// ------------------------------------------------------------
+﻿// ------------------------------------------------------------
 // XML SCHEMA CONSTANTS
 // ------------------------------------------------------------
 // Constants for Namespace URIs and the like used by the 
diff -Naur Original/mx/services/ServiceManager.as Final/mx/services/ServiceManager.as
--- Original/mx/services/ServiceManager.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/ServiceManager.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,3 +1,5 @@
+﻿import mx.services.Log;
+import mx.services.WebService;
 // ------------------------------------------------------------
 // SERVICE MANAGER
 // ------------------------------------------------------------
@@ -8,190 +10,198 @@
 // sneville@macromedia.com
 // ------------------------------------------------------------
 
-ServiceManager = function(wsilURI)
+class mx.services.ServiceManager 
 {
-    this.loadedServices = new Object();
+	var loadedServices:Object;
+	var logCollection:Object;
+	var wsilDoc;
+	var logLevel:Number;
+	
+	private static var newline: String = "\n";
+	
+	public function ServiceManager(wsilURI) 
+	{
+	    this.loadedServices = new Object();
+	
+	    this.logCollection = new Object(); 
+	    this.logCollection.data = new Object();
+	    //SharedObject.getLocal("serviceLogs");
+	    if (this.logCollection.data.serviceLogs == undefined){
+	        this.logCollection.data.serviceLogs = new Object();
+	    }
+	
+	    //if wsilURI is defined, load it and add all discovered WSDL URIs
+	    if (wsilURI != undefined) 
+	    {
+	        this.loadWSIL(wsilURI);
+	    }
+	}
+
+	function setLogLevel(logLevel)
+	{
+	    this.logLevel = logLevel;
+	}
+
+	function loadWSIL(url)
+	{
+	    // doesn't actually load services, but makes them available via list operations
+	    wsilDoc = new XML();
+	    wsilDoc.ignoreWhite = true;
+	    wsilDoc.load(url);
+	    wsilDoc.manager = this;
+	    wsilDoc.onLoad = function(success)
+	    {
+	        if (success)
+	        {
+	            var knownServices = new Array();
+	            var inspectionNode = this.firstChild;
+	            var serviceNodes = inspectionNode.childNodes;
+	            var numServices = serviceNodes.length;
+	            for (var i=0; i<numServices; i++)
+	            {
+	                var websvc = new Object();
+	                var serviceNode = serviceNodes[i];
+	                var serviceDetails = serviceNode.childNodes;
+	                var numDetails = serviceDetails.length;
+	                for (var n=0; n<numDetails; n++)
+	                {
+	                    var nd = serviceDetails[n];
+	                    if (nd.nodeName == "abstract")
+	                    {
+	                        websvc.abstract = nd.childNodes[0].toString();
+	                    }
+	                    else if (nd.nodeName == "description")
+	                    {
+	                        if (nd.attributes.location != undefined)
+	                        {
+	                            websvc.location = nd.attributes.location;
+	                        }
+	                    }
+	                }
+	                knownServices.push(websvc);
+	            }
+	            this.manager.onLoadWSIL(knownServices);
+	        }
+	    };
+	}
+	
+	function getService(wsdlURI)
+	{
+	    var s = undefined;
+	
+	    // if already loaded, get it
+	    // if not already loaded, create it
+	    if (this.loadedServices[wsdlURI] != undefined)
+	    {
+	        s = this.loadedServices[wsdlURI];
+	    }
+	    else
+	    {
+	        var newlog = new Log(this.logLevel, "Service Stub");
+	        newlog.mgr = this;
+	        newlog.wsdlURI = wsdlURI;
+	
+	        newlog.onLog = function(txt)
+	        {
+	            this.mgr.logLocal(txt, this.wsdlURI);
+	            this.mgr.log(txt);
+	        };
+	
+	        this.logCollection.data.serviceLogs[wsdlURI] = "Web Service Log";
+	
+	        s = new WebService(wsdlURI, newlog);
+	
+	        this.loadedServices[wsdlURI] = s;
+	    }
+	
+	    return s;
+	}
+	
+	function logLocal(txt, wsdlURI) 
+	{
+	    var persistentLog = this.logCollection.data.serviceLogs[wsdlURI];
+	    persistentLog += txt + newline;
+	    this.logCollection.data.serviceLogs[wsdlURI] = persistentLog;
+	    this.logCollection.flush();
+	}
+	
+	function getServiceLogMessages(wsdlURI)
+	{
+	    var persistentLog = this.logCollection.data.serviceLogs[wsdlURI];
+	    return persistentLog;
+	}
+	
+	function removeService(wsdlURI) 
+	{
+	    this.loadedServices[wsdlURI] = undefined;
+	}
+	
+	function getServices()
+	{
+	    var serviceArray = new Array();
+	    for (var wsdlURI in this.loadedServices)
+	    {
+	        serviceArray.push(this.loadedServices[wsdlURI]);
+	    }
+	    return serviceArray;
+	}
+	
+	function getServicePorts(serviceName)
+	{
+	    var portArray = new Array();
+	    var s = this.getServices();
+	    for (var i=0; i<s.length; i++)
+	    {
+	        if (s[i] == serviceName)
+	        {
+	            var websvc = this.loadedServices[s[i]];
+	            var availablePorts = websvc.stub.servicePortMappings[serviceName];
+	            for (var portName in availablePorts)
+	            {
+	                portArray.push(portName);
+	            }
+	            break;
+	        }
+	    }
+	    return portArray;
+	}
+	
+	function getServiceOperations(serviceName) 
+	{
+	    var opArray = new Array();
+	    for (var wsdlURI in this.loadedServices)
+	    {
+	        var websvc = this.loadedServices[wsdlURI];
+	        if (websvc._name == serviceName)
+	        {
+	            var currPort = websvc.stub.activePort;
+	            for (var opName in currPort)
+	            {
+	                opArray.push(opName);
+	            }
+	            break;
+	        }
+	    }
+	    return opArray;
+	}
+	
+	function getServiceSOAPCalls(serviceName) 
+	{
+	    var callArray = new Array();
+	    for (var wsdlURI in this.loadedServices)
+	    {
+	        var websvc = this.loadedServices[wsdlURI];
+	        if (websvc._name == serviceName)
+	        {
+	            var currPort = websvc.stub.activePort;
+	            for (var opName in currPort)
+	            {
+	                callArray.push(currPort[opName]);
+	            }
+	            break;
+	        }
+	    }
+	    return callArray;
+	}
 
-    this.logCollection = new Object(); this.logCollection.data = new Object();
-    //SharedObject.getLocal("serviceLogs");
-    if (this.logCollection.data.serviceLogs == undefined)
-    {
-        this.logCollection.data.serviceLogs = new Object();
-    }
-
-    //if wsilURI is defined, load it and add all discovered WSDL URIs
-    if (wsilURI != undefined)
-    {
-        this.loadWSIL(wsilURI);
-    }
-}
-
-var o = ServiceManager.prototype;
-
-o.setLogLevel = function(logLevel)
-{
-    this.logLevel = logLevel;
-}
-
-o.loadWSIL = function(url)
-{
-    // doesn't actually load services, but makes them available via list operations
-    wsilDoc = new XML();
-    wsilDoc.ignoreWhite = true;
-    wsilDoc.load(url);
-    wsilDoc.manager = this;
-    wsilDoc.onLoad = function(success)
-    {
-        if (success)
-        {
-            var knownServices = new Array();
-            var inspectionNode = this.firstChild;
-            var serviceNodes = inspectionNode.childNodes;
-            var numServices = serviceNodes.length;
-            for (var i=0; i<numServices; i++)
-            {
-                var websvc = new Object();
-                var serviceNode = serviceNodes[i];
-                var serviceDetails = serviceNode.childNodes;
-                var numDetails = serviceDetails.length;
-                for (var n=0; n<numDetails; n++)
-                {
-                    var nd = serviceDetails[n];
-                    if (nd.nodeName == "abstract")
-                    {
-                        websvc.abstract = nd.childNodes[0].toString();
-                    }
-                    else if (nd.nodeName == "description")
-                    {
-                        if (nd.attributes.location != undefined)
-                        {
-                            websvc.location = nd.attributes.location;
-                        }
-                    }
-                }
-                knownServices.push(websvc);
-            }
-            this.manager.onLoadWSIL(knownServices);
-        }
-    }
-}
-
-o.getService = function(wsdlURI)
-{
-    var s = undefined;
-
-    // if already loaded, get it
-    // if not already loaded, create it
-    if (this.loadedServices[wsdlURI] != undefined)
-    {
-        s = this.loadedServices[wsdlURI];
-    }
-
-    else
-    {
-        var newlog = new Log(this.logLevel, "Service Stub");
-        newlog.mgr = this;
-        newlog.wsdlURI = wsdlURI;
-
-        newlog.onLog = function(txt)
-        {
-            this.mgr.logLocal(txt, this.wsdlURI);
-            this.mgr.log(txt);
-        }
-
-        this.logCollection.data.serviceLogs[wsdlURI] = "Web Service Log";
-
-        s = new WebService(wsdlURI, newlog);
-
-        this.loadedServices[wsdlURI] = s;
-    }
-
-    return s;
-}
-
-o.logLocal = function(txt, wsdlURI)
-{
-    var persistentLog = this.logCollection.data.serviceLogs[wsdlURI];
-    persistentLog += txt + newline;
-    this.logCollection.data.serviceLogs[wsdlURI] = persistentLog;
-    this.logCollection.flush();
-}
-
-o.getServiceLogMessages = function(wsdlURI)
-{
-    var persistentLog = this.logCollection.data.serviceLogs[wsdlURI];
-    return persistentLog;
-}
-
-o.removeService = function(wsdlURI)
-{
-    this.loadedServices[wsdlURI] = undefined;
-}
-
-o.getServices = function()
-{
-    var serviceArray = new Array();
-    for (var wsdlURI in this.loadedServices)
-    {
-        serviceArray.push(this.loadedServices[wsdlURI]);
-    }
-    return serviceArray;
-}
-
-o.getServicePorts = function(serviceName)
-{
-    var portArray = new Array();
-    var s = this.getServices();
-    for (var i=0; i<s.length; i++)
-    {
-        if (s[i] == serviceName)
-        {
-            var websvc = this.loadedServices[s[i]];
-            var availablePorts = websvc.stub.servicePortMappings[serviceName];
-            for (var portName in availablePorts)
-            {
-                portArray.push(portName);
-            }
-            break;
-        }
-    }
-    return portArray;
-}
-
-o.getServiceOperations = function(serviceName)
-{
-    var opArray = new Array();
-    for (var wsdlURI in this.loadedServices)
-    {
-        var websvc = this.loadedServices[wsdlURI];
-        if (websvc._name == serviceName)
-        {
-            var currPort = websvc.stub.activePort;
-            for (var opName in currPort)
-            {
-                opArray.push(opName);
-            }
-            break;
-        }
-    }
-    return opArray;
-}
-
-o.getServiceSOAPCalls = function(serviceName)
-{
-    var callArray = new Array();
-    for (var wsdlURI in this.loadedServices)
-    {
-        var websvc = this.loadedServices[wsdlURI];
-        if (websvc._name == serviceName)
-        {
-            var currPort = websvc.stub.activePort;
-            for (var opName in currPort)
-            {
-                callArray.push(currPort[opName]);
-            }
-            break;
-        }
-    }
-    return callArray;
-}
+}
\ No newline at end of file
diff -Naur Original/mx/services/SOAPCall.as Final/mx/services/SOAPCall.as
--- Original/mx/services/SOAPCall.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/SOAPCall.as	2008-01-06 05:12:36.000000000 +0900
@@ -20,9 +20,9 @@
 // ---------
 
 import mx.services.Log;
+import mx.services.PendingCall;
 import mx.services.SchemaVersion;
 import mx.services.SOAPConstants;
-import mx.services.PendingCall;
 import mx.services.SOAPFault;
 
 /**
@@ -302,7 +302,7 @@
             this.timerID = undefined;
             this.__handleFault(this.fault);
             this.onFault(this.fault);
-        }
+        };
 
         callback["timerID"] = setInterval(function() { callback.handleDelayedFault(); }, 50);  // 5 ms
     }
diff -Naur Original/mx/services/SOAPConstants.as Final/mx/services/SOAPConstants.as
--- Original/mx/services/SOAPConstants.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/SOAPConstants.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-// ------------------------------------------------------------
+﻿// ------------------------------------------------------------
 // SOAP Constants for SOAP 1.1 and SOAP 1.2
 // ------------------------------------------------------------
 // Constants for Namespace URIs and the like used by the 
@@ -13,6 +13,7 @@
     static var soap11Constants;
     static var soap12Constants;
 
+
     static function getConstants(versionNumber)
     {
         // ECMA uses "0" to represent SOAP v1.1 -- support both 0 and 1.1
@@ -34,6 +35,8 @@
         }
     }
 
+    private static var newline: String = "\n";
+    
     public static var DEFAULT_VERSION = 0;
     public static var XML_DECLARATION = "<?xml version=\"1.0\" encoding=\"utf-8\"?>" + newline;
 
diff -Naur Original/mx/services/SOAPFault.as Final/mx/services/SOAPFault.as
--- Original/mx/services/SOAPFault.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/SOAPFault.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-// ----------
+﻿// ----------
 // SOAP Fault
 // ----------
 class mx.services.SOAPFault
diff -Naur Original/mx/services/SOAPHeader.as Final/mx/services/SOAPHeader.as
--- Original/mx/services/SOAPHeader.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/SOAPHeader.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-// -----------
+﻿// -----------
 // SOAP Header
 // -----------
 class mx.services.SOAPHeader
diff -Naur Original/mx/services/SOAPParameter.as Final/mx/services/SOAPParameter.as
--- Original/mx/services/SOAPParameter.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/SOAPParameter.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-// --------------
+﻿// --------------
 // SOAP Parameter
 // --------------
 import mx.services.SOAPConstants;
diff -Naur Original/mx/services/WebService.as Final/mx/services/WebService.as
--- Original/mx/services/WebService.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/WebService.as	2008-01-06 05:12:36.000000000 +0900
@@ -12,9 +12,9 @@
 // -----------------------------------------------------------------
 
 import mx.services.Log;
-import mx.services.WebServiceProxy;
-import mx.services.SOAPCall;
 import mx.services.Namespace;
+import mx.services.SOAPCall;
+import mx.services.WebServiceProxy;
 
 /**
   @helpid 1742 
@@ -63,8 +63,8 @@
             return function()
             {
                 return this.stub.invokeOperation(methodName, arguments);
-            }
-        }
+            };
+        };
     }
 
 	/**
diff -Naur Original/mx/services/WebServiceProxy.as Final/mx/services/WebServiceProxy.as
--- Original/mx/services/WebServiceProxy.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/WebServiceProxy.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,13 +1,13 @@
-// -----------------------------------------------------------------
+﻿// -----------------------------------------------------------------
 // WEB SERVICE PROXY (ACTIONSCRIPT SERVICE STUB)
 // -----------------------------------------------------------------
-import mx.services.WebService;
 import mx.services.Log;
-import mx.services.WSDL;
-import mx.services.SOAPFault;
-import mx.services.SOAPCall;
 import mx.services.PendingCall;
+import mx.services.SOAPCall;
 import mx.services.SOAPConstants;
+import mx.services.SOAPFault;
+import mx.services.WebService;
+import mx.services.WSDL;
 
 class mx.services.WebServiceProxy
 {
@@ -67,7 +67,7 @@
         // log objects, chained together
         var wsdlLog = new Log(this.log.level, "WSDL");
         wsdlLog._parentLog = this.log;
-        wsdlLog.onLog = function(txt) { this._parentLog.onLog(txt); }
+        wsdlLog.onLog = function(txt) { this._parentLog.onLog(txt); };
 
         // Create the WSDL object, which will cause the object
         // to attempt to load and parse the remote WSDL file
@@ -79,7 +79,7 @@
         this.wsdl.onLoad = function()
         {
             this.serviceProxy.onWSDL();
-        }
+        };
 
         this.log.logInfo("Created stub for " + this.wsdlURI, Log.VERBOSE);
     }
@@ -189,16 +189,16 @@
             callback.genSingleConcurrencyFault = function()
             {
                 clearInterval(this.timerID);  // only once
-                var fault = new SOAPFault("Client.NoSuchMethod",
+                fault = new SOAPFault("Client.NoSuchMethod",
                                           "Couldn't find method '" + operationName + "' in service!");
                 this.__handleFault(fault);
                 this.onFault(fault);
-            }
+            };
 
             callback["timerID"] = setInterval(function() { callback.genSingleConcurrencyFault(); }, 50);  // 5 ms
 
             return callback;
-        }
+        };
 
         // now that the WSDL has been parsed and SOAPCalls created,
         // send any enqueued messages
@@ -233,7 +233,7 @@
         for (var i in newPort) {
             this.service[i] = function() {
                 return this.stub.invokeOperation(arguments.callee.name, arguments);
-            }
+            };
             this.service[i].name = i;
         }
 
@@ -281,7 +281,7 @@
             myProxyURI = this.buildURL(myProxyURI);
         }
 
-        var ops = this["waitingOps"]
+        var ops = this["waitingOps"];
 
         var operationName:String;
 
@@ -298,7 +298,7 @@
 
             var soapLog = new Log(this.log.level, "SOAP");
             soapLog._parentLog = this.log;
-            soapLog.onLog = function(txt) { this._parentLog.onLog(txt); }
+            soapLog.onLog = function(txt) { this._parentLog.onLog(txt); };
 
             var opEndpointURI = endpointURI;
             if (myProxyURI != undefined)
@@ -441,7 +441,7 @@
         // This is a hack - we should really be returning proper PendingCall objects here....
         promise.cancel = function() {
             this.cancelled = true;
-        }
+        };
         this.callQueue.push(promise);
 
         // return the promised call so that callback functions can be implemented on it:
@@ -452,7 +452,7 @@
     // onFault() for each call.  Otherwise we invoke each one.
     function unEnqueueCalls(fault)
     {
-        var ops = this["waitingOps"]
+        var ops = this["waitingOps"];
         if (ops != undefined)
         {
             for (var name in ops) {
@@ -496,7 +496,7 @@
 				// (be aware: the variable "soapCall" is of type mx.services.PendingCall!).
 
                 if (soapCall == undefined) {
-                    var fault = new SOAPFault("Client.NoSuchMethod",
+                    fault = new SOAPFault("Client.NoSuchMethod",
                         "Couldn't find method '" + qcall.operationName + "' in service!");
                     qcall.onFault(fault);
                     return;
@@ -517,31 +517,31 @@
                     this.originalPromise.request = this.request;
                     this.originalPromise.response = this.response;
                     this.originalPromise.onResult(result, response);
-                }
-                soapCall.onFault = function(fault)
+                };
+                soapCall.onFault = function(faultReason)
                 {
                     this.originalPromise.request = this.request;
                     this.originalPromise.response = this.response;
-                    this.originalPromise.onFault(fault);
-                }
+                    this.originalPromise.onFault(faultReason);
+                };
                 soapCall.__handleResult = function(result, response)
                 {
                     this.originalPromise.request = this.request;
                     this.originalPromise.response = this.response;
                     this.originalPromise.__handleResult(result, response);
-                }
-                soapCall.__handleFault = function(fault)
+                };
+                soapCall.__handleFault = function(faultReason)
                 {
                     this.originalPromise.request = this.request;
                     this.originalPromise.response = this.response;
-                    this.originalPromise.__handleFault(fault);
-                }
+                    this.originalPromise.__handleFault(faultReason);
+                };
                 soapCall.onHeaders = function(headers, response)
                 {
                     this.originalPromise.request = this.request;
                     this.originalPromise.response = this.response;
                     this.originalPromise.onHeaders(headers, response);
-                }
+                };
             }
         }
     }
diff -Naur Original/mx/services/WSDL.as Final/mx/services/WSDL.as
--- Original/mx/services/WSDL.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/WSDL.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-// ------------------------------------------------------------
+﻿// ------------------------------------------------------------
 // WSDL PARSER
 // ------------------------------------------------------------
 // Parses a WSDL file in conjunction with the XML Schema
@@ -13,16 +13,15 @@
 // gdaniels@macromedia.com
 // ------------------------------------------------------------
 import mx.services.Log;
+import mx.services.QName;
+import mx.services.SchemaContext;
+import mx.services.SOAPConstants;
+import mx.services.SOAPFault;
+import mx.services.SOAPParameter;
 import mx.services.WebServiceProxy;
 import mx.services.WSDLConstants;
 import mx.services.WSDLDocument;
 import mx.services.WSDLOperation;
-import mx.services.WebService;
-import mx.services.SchemaContext;
-import mx.services.SOAPFault;
-import mx.services.SOAPConstants;
-import mx.services.SOAPParameter;
-import mx.services.QName;
 
 class mx.services.WSDL
 {
@@ -64,7 +63,7 @@
         // SCHEMA CONTEXT INITIALIZATION
         var schemaLog = new Log(this.log.level, "XMLSchema");
         schemaLog._parentLog = this.log;
-        schemaLog.onLog = function(txt) { this._parentLog.onLog(txt); }
+        schemaLog.onLog = function(txt) { this._parentLog.onLog(txt); };
         this.schemas = new SchemaContext(schemaLog);
 
         // Always have the XSD + SOAP types available
@@ -103,7 +102,7 @@
                 this.wsdl.log.logInfo("Received WSDL document from the remote service", Log.VERBOSE);
                 this.parseXML(src);
                 this.loaded = true;
-                var parseTime = Math.round((new Date()) - start);
+                var parseTime = Math.round((new Date()).getTime() - start.getTime());
                 this.wsdl.log.logInfo("Parsed WSDL XML [" + parseTime + " millis]", Log.VERBOSE);
             }
 
@@ -248,7 +247,7 @@
         if (this.fault == undefined) {
             // At this point, our job is essentially done, and this.services is
             // filled in.  Note how long this took.
-            var parseTime = Math.floor(new Date() - this.startTime);
+            var parseTime = Math.floor((new Date()).getTime() - this.startTime.getTime());
             //trace("WSDL parse took " + parseTime + "ms");
         }
 
@@ -476,7 +475,7 @@
         var bindingElements = document.getElementsByQName(c.bindingQName);
         for (var i=0; i < bindingElements.length; i++)
         {
-            var bindingElement = bindingElements[i];
+            bindingElement = bindingElements[i];
             var bn = bindingElement.attributes.name;
             if (bindingName != bn) continue;
             binding.name = bn;
@@ -595,7 +594,7 @@
             }
             else
             {
-                message.name == operationName + "Response";
+                message.name = operationName + "Response";
             }
         }
 
diff -Naur Original/mx/services/WSDLConstants.as Final/mx/services/WSDLConstants.as
--- Original/mx/services/WSDLConstants.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/WSDLConstants.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-// ------------------------------------------------------------
+﻿// ------------------------------------------------------------
 // WSDL CONSTANTS
 // ------------------------------------------------------------
 // Constants for Namespace URIs and the like used by the
diff -Naur Original/mx/services/WSDLDocument.as Final/mx/services/WSDLDocument.as
--- Original/mx/services/WSDLDocument.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/WSDLDocument.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,5 +1,5 @@
+﻿import mx.services.SOAPFault;
 import mx.services.WSDL;
-import mx.services.SOAPFault;
 
 class mx.services.WSDLDocument
 {
diff -Naur Original/mx/services/WSDLOperation.as Final/mx/services/WSDLOperation.as
--- Original/mx/services/WSDLOperation.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/services/WSDLOperation.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,9 +1,9 @@
-// WSDLOperation - a holder for a port type operation which can be looked
+﻿// WSDLOperation - a holder for a port type operation which can be looked
 // up by name, but does not parse messages (and therefore schema types)
 // until explicitly asked.
 
-import mx.services.WSDL;
 import mx.services.SOAPConstants;
+import mx.services.WSDL;
 
 class mx.services.WSDLOperation
 {
diff -Naur Original/mx/skins/CustomBorder.as Final/mx/skins/CustomBorder.as
--- Original/mx/skins/CustomBorder.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/CustomBorder.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,7 +4,7 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.skins.SkinElement;
+//import mx.skins.SkinElement;
 import mx.skins.Border;
 
 /**
@@ -26,8 +26,7 @@
 */
 	static var symbolOwner:Object = CustomBorder;
 
-	// Version string
-#include "../core/ComponentVersion.as"
+	// Version string//#include "../core/ComponentVersion.as"
 
 /**
 * name of this class
diff -Naur Original/mx/skins/halo/AccordionHeaderSkin.as Final/mx/skins/halo/AccordionHeaderSkin.as
--- Original/mx/skins/halo/AccordionHeaderSkin.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/halo/AccordionHeaderSkin.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,9 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.skins.RectBorder;
-import mx.skins.SkinElement;
 import mx.core.ext.UIObjectExtensions;
+import mx.skins.RectBorder;
 
 class mx.skins.halo.AccordionHeaderSkin extends RectBorder
 {
diff -Naur Original/mx/skins/halo/ActivatorSkin.as Final/mx/skins/halo/ActivatorSkin.as
--- Original/mx/skins/halo/ActivatorSkin.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/halo/ActivatorSkin.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,9 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.skins.RectBorder;
-import mx.skins.SkinElement;
 import mx.core.ext.UIObjectExtensions;
+import mx.skins.RectBorder;
 
 class mx.skins.halo.ActivatorSkin extends RectBorder
 {
diff -Naur Original/mx/skins/halo/ButtonSkin.as Final/mx/skins/halo/ButtonSkin.as
--- Original/mx/skins/halo/ButtonSkin.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/halo/ButtonSkin.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,9 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.skins.RectBorder;
-import mx.skins.SkinElement;
 import mx.core.ext.UIObjectExtensions;
+import mx.skins.RectBorder;
 
 class mx.skins.halo.ButtonSkin extends RectBorder
 {
diff -Naur Original/mx/skins/halo/Defaults.as Final/mx/skins/halo/Defaults.as
--- Original/mx/skins/halo/Defaults.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/halo/Defaults.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,9 +4,9 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.styles.CSSStyleDeclaration;
 import mx.core.ext.UIObjectExtensions;
 import mx.core.UIObject;
+import mx.styles.CSSStyleDeclaration;
 
 class mx.skins.halo.Defaults
 {
@@ -178,90 +178,97 @@
 	// ratios - (optional :: default  [0,255]) - specifies the distribution of colors :: array [#,#];
 	function drawRoundRect(x,y,w,h,r,c,alpha,rot,gradient,ratios)
 	{
-			if (typeof r == "object") {
-				var rbr = r.br //bottom right corner
-				var rbl = r.bl //bottom left corner
-				var rtl = r.tl //top left corner
-				var rtr = r.tr //top right corner
-			}
+		var rbr; //bottom right corner
+		var rbl; //bottom left corner
+		var rtl; //top left corner
+		var rtr; //top right corner
+		
+		if (typeof r == "object") {
+			rbr = r.br; 
+			rbl = r.bl; 
+			rtl = r.tl; 
+			rtr = r.tr; 
+		}
+		else
+		{
+			rbr =  rbl = rtl = rtr = r;
+		}
+		// if color is an object then allow for complex fills
+		var alphas;
+		var matrix;
+		
+		if(typeof c == "object")
+		{
+			if (typeof alpha != "object")
+				alphas = [alpha,alpha];
+			else
+				alphas = alpha;
+
+			if (ratios == undefined)
+				ratios = [ 0, 0xff ];
+
+			var sh = h *.7;
+			if (typeof rot != "object")
+				matrix = {matrixType:"box", x:-sh, y:sh, w:w*2, h:h*4, r:rot * 0.0174532925199433 };
 			else
-			{
-				var rbr =  rbl = rtl = rtr = r;
-			}
-			// if color is an object then allow for complex fills
-			if(typeof c == "object")
-			{
-				if (typeof alpha != "object")
-					var alphas = [alpha,alpha];
-				else
-					var alphas = alpha;
-
-				if (ratios == undefined)
-					var ratios = [ 0, 0xff ];
-
-				var sh = h *.7
-				if (typeof rot != "object")
-					var matrix = {matrixType:"box", x:-sh, y:sh, w:w*2, h:h*4, r:rot * 0.0174532925199433 }
-				else
-					var matrix = rot;
-
-				if (gradient == "radial")
-					this.beginGradientFill( "radial", c, alphas, ratios, matrix );
-				else
-					this.beginGradientFill( "linear", c, alphas, ratios, matrix );
-
-			}
-			else if (c != undefined)
-			{
-				this.beginFill (c, alpha);
-			}
-
-			// Math.sin and Math,tan values for optimal performance.
-			// Math.rad = Math.PI/180 = 0.0174532925199433
-			// r*Math.sin(45*Math.rad) =  (r*0.707106781186547);
-			// r*Math.tan(22.5*Math.rad) = (r*0.414213562373095);
-
-			//bottom right corner
-			r = rbr;
-			var a = r - (r*0.707106781186547); //radius - anchor pt;
-			var s = r - (r*0.414213562373095); //radius - control pt;
-			this.moveTo ( x+w,y+h-r);
-			this.lineTo ( x+w,y+h-r );
-			this.curveTo( x+w,y+h-s,x+w-a,y+h-a);
-			this.curveTo( x+w-s,y+h,x+w-r,y+h);
-
-			//bottom left corner
-			r = rbl;
-			var a = r - (r*0.707106781186547);
-			var s = r - (r*0.414213562373095);
-			this.lineTo ( x+r,y+h );
-			this.curveTo( x+s,y+h,x+a,y+h-a);
-			this.curveTo( x,y+h-s,x,y+h-r);
-
-			//top left corner
-			r = rtl;
-			var a = r - (r*0.707106781186547);
-			var s = r - (r*0.414213562373095);
-			this.lineTo ( x,y+r );
-			this.curveTo( x,y+s,x+a,y+a);
-			this.curveTo( x+s,y,x+r,y);
-
-			//top right
-			r = rtr;
-			var a = r - (r*0.707106781186547);
-			var s = r - (r*0.414213562373095);
-			this.lineTo ( x+w-r,y );
-			this.curveTo( x+w-s,y,x+w-a,y+a);
-			this.curveTo( x+w,y+s,x+w,y+r);
-			this.lineTo ( x+w,y+h-r );
+				matrix = rot;
 
-			if (c != undefined)
-				this.endFill();
+			if (gradient == "radial")
+				this.beginGradientFill( "radial", c, alphas, ratios, matrix );
+			else
+				this.beginGradientFill( "linear", c, alphas, ratios, matrix );
+
+		}
+		else if (c != undefined)
+		{
+			this.beginFill (c, alpha);
+		}
+
+		// Math.sin and Math,tan values for optimal performance.
+		// Math.rad = Math.PI/180 = 0.0174532925199433
+		// r*Math.sin(45*Math.rad) =  (r*0.707106781186547);
+		// r*Math.tan(22.5*Math.rad) = (r*0.414213562373095);
+
+		//bottom right corner
+		r = rbr;
+		var a = r - (r*0.707106781186547); //radius - anchor pt;
+		var s = r - (r*0.414213562373095); //radius - control pt;
+		this.moveTo ( x+w,y+h-r);
+		this.lineTo ( x+w,y+h-r );
+		this.curveTo( x+w,y+h-s,x+w-a,y+h-a);
+		this.curveTo( x+w-s,y+h,x+w-r,y+h);
+
+		//bottom left corner
+		r = rbl;
+		a = r - (r*0.707106781186547);
+		s = r - (r*0.414213562373095);
+		this.lineTo ( x+r,y+h );
+		this.curveTo( x+s,y+h,x+a,y+h-a);
+		this.curveTo( x,y+h-s,x,y+h-r);
+
+		//top left corner
+		r = rtl;
+		a = r - (r*0.707106781186547);
+		s = r - (r*0.414213562373095);
+		this.lineTo ( x,y+r );
+		this.curveTo( x,y+s,x+a,y+a);
+		this.curveTo( x+s,y,x+r,y);
+
+		//top right
+		r = rtr;
+		a = r - (r*0.707106781186547);
+		s = r - (r*0.414213562373095);
+		this.lineTo ( x+w-r,y );
+		this.curveTo( x+w-s,y,x+w-a,y+a);
+		this.curveTo( x+w,y+s,x+w,y+r);
+		this.lineTo ( x+w,y+h-r );
+
+		if (c != undefined)
+			this.endFill();
 	}
 
 	static function classConstruct():Boolean
 	{
-
 		UIObjectExtensions.Extensions();
 
 		setThemeDefaults();
@@ -270,7 +277,8 @@
 
 		return true;
 	}
-	static var classConstructed = classConstruct();
+	
+	static var classConstructed:Boolean = classConstruct();	
 	static var CSSStyleDeclarationDependency = CSSStyleDeclaration;
 	static var UIObjectExtensionsDependency = UIObjectExtensions;
 	static var UIObjectDependency = UIObject;
diff -Naur Original/mx/skins/halo/FocusRect.as Final/mx/skins/halo/FocusRect.as
--- Original/mx/skins/halo/FocusRect.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/halo/FocusRect.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,11 +4,10 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.skins.SkinElement;
 import mx.core.UIComponent;
-import mx.core.UIObject;
-import mx.skins.halo.Defaults;
 import mx.managers.DepthManager;
+import mx.skins.halo.Defaults;
+import mx.skins.SkinElement;
 
 class mx.skins.halo.FocusRect extends SkinElement
 {
@@ -41,7 +40,7 @@
 
 			this.beginFill(rectCol,a*.3);
 			this.drawRoundRect(0,0,w,h,r);
-			this.drawRoundRect(2,2,w-4,h-4,r)
+			this.drawRoundRect(2,2,w-4,h-4,r);
 			this.endFill();
 
 			r.br = (r.br>1)? r.br+1 : 0;
@@ -57,7 +56,7 @@
 			r.tr = (r.tr>1)? r.tr-1 : 0;
 			r.tl = (r.tl>1)? r.tl-1 : 0;
 
-			this.drawRoundRect(2,2,w-4,h-4,r)
+			this.drawRoundRect(2,2,w-4,h-4,r);
 			this.endFill();
 
 
@@ -76,7 +75,7 @@
 
 			this.beginFill(rectCol,a*.3);
 			this.drawRoundRect(0,0,w,h,r);
-			this.drawRoundRect(2,2,w-4,h-4,cr)
+			this.drawRoundRect(2,2,w-4,h-4,cr);
 			this.endFill();
 
 			this.beginFill(rectCol,a*.3);
@@ -88,10 +87,10 @@
 			else
 			{
 				cr = 0;
-				r = 0
+				r = 0;
 			}
 			this.drawRoundRect(0+1,0+1,w-2,h-2,r);
-			this.drawRoundRect(2,2,w-4,h-4,cr)
+			this.drawRoundRect(2,2,w-4,h-4,cr);
 			this.endFill();
 		}
 	}
@@ -141,7 +140,7 @@
 				this.addEventListener("move", o);
 				this.addEventListener("resize", o);
 			}
-		}
+		};
 		UIComponent.prototype.adjustFocusRect = function()
 		{
 			var rectCol = this.getStyle("themeColor");
@@ -151,7 +150,7 @@
 			var o = this._parent.focus_mc;
 			o.setSize(this.width + 4, this.height + 4, 0, 100, rectCol);
 			o.move(this.x - 2, this.y - 2);
-		}
+		};
 
 		TextField.prototype.drawFocus = UIComponent.prototype.drawFocus;
 		TextField.prototype.adjustFocusRect = UIComponent.prototype.adjustFocusRect;
@@ -161,8 +160,7 @@
 		return true;
 	}
 	static var classConstructed:Boolean = classConstruct();
-	static var DefaultsDependency:Defaults = Defaults;
-	static var UIComponentDependency:UIComponent = UIComponent;
-
+	static var DefaultsDependency = Defaults;
+	static var UIComponentDependency = UIComponent;
 }
 
diff -Naur Original/mx/skins/halo/RectBorder.as Final/mx/skins/halo/RectBorder.as
--- Original/mx/skins/halo/RectBorder.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/halo/RectBorder.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,19 +4,18 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.skins.Border;
-import mx.styles.CSSStyleDeclaration;
+//import mx.skins.Border;
 import mx.core.ext.UIObjectExtensions;
+import mx.styles.CSSStyleDeclaration;
 
 class mx.skins.halo.RectBorder extends mx.skins.RectBorder
 {
-
 	static var symbolName:String = "RectBorder";
 
 	static var symbolOwner:Object = mx.skins.halo.RectBorder;
 
 	// Version string
-#include "../../core/ComponentVersion.as"
+//#include "../../core/ComponentVersion.as"
 
 	var borderCapColorName:String = "borderCapColor";
 	var shadowCapColorName:String = "shadowCapColor";
@@ -34,7 +33,6 @@
 */
 	function RectBorder()
 	{
-
 	}
 
 /**
@@ -75,6 +73,7 @@
 */
 	function drawBorder(Void):Void
 	{
+		var i,h,g,f,j:Number;
 
 		var z:CSSStyleDeclaration = _global.styles[className];
 		if (z == undefined)
@@ -90,15 +89,15 @@
 		if (b != "none")
 		{
 
-			var f:Number = getStyle(shadowColorName);
+			f = getStyle(shadowColorName);
 			if (f == undefined) f = z[shadowColorName];
-			var g:Number = getStyle(highlightColorName);
+			g = getStyle(highlightColorName);
 			if (g == undefined) g = z[highlightColorName];
-			var h:Number = getStyle(buttonColorName);
+			h = getStyle(buttonColorName);
 			if (h == undefined) h = z[buttonColorName];
-			var i:Number = getStyle(borderCapColorName);
+			i = getStyle(borderCapColorName);
 			if (i == undefined) i = z[borderCapColorName];
-			var j:Number = getStyle(shadowCapColorName);
+			j = getStyle(shadowCapColorName);
 			if (j == undefined) j = z[shadowCapColorName];
 		}
 		offset = borderWidths[b];
@@ -150,7 +149,7 @@
 			var themeCol = getStyle("themeColor");
 			drawRoundRect( 4,4,ww-2,hh-3,0,[0x5e5e5e,0x5e5e5e],10,0,"radial");//dropShadow
 			drawRoundRect( 4,4,ww-1,hh-2,0,0x5e5e5e,10);//dropShadow
-			drawRoundRect( 0,0,ww+1,hh,0,[0x000000,0xdadada],100,250,"linear")//base color
+			drawRoundRect( 0,0,ww+1,hh,0,[0x000000,0xdadada],100,250,"linear");//base color
 			drawRoundRect( 0,0,ww+1,hh,0,themeCol,50); // themeColor
 			drawRoundRect( 2,2,ww-3,hh-4,0,0xffffff,100);
 		}
diff -Naur Original/mx/skins/RectBorder.as Final/mx/skins/RectBorder.as
--- Original/mx/skins/RectBorder.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/RectBorder.as	2008-01-06 05:12:36.000000000 +0900
@@ -5,7 +5,7 @@
 //this product.
 //****************************************************************************
 import mx.skins.Border;
-import mx.styles.CSSStyleDeclaration;
+//import mx.styles.CSSStyleDeclaration;
 
 /**
 * The abstract border class for drawing rectangular borders.
@@ -26,8 +26,7 @@
 */
 	static var symbolOwner:Object = mx.skins.RectBorder;
 
-	// Version string
-#include "../core/ComponentVersion.as"
+	// Version string//#include "../core/ComponentVersion.as"
 
 /**
 * name of this class
diff -Naur Original/mx/skins/sample/ActivatorSkin.as Final/mx/skins/sample/ActivatorSkin.as
--- Original/mx/skins/sample/ActivatorSkin.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/sample/ActivatorSkin.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,12 +1,11 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.skins.RectBorder;
-import mx.skins.SkinElement;
 import mx.core.ext.UIObjectExtensions;
+import mx.skins.RectBorder;
 
 class mx.skins.sample.ActivatorSkin extends RectBorder
 {
diff -Naur Original/mx/skins/sample/ButtonSkin.as Final/mx/skins/sample/ButtonSkin.as
--- Original/mx/skins/sample/ButtonSkin.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/sample/ButtonSkin.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,9 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.skins.sample.RectBorder;
-import mx.skins.SkinElement;
 import mx.core.ext.UIObjectExtensions;
+import mx.skins.sample.RectBorder;
 
 class mx.skins.sample.ButtonSkin extends RectBorder
 {
diff -Naur Original/mx/skins/sample/Defaults.as Final/mx/skins/sample/Defaults.as
--- Original/mx/skins/sample/Defaults.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/sample/Defaults.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,9 +4,9 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.styles.CSSStyleDeclaration;
 import mx.core.ext.UIObjectExtensions;
 import mx.core.UIObject;
+import mx.styles.CSSStyleDeclaration;
 
 class mx.skins.sample.Defaults
 {
@@ -129,10 +129,10 @@
 	{
 			// passing an object for r allows for different corner radii
 			if (typeof r == "object") {
-				var rbr = r.br //bottom right corner
-				var rbl = r.bl //bottom left corner
-				var rtl = r.tl //top left corner
-				var rtr = r.tr //top right corner
+				var rbr = r.br; //bottom right corner
+				var rbl = r.bl; //bottom left corner
+				var rtl = r.tl; //top left corner
+				var rtr = r.tr; //top right corner
 			}else{
 				var rbr =  rbl = rtl = rtr = r;
 			}
@@ -140,9 +140,9 @@
 			if(typeof c == "object"){
 				var alphas = [alpha,alpha];
 				var ratios = [ 0, 0xff ];
-				var sh = h *.7
+				var sh = h *.7;
 
-				var matrix = {matrixType:"box", x:-sh, y:sh, w:w*2, h:h*4, r:rot * 0.0174532925199433 }
+				var matrix = {matrixType:"box", x:-sh, y:sh, w:w*2, h:h*4, r:rot * 0.0174532925199433 };
 				if (grad == "radial"){
 					this.beginGradientFill( "radial", c, alphas, ratios, matrix );
 				}else{
diff -Naur Original/mx/skins/sample/FocusRect.as Final/mx/skins/sample/FocusRect.as
--- Original/mx/skins/sample/FocusRect.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/sample/FocusRect.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,11 +4,10 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.skins.SkinElement;
 import mx.core.UIComponent;
-import mx.core.UIObject;
-import mx.skins.sample.Defaults;
 import mx.managers.DepthManager;
+import mx.skins.sample.Defaults;
+import mx.skins.SkinElement;
 
 class mx.skins.sample.FocusRect extends SkinElement
 {
@@ -40,7 +39,7 @@
 
 			this.beginFill(rectCol,a*.3);
 			this.drawRoundRect(0,0,w,h,r);
-			this.drawRoundRect(2,2,w-4,h-4,r)
+			this.drawRoundRect(2,2,w-4,h-4,r);
 			this.endFill();
 
 			r.br = (r.br>1)? r.br+1 : 0;
@@ -56,7 +55,7 @@
 			r.tr = (r.tr>1)? r.tr-1 : 0;
 			r.tl = (r.tl>1)? r.tl-1 : 0;
 
-			this.drawRoundRect(2,2,w-4,h-4,r)
+			this.drawRoundRect(2,2,w-4,h-4,r);
 			this.endFill();
 
 
@@ -75,7 +74,7 @@
 
 			this.beginFill(rectCol,a*.3);
 			this.drawRoundRect(0,0,w,h,r);
-			this.drawRoundRect(2,2,w-4,h-4,cr)
+			this.drawRoundRect(2,2,w-4,h-4,cr);
 			this.endFill();
 
 			this.beginFill(rectCol,a*.3);
@@ -87,10 +86,10 @@
 			else
 			{
 				cr = 0;
-				r = 0
+				r = 0;
 			}
 			this.drawRoundRect(0+1,0+1,w-2,h-2,r);
-			this.drawRoundRect(2,2,w-4,h-4,cr)
+			this.drawRoundRect(2,2,w-4,h-4,cr);
 			this.endFill();
 		}
 	}
@@ -140,7 +139,7 @@
 				this.addEventListener("move", o);
 				this.addEventListener("resize", o);
 			}
-		}
+		};
 		UIComponent.prototype.adjustFocusRect = function()
 		{
 			var rectCol = this.getStyle("themeColor");
@@ -150,7 +149,7 @@
 			var o = this._parent.focus_mc;
 			o.setSize(this.width + 4, this.height + 4, 0, 100, rectCol);
 			o.move(this.x - 2, this.y - 2);
-		}
+		};
 
 		TextField.prototype.drawFocus = UIComponent.prototype.drawFocus;
 		TextField.prototype.adjustFocusRect = UIComponent.prototype.adjustFocusRect;
diff -Naur Original/mx/skins/sample/RectBorder.as Final/mx/skins/sample/RectBorder.as
--- Original/mx/skins/sample/RectBorder.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/skins/sample/RectBorder.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,9 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.skins.Border;
-import mx.styles.CSSStyleDeclaration;
 import mx.core.ext.UIObjectExtensions;
+import mx.styles.CSSStyleDeclaration;
 
 /**
 * The border class for drawing rectangular borders.  Does not use skins, draws programmatically.
@@ -27,8 +26,7 @@
 */
 	static var symbolOwner:Object = mx.skins.sample.RectBorder;
 
-	// Version string
-#include "../../core/ComponentVersion.as"
+	// Version string//#include "../../core/ComponentVersion.as"
 
 /**
 * @private
diff -Naur Original/mx/styles/CSSSetStyle.as Final/mx/styles/CSSSetStyle.as
--- Original/mx/styles/CSSSetStyle.as	2004-05-25 21:00:04.000000000 +0800
+++ Final/mx/styles/CSSSetStyle.as	2008-01-06 05:12:36.000000000 +0900
@@ -4,8 +4,8 @@
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
-import mx.styles.StyleManager;
 import mx.styles.CSSStyleDeclaration;
+import mx.styles.StyleManager;
 
 /**
 * runtime style changes of CSS properties requires this package
@@ -67,10 +67,10 @@
 				var newValueR = rollOverColor[newValue];
 
 				if ( newValueS == undefined)
-						var newValueS  = newValue;
+						newValueS  = newValue;
 
 				if ( newValueR == undefined)
-						var newValueR  = newValue;
+						newValueR  = newValue;
 
 				this.setStyle("selectionColor", newValueS);
 				this.setStyle("rollOverColor", newValueR);
@@ -145,7 +145,7 @@
 						{
 							if (i._color == colorStyle)
 							{
-								var v = i.getStyle(colorStyle)
+								var v = i.getStyle(colorStyle);
 								if (colorStyle == "color")
 								{
 									if (stylecache.tf.color != undefined)
@@ -257,10 +257,10 @@
 				var newValueR = rollOverColor[newValue];
 
 				if ( newValueS == undefined)
-						var newValueS  = newValue;
+						newValueS  = newValue;
 
 				if ( newValueR == undefined)
-						var newValueR  = newValue;
+						newValueR  = newValue;
 
 				this.setStyle("selectionColor", newValueS);
 				this.setStyle("rollOverColor", newValueR);
diff -Naur Original/mx/styles/CSSTextStyles.as Final/mx/styles/CSSTextStyles.as
--- Original/mx/styles/CSSTextStyles.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/styles/CSSTextStyles.as	2008-01-06 05:12:36.000000000 +0900
@@ -28,7 +28,7 @@
 * @tiptext
 * @helpid 3337
 */
-		o.addProperty("fontWeight", function() { return (this._tf.bold != undefined) ? (this._tf.bold ? "bold" : "none") : undefined},
+		o.addProperty("fontWeight", function() { return (this._tf.bold != undefined) ? (this._tf.bold ? "bold" : "none") : undefined;},
 								function(x) { if (this._tf == undefined) this._tf = new TextFormat();
 											  this._tf.bold = (x == "bold"); });
 
@@ -69,7 +69,7 @@
 * @tiptext
 * @helpid 3341
 */
-		o.addProperty("fontStyle", function() { return (this._tf.italic != undefined) ? (this._tf.italic ? "italic" : "none") : undefined},
+		o.addProperty("fontStyle", function() { return (this._tf.italic != undefined) ? (this._tf.italic ? "italic" : "none") : undefined;},
 								function(x) { if (this._tf == undefined) this._tf = new TextFormat();
 											  this._tf.italic = (x == "italic"); });
 
@@ -109,7 +109,7 @@
 * @tiptext
 * @helpid 3345
 */
-		o.addProperty("textDecoration", function() { return (this._tf.underline != undefined) ? (this._tf.underline ? "underline" : "none") : undefined},
+		o.addProperty("textDecoration", function() { return (this._tf.underline != undefined) ? (this._tf.underline ? "underline" : "none") : undefined;},
 								function(x) { if (this._tf == undefined) this._tf = new TextFormat();
 											  this._tf.underline = (x == "underline"); });
 
diff -Naur Original/mx/styles/StyleManager.as Final/mx/styles/StyleManager.as
--- Original/mx/styles/StyleManager.as	2003-09-03 18:49:24.000000000 +0800
+++ Final/mx/styles/StyleManager.as	2008-01-06 05:12:36.000000000 +0900
@@ -182,7 +182,7 @@
 */
 	static function isColorName(colorName:String):Boolean
 	{
-		return (StyleManager.colorNames[colorName] != undefined)
+		return (StyleManager.colorNames[colorName] != undefined);
 	}
 
 /**
diff -Naur Original/mx/transitions/Blinds.as Final/mx/transitions/Blinds.as
--- Original/mx/transitions/Blinds.as	2005-05-23 04:13:40.000000000 +0800
+++ Final/mx/transitions/Blinds.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -10,7 +10,7 @@
 
 class mx.transitions.Blinds extends Transition {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	public var type:Object = Blinds;
 	public var className:String = "Blinds";
diff -Naur Original/mx/transitions/BroadcasterMX.as Final/mx/transitions/BroadcasterMX.as
--- Original/mx/transitions/BroadcasterMX.as	2005-05-23 04:13:44.000000000 +0800
+++ Final/mx/transitions/BroadcasterMX.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -7,7 +7,7 @@
 
 class mx.transitions.BroadcasterMX {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	private var _listeners:Array;
 	
diff -Naur Original/mx/transitions/easing/Back.as Final/mx/transitions/easing/Back.as
--- Original/mx/transitions/easing/Back.as	2005-05-23 04:14:32.000000000 +0800
+++ Final/mx/transitions/easing/Back.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -7,7 +7,7 @@
 
 class mx.transitions.easing.Back {
 
-	#include "../Version.as"
+//#include "../Version.as"
 
 	static function easeIn (t:Number, b:Number, c:Number, d:Number, s:Number):Number {
 		if (s == undefined) s = 1.70158;
diff -Naur Original/mx/transitions/easing/Bounce.as Final/mx/transitions/easing/Bounce.as
--- Original/mx/transitions/easing/Bounce.as	2005-05-23 04:14:34.000000000 +0800
+++ Final/mx/transitions/easing/Bounce.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -7,7 +7,7 @@
 
 class mx.transitions.easing.Bounce {
 
-	#include "../Version.as"
+//#include "../Version.as"
 
 	static function easeOut (t:Number, b:Number, c:Number, d:Number):Number {
 		if ((t/=d) < (1/2.75)) {
diff -Naur Original/mx/transitions/easing/Elastic.as Final/mx/transitions/easing/Elastic.as
--- Original/mx/transitions/easing/Elastic.as	2005-05-23 04:14:38.000000000 +0800
+++ Final/mx/transitions/easing/Elastic.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -7,7 +7,7 @@
 
 class mx.transitions.easing.Elastic {
 
-	#include "../Version.as"
+//#include "../Version.as"
 
 	static function easeIn (t:Number, b:Number, c:Number, d:Number, a:Number, p:Number):Number {
 		if (t==0) return b;  if ((t/=d)==1) return b+c;  if (!p) p=d*.3;
diff -Naur Original/mx/transitions/easing/None.as Final/mx/transitions/easing/None.as
--- Original/mx/transitions/easing/None.as	2005-05-23 04:14:40.000000000 +0800
+++ Final/mx/transitions/easing/None.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -7,7 +7,7 @@
 
 class mx.transitions.easing.None {
 
-	#include "../Version.as"
+//#include "../Version.as"
 
 	static function easeNone (t:Number, b:Number, c:Number, d:Number):Number {
 		return c*t/d + b;
diff -Naur Original/mx/transitions/easing/Regular.as Final/mx/transitions/easing/Regular.as
--- Original/mx/transitions/easing/Regular.as	2005-05-23 04:14:42.000000000 +0800
+++ Final/mx/transitions/easing/Regular.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -7,7 +7,7 @@
 
 class mx.transitions.easing.Regular {
 
-	#include "../Version.as"
+//#include "../Version.as"
 
 	static function easeIn (t:Number, b:Number, c:Number, d:Number):Number {
 		return c*(t/=d)*t + b;
diff -Naur Original/mx/transitions/easing/Strong.as Final/mx/transitions/easing/Strong.as
--- Original/mx/transitions/easing/Strong.as	2005-05-23 04:14:46.000000000 +0800
+++ Final/mx/transitions/easing/Strong.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -7,7 +7,7 @@
 
 class mx.transitions.easing.Strong {
 
-	#include "../Version.as"
+//#include "../Version.as"
 
 	static function easeIn (t:Number, b:Number, c:Number, d:Number):Number {
 		return c*(t/=d)*t*t*t*t + b;
diff -Naur Original/mx/transitions/Fade.as Final/mx/transitions/Fade.as
--- Original/mx/transitions/Fade.as	2005-05-23 04:13:46.000000000 +0800
+++ Final/mx/transitions/Fade.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -10,7 +10,7 @@
 
 class mx.transitions.Fade extends Transition {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	public var type:Object = Fade;
 	public var className:String = "Fade";
diff -Naur Original/mx/transitions/Fly.as Final/mx/transitions/Fly.as
--- Original/mx/transitions/Fly.as	2005-05-23 04:13:48.000000000 +0800
+++ Final/mx/transitions/Fly.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -10,7 +10,7 @@
 
 class mx.transitions.Fly extends Transition {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	public var type:Object = Fly;
 	public var className:String = "Fly";
diff -Naur Original/mx/transitions/Iris.as Final/mx/transitions/Iris.as
--- Original/mx/transitions/Iris.as	2005-05-23 05:45:22.000000000 +0800
+++ Final/mx/transitions/Iris.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -10,7 +10,7 @@
 
 class mx.transitions.Iris extends Transition {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	public static var SQUARE:String = "SQUARE";
 	public static var CIRCLE:String = "CIRCLE";
@@ -154,12 +154,13 @@
 				this._drawQuarterCircle (mask, p*maxRadius);
 			} else {
 				// iris from edge
+				var maxRadius:Number;
 				if (this._startPoint == 4 || this._startPoint == 6) {
 					// half-circle from left or right edge
-					var maxRadius:Number = Math.sqrt (this._width*this._width + .25*this._height*this._height);
+					maxRadius = Math.sqrt (this._width*this._width + .25*this._height*this._height);
 				} else if (this._startPoint == 2 || this._startPoint == 8) {
 					// half-circle from top or bottom edge
-					var maxRadius:Number = Math.sqrt (.25*this._width*this._width + this._height*this._height);
+					maxRadius = Math.sqrt (.25*this._width*this._width + this._height*this._height);
 				}
 				this._drawHalfCircle (mask, p*maxRadius);  
 			}
diff -Naur Original/mx/transitions/OnEnterFrameBeacon.as Final/mx/transitions/OnEnterFrameBeacon.as
--- Original/mx/transitions/OnEnterFrameBeacon.as	2005-05-23 04:13:54.000000000 +0800
+++ Final/mx/transitions/OnEnterFrameBeacon.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -9,7 +9,7 @@
 
 class mx.transitions.OnEnterFrameBeacon {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	static function init () {
 		var gmc = _global.MovieClip;
diff -Naur Original/mx/transitions/Photo.as Final/mx/transitions/Photo.as
--- Original/mx/transitions/Photo.as	2005-05-23 04:13:58.000000000 +0800
+++ Final/mx/transitions/Photo.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -10,7 +10,7 @@
 
 class mx.transitions.Photo extends Transition {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	public var type:Object = Photo;
 	public var className:String = "Photo";
diff -Naur Original/mx/transitions/PixelDissolve.as Final/mx/transitions/PixelDissolve.as
--- Original/mx/transitions/PixelDissolve.as	2005-05-23 04:14:00.000000000 +0800
+++ Final/mx/transitions/PixelDissolve.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -10,7 +10,7 @@
 
 class mx.transitions.PixelDissolve extends Transition {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	public var type:Object = PixelDissolve;
 	public var className:String = "PixelDissolve";
diff -Naur Original/mx/transitions/Rotate.as Final/mx/transitions/Rotate.as
--- Original/mx/transitions/Rotate.as	2005-05-23 04:14:02.000000000 +0800
+++ Final/mx/transitions/Rotate.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -10,7 +10,7 @@
 
 class mx.transitions.Rotate extends Transition {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	public var type:Object = Rotate;
 	public var className:String = "Rotate";
diff -Naur Original/mx/transitions/Squeeze.as Final/mx/transitions/Squeeze.as
--- Original/mx/transitions/Squeeze.as	2005-05-23 04:14:04.000000000 +0800
+++ Final/mx/transitions/Squeeze.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -10,7 +10,7 @@
 
 class mx.transitions.Squeeze extends Transition {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	public var type:Object = Squeeze;
 	public var className:String = "Squeeze";
diff -Naur Original/mx/transitions/TransactionVersion.as Final/mx/transitions/TransactionVersion.as
--- Original/mx/transitions/TransactionVersion.as	1970-01-01 08:00:00.000000000 +0800
+++ Final/mx/transitions/TransactionVersion.as	2008-01-06 05:12:36.000000000 +0900
@@ -0,0 +1,14 @@
+﻿//****************************************************************************
+//Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.  The
+//following is Sample Code and is subject to all restrictions on such
+//code as contained in the End User License Agreement accompanying
+//this product.
+//****************************************************************************
+
+interface mx.transitions.TransactionVersion {
+
+	// version info for mx.transitions classes
+	// this file is included by every class in that package so that
+	// this static is a member of each of those classes.
+	//public static var version:String = "1.1.0.52";
+}
\ No newline at end of file
diff -Naur Original/mx/transitions/Transition.as Final/mx/transitions/Transition.as
--- Original/mx/transitions/Transition.as	2005-05-23 05:41:54.000000000 +0800
+++ Final/mx/transitions/Transition.as	2008-01-06 05:12:36.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -25,7 +25,7 @@
 
 class mx.transitions.Transition {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	public static var IN:Number = 0;
 	public static var OUT:Number = 1;
@@ -104,7 +104,7 @@
 	
 	function set easing (e:Object):Void {
 		// if the function is the string name, evaluate to a reference
-		if (typeof e == "string") e = eval(e);
+		if (typeof e == "string") e = eval(String(e));
 		else if (e == undefined) e = this._noEase;
 		this._easing = e;
 		this._twn.easing = e;
diff -Naur Original/mx/transitions/TransitionManager.as Final/mx/transitions/TransitionManager.as
--- Original/mx/transitions/TransitionManager.as	2005-07-21 08:20:34.000000000 +0800
+++ Final/mx/transitions/TransitionManager.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,16 +1,16 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
 
-import mx.transitions.Transition;
 import mx.events.EventDispatcher;
+import mx.transitions.Transition;
 
 class mx.transitions.TransitionManager {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	static var IDCount:Number = 0;
 	
@@ -35,7 +35,7 @@
 		_yscale:null,
 		_alpha:null,
 		_rotation:null	
-	}
+	};
 	private var _triggerEvent:String;
 	
 	// decorate the class prototype with dispatcher methods (addEventListener(), etc.)
diff -Naur Original/mx/transitions/Tween.as Final/mx/transitions/Tween.as
--- Original/mx/transitions/Tween.as	2005-06-22 06:29:02.000000000 +0800
+++ Final/mx/transitions/Tween.as	2008-01-06 05:12:37.000000000 +0900
@@ -10,7 +10,7 @@
 
 class mx.transitions.Tween {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	static var __initBeacon = OnEnterFrameBeacon.init();
 	static var __initBroadcaster = BroadcasterMX.initialize (Tween.prototype, true);
diff -Naur Original/mx/transitions/Version.as Final/mx/transitions/Version.as
--- Original/mx/transitions/Version.as	2005-05-23 04:40:20.000000000 +0800
+++ Final/mx/transitions/Version.as	1970-01-01 08:00:00.000000000 +0800
@@ -1,10 +0,0 @@
-//****************************************************************************
-//Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.  The
-//following is Sample Code and is subject to all restrictions on such
-//code as contained in the End User License Agreement accompanying
-//this product.
-//****************************************************************************
-	// version info for mx.transitions classes
-	// this file is included by every class in that package so that
-	// this static is a member of each of those classes.
-	public static var version:String = "1.1.0.52";
diff -Naur Original/mx/transitions/Wipe.as Final/mx/transitions/Wipe.as
--- Original/mx/transitions/Wipe.as	2005-05-23 04:14:18.000000000 +0800
+++ Final/mx/transitions/Wipe.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -10,7 +10,7 @@
 
 class mx.transitions.Wipe extends Transition {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	public var type:Object = Wipe;
 	public var className:String = "Wipe";
diff -Naur Original/mx/transitions/Zoom.as Final/mx/transitions/Zoom.as
--- Original/mx/transitions/Zoom.as	2005-05-23 04:14:20.000000000 +0800
+++ Final/mx/transitions/Zoom.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -10,7 +10,7 @@
 
 class mx.transitions.Zoom extends Transition {
 
-	#include "Version.as"
+//#include "Version.as"
 
 	public var type:Object = Zoom;
 	public var className:String = "Zoom";
diff -Naur Original/mx/utils/ClassFinder.as Final/mx/utils/ClassFinder.as
--- Original/mx/utils/ClassFinder.as	2005-07-27 07:08:32.000000000 +0800
+++ Final/mx/utils/ClassFinder.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,4 +1,4 @@
-/*
+﻿/*
    Title:       Utils.as
    Description: defines the class "mx.utils.ClassFinder"
    Copyright:   Copyright (c) 2003
diff -Naur Original/mx/utils/Delegate.as Final/mx/utils/Delegate.as
--- Original/mx/utils/Delegate.as	2004-04-13 07:00:32.000000000 +0800
+++ Final/mx/utils/Delegate.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2003-2004 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -24,9 +24,9 @@
 		var f = function()
 		{
 			var target = arguments.callee.target;
-			var func = arguments.callee.func;
+			var callback = arguments.callee.func;
 
-			return func.apply(target, arguments);
+			return callback.apply(target, arguments);
 		};
 
 		f.target = obj;
diff -Naur Original/mx/utils/IteratorImpl.as Final/mx/utils/IteratorImpl.as
--- Original/mx/utils/IteratorImpl.as	2005-07-27 07:08:34.000000000 +0800
+++ Final/mx/utils/IteratorImpl.as	2008-01-06 05:12:37.000000000 +0900
@@ -5,8 +5,8 @@
 //this product.
 //****************************************************************************
 
-import mx.utils.Iterator;
 import mx.utils.Collection;
+import mx.utils.Iterator;
 
 class mx.utils.IteratorImpl implements Iterator {
 
diff -Naur Original/mx/utils/StringFormatter.as Final/mx/utils/StringFormatter.as
--- Original/mx/utils/StringFormatter.as	2005-07-27 07:08:34.000000000 +0800
+++ Final/mx/utils/StringFormatter.as	2008-01-06 05:12:37.000000000 +0900
@@ -104,18 +104,6 @@
 	@author	Jason Williams
 */
 	function setFormat( format, tokens ) {
-	
-		function compareValues( a, b ) {
-			
-			if( a.begin < b.begin )
-				return( -1 );
-			else
-				if( a.begin > b.begin )
-					return( 1 );
-				else
-					return( 0 );
-		}
-
 		if( format != this.__format ) {
 			this.__format = format;
 			// recalculate token information
@@ -138,4 +126,16 @@
 			this.__tokenInfo.sort( compareValues );
 		} // if change is required
 	}
+	
+	function compareValues( a, b ) {
+		
+		if( a.begin < b.begin )
+			return( -1 );
+		else
+			if( a.begin > b.begin )
+				return( 1 );
+			else
+				return( 0 );
+	}
+	
 }
\ No newline at end of file
diff -Naur Original/mx/video/ComponentVersion.as Final/mx/video/ComponentVersion.as
--- Original/mx/video/ComponentVersion.as	2005-08-31 04:42:52.000000000 +0800
+++ Final/mx/video/ComponentVersion.as	2008-01-06 05:12:37.000000000 +0900
@@ -4,7 +4,10 @@
 //code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
+
+interface mx.video.ComponentVersion {
 	// version info for mx.video classes
 	// this file is included by every class in that package so that
 	// this static is a member of each of those classes.
-	public static var version:String = "1.0.0.103";
+	//public static var version:String = "1.0.0.103";
+}
\ No newline at end of file
diff -Naur Original/mx/video/CuePointManager.as Final/mx/video/CuePointManager.as
--- Original/mx/video/CuePointManager.as	2005-07-14 10:13:06.000000000 +0800
+++ Final/mx/video/CuePointManager.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,11 +1,12 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2004-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
 
-import mx.video.*;
+import mx.video.FLVPlayback;
+import mx.video.VideoError;
 
 /**
  * <p>Event dispatched when a cue point is reached.  Event Object has an
@@ -262,7 +263,7 @@
 		// remove cue point from AS cue point array
 		var index:Number = getCuePointIndex(asCuePoints, false, cuePoint.time, cuePoint.name);
 		if (index < 0) return null;
-		var cuePoint:Object = asCuePoints[index];
+		cuePoint = asCuePoints[index];
 		asCuePoints.splice(index, 1);
 
 		// remove cue point from all cue points array
@@ -343,7 +344,7 @@
 
 		var numChanged:Number = 0;
 		var matchIndex:Number;
-		var index:Number
+		var index:Number;
 
 		// deal with name only case
 
@@ -1006,7 +1007,8 @@
 		// iteratively check if short length
 		if (len <= _linearSearchTolerance) {
 			var max:Number = start + len;
-			for (var i:Number = start; i < max; i++) {
+			var i:Number;
+			for (i = start; i < max; i++) {
 				result = cuePointCompare(time, name, cuePointArray[i]);
 				if (result == 0) return i;
 				if (result < 0) break;
@@ -1166,7 +1168,7 @@
 		} // switch
 		var index:Number = getCuePointIndex(cuePointArray, closeIsOK, cuePoint.time, cuePoint.name);
 		if (index < 0) return null;
-		var cuePoint:Object = deepCopyObject(cuePointArray[index]);
+		cuePoint = deepCopyObject(cuePointArray[index]);
 		cuePoint.array = cuePointArray;
 		cuePoint.index = index;
 		return cuePoint;
diff -Naur Original/mx/video/FLVPlayback.as Final/mx/video/FLVPlayback.as
--- Original/mx/video/FLVPlayback.as	2005-08-30 03:40:38.000000000 +0800
+++ Final/mx/video/FLVPlayback.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2004-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -7,7 +7,12 @@
 
 import mx.events.EventDispatcher;
 import mx.utils.Delegate;
-import mx.video.*;
+import mx.video.CuePointManager;
+import mx.video.INCManager;
+import mx.video.NCManager;
+import mx.video.UIManager;
+import mx.video.VideoError;
+import mx.video.VideoPlayer;
 
 /**
  * <p>Event dispatched when <code>FLVPlayback.BUFFERING</code> state
@@ -356,7 +361,7 @@
 
 class mx.video.FLVPlayback extends MovieClip {
 
-	#include "ComponentVersion.as"
+//#include "ComponentVersion.as"
 
 	//
 	// public state constants
@@ -637,7 +642,7 @@
 		if (_aspectRatio == undefined) _aspectRatio = true;
 		if (_seekToPrevOffset == undefined) _seekToPrevOffset = SEEK_TO_PREV_OFFSET_DEFAULT;
 		if (_playheadUpdateInterval == undefined) _playheadUpdateInterval = VideoPlayer.DEFAULT_UPDATE_PROGRESS_INTERVAL;
-		if (_progressInterval == undefined) _progressInterval = VideoPlayer.DEFAULT_UPDATE_TIME_INTERVAL
+		if (_progressInterval == undefined) _progressInterval = VideoPlayer.DEFAULT_UPDATE_TIME_INTERVAL;
 		if (_totalTime == undefined) _totalTime = 0;
 		if (_transform == undefined) _transform = null;
 		if (_volume == undefined) _volume = 100;
@@ -1490,7 +1495,7 @@
 	 * close the default player, and trying to will throw an error.
 	 */
 	public function closeVideoPlayer(index:Number):VideoPlayer {
-		if (_vp[index] == undefined) return;
+		if (_vp[index] == undefined) return null;
 		if (index == 0) throw new VideoError(VideoError.DELETE_DEFAULT_PLAYER);
 		if (_visibleVP == index) visibleVideoPlayerIndex = 0;
 		if (_activeVP == index) activeVideoPlayerIndex = 0;
@@ -1498,6 +1503,7 @@
 		_vp[index].unloadMovie();
 		delete _vp[index];
 		_vp[index] = undefined;
+		return null;
 	}
 
 	//
@@ -2278,7 +2284,7 @@
 	 * @see UIManager#SEEK_BAR_INTERVAL_DEFAULT
 	 */
 	public function get seekBarInterval():Number {
-		if (_uiMgr != null && _uiMgr != undefined) _seekBarInterval = _uiMgr.seekBarInterval
+		if (_uiMgr != null && _uiMgr != undefined) _seekBarInterval = _uiMgr.seekBarInterval;
 		return _seekBarInterval;
 	}
 	public function set seekBarInterval(s:Number) {
@@ -2628,7 +2634,7 @@
 	 * @see UIManager#VOLUME_BAR_INTERVAL_DEFAULT
 	 */
 	public function get volumeBarInterval():Number {
-		if (_uiMgr != null && _uiMgr != undefined) _volumeBarInterval = _uiMgr.volumeBarInterval
+		if (_uiMgr != null && _uiMgr != undefined) _volumeBarInterval = _uiMgr.volumeBarInterval;
 		return _volumeBarInterval;
 	}
 	public function set volumeBarInterval(s:Number) {
diff -Naur Original/mx/video/INCManager.as Final/mx/video/INCManager.as
--- Original/mx/video/INCManager.as	2005-07-19 04:52:12.000000000 +0800
+++ Final/mx/video/INCManager.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,11 +1,11 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2004-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
 
-import mx.video.*;
+import mx.video.VideoPlayer;
 
 /**
  * <p>Creates <code>NetConnection</code> for <code>VideoPlayer</code>, a
diff -Naur Original/mx/video/NCManager.as Final/mx/video/NCManager.as
--- Original/mx/video/NCManager.as	2005-08-31 04:42:56.000000000 +0800
+++ Final/mx/video/NCManager.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,11 +1,14 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2004-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
 
-import mx.video.*;
+import mx.video.INCManager;
+import mx.video.SMILManager;
+import mx.video.VideoError;
+import mx.video.VideoPlayer;
 
 /**
  * <p>Creates <code>NetConnection</code> for <code>VideoPlayer</code>, a
@@ -21,7 +24,7 @@
 
 class mx.video.NCManager implements INCManager {
 
-	#include "ComponentVersion.as"
+//#include "ComponentVersion.as"
 
 	// my VideoPlayer
 	private var _owner:VideoPlayer;
@@ -387,7 +390,7 @@
 					throw new VideoError(VideoError.INVALID_XML, "Base RTMP URL must include application name: " + url);
 				}
 				if (_smilMgr.baseURLAttr.length > 1) {
-					var parseResults:Object = parseURL(_smilMgr.baseURLAttr[1]);
+					parseResults = parseURL(_smilMgr.baseURLAttr[1]);
 					if (parseResults.serverName != undefined) {
 						fallbackServerName = parseResults.serverName;
 					}
@@ -662,10 +665,10 @@
 			_tryNC[i].connIndex = i;
 			_tryNC[i].onBWDone = function(p_bw:Number):Void {
 				this.mc.onConnected(this, p_bw);
-			}
+			};
 			_tryNC[i].onBWCheck = function():Number {
 				return ++this.mc._payload;
-			}
+			};
 			_tryNC[i].onStatus = function(info:Object):Void { this.mc.connectOnStatus(this, info); };
 		}
 
@@ -976,7 +979,7 @@
 	{
 		var i:Number;
 		var l:Number = p_str.length;
-		var startIndex:Number = 0
+		var startIndex:Number = 0;
 		var endIndex:Number = l;
 		for (i = 0; i < l; i++) {
 			switch (p_str.charCodeAt(i)) {
diff -Naur Original/mx/video/SMILManager.as Final/mx/video/SMILManager.as
--- Original/mx/video/SMILManager.as	2005-07-02 03:27:18.000000000 +0800
+++ Final/mx/video/SMILManager.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2004-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -6,7 +6,8 @@
 //****************************************************************************
 
 import mx.utils.Delegate;
-import mx.video.*;
+import mx.video.INCManager;
+import mx.video.VideoError;
 
 /**
  * <p>Creates <code>NetConnection</code> for <code>VideoPlayer</code>, a
@@ -153,7 +154,7 @@
 
 class mx.video.SMILManager {
 
-	#include "ComponentVersion.as"
+//#include "ComponentVersion.as"
 
 	// INCManager to ping when done
 	private var _owner:INCManager;
@@ -339,7 +340,7 @@
 	 */
 	private function parseSwitch(parentNode:XMLNode):Void {
 		for (var i:Number = 0; i < parentNode.childNodes.length; i++) {
-			var node:XMLNode = parentNode.childNodes[i]
+			var node:XMLNode = parentNode.childNodes[i];
 			if (node.nodeType != ELEMENT_NODE) continue;
 			if (node.nodeName.toLowerCase() == "video" || node.nodeName.toLowerCase() == "ref") {
 				var videoObj:Object = parseVideo(node);
diff -Naur Original/mx/video/UIManager.as Final/mx/video/UIManager.as
--- Original/mx/video/UIManager.as	2005-08-27 05:09:30.000000000 +0800
+++ Final/mx/video/UIManager.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,12 +1,12 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2004-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
 
-import mx.utils.Delegate;
-import mx.video.*;
+import mx.video.FLVPlayback;
+import mx.video.VideoPlayer;
 
 /**
  * <p>Functions you can plugin to seek bar or volume bar with, to
@@ -57,7 +57,7 @@
  */
 class mx.video.UIManager {
 
-	#include "ComponentVersion.as"
+//#include "ComponentVersion.as"
 
 	static var PAUSE_BUTTON:Number = 0;
 	static var PLAY_BUTTON:Number = 1;
@@ -197,13 +197,13 @@
 		skinLoader = undefined;
 		layout_mc = undefined;
 		border_mc = undefined;
-		_seekBarIntervalID = 0
+		_seekBarIntervalID = 0;
 		_seekBarInterval = SEEK_BAR_INTERVAL_DEFAULT;
 		_seekBarScrubTolerance = SEEK_BAR_SCRUB_TOLERANCE_DEFAULT;
-		_volumeBarIntervalID = 0
+		_volumeBarIntervalID = 0;
 		_volumeBarInterval = VOLUME_BAR_INTERVAL_DEFAULT;
 		_volumeBarScrubTolerance = VOLUME_BAR_SCRUB_TOLERANCE_DEFAULT;
-		_bufferingDelayIntervalID = 0
+		_bufferingDelayIntervalID = 0;
 		_bufferingDelayInterval = BUFFERING_DELAY_INTERVAL_DEFAULT;
 		_bufferingOn = false;
 		_skinAutoHideIntervalID = 0;
@@ -539,7 +539,7 @@
 				} else {
 					controls[BUFFERING_BAR].onEnterFrame = function() {
 						this.uiMgr.finishAddBufferingBar();
-					}
+					};
 				}
 				break;
 			} // switch
@@ -574,11 +574,11 @@
 		ctrl.onRollOver = function() {
 			this.state = UIManager.OVER_STATE;
 			this.uiMgr.skinButtonControl(this);
-		}
+		};
 		ctrl.onRollOut = function() {
 			this.state = UIManager.UP_STATE;
 			this.uiMgr.skinButtonControl(this);
-		}
+		};
 
 		if (index == SEEK_BAR_HANDLE || index == VOLUME_BAR_HANDLE ) {
 			ctrl.onPress = function() {
@@ -589,17 +589,17 @@
 				this.state = UIManager.DOWN_STATE;
 				this.uiMgr.dispatchMessage(this);
 				this.uiMgr.skinButtonControl(this);
-			}
+			};
 			ctrl.onRelease = function() {
 				this.state = UIManager.OVER_STATE;
 				this.uiMgr.handleRelease(this.controlIndex);
 				this.uiMgr.skinButtonControl(this);
-			}
+			};
 			ctrl.onReleaseOutside = function() {
 				this.state = UIManager.UP_STATE;
 				this.uiMgr.handleRelease(this.controlIndex);
 				this.uiMgr.skinButtonControl(this);
-			}
+			};
 		} else {
 			ctrl.onPress = function() {
 				if (_root.focusManager) {
@@ -608,16 +608,16 @@
 				}
 				this.state = UIManager.DOWN_STATE;
 				this.uiMgr.skinButtonControl(this);
-			}
+			};
 			ctrl.onRelease = function() {
 				this.state = UIManager.OVER_STATE;
 				this.uiMgr.dispatchMessage(this);
 				this.uiMgr.skinButtonControl(this);
-			}
+			};
 			ctrl.onReleaseOutside = function() {
 				this.state = UIManager.UP_STATE;
 				this.uiMgr.skinButtonControl(this);
-			}
+			};
 		}
 		
 		
@@ -628,7 +628,7 @@
 		} else {
 			ctrl.onEnterFrame = function() {
 				this.uiMgr.skinButtonControl(this);
-			}
+			};
 		}
 
 		// set activeVideoPlayerIndex back to prev value
@@ -895,12 +895,12 @@
 		} else {
 			switch (index) {
 			case PLAY_PAUSE_BUTTON:
-				setupSkinStates(ctrl.play_mc)
-				setupSkinStates(ctrl.pause_mc)
+				setupSkinStates(ctrl.play_mc);
+				setupSkinStates(ctrl.pause_mc);
 				break;
 			case MUTE_BUTTON:
-				setupSkinStates(ctrl.on_mc)
-				setupSkinStates(ctrl.off_mc)
+				setupSkinStates(ctrl.on_mc);
+				setupSkinStates(ctrl.off_mc);
 				break;
 			case SEEK_BAR:
 			case VOLUME_BAR:
@@ -1069,7 +1069,7 @@
 		} else {
 			ctrl.onEnterFrame = function() {
 				this.uiMgr.finishAddBarControl(this.controlIndex);
-			}
+			};
 		}
 	}
 
@@ -1294,7 +1294,7 @@
 			// make a very long fill_mc that will always be long enough
 			if (fill.slideReveal) {
 				// place and size mask
-				mask._x = ctrl._x + ctrl.maskLeftMargin
+				mask._x = ctrl._x + ctrl.maskLeftMargin;
 				mask._y = ctrl._y + ctrl.maskTopMargin;
 				mask._width = ctrl._width - ctrl.maskRightMargin - ctrl.maskLeftMargin;
 				mask._height = ctrl._height - ctrl.maskTopMargin - ctrl.maskBottomMargin;
diff -Naur Original/mx/video/VideoError.as Final/mx/video/VideoError.as
--- Original/mx/video/VideoError.as	2005-06-05 08:17:28.000000000 +0800
+++ Final/mx/video/VideoError.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,15 +1,15 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2004-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
 //this product.
 //****************************************************************************
 
-import mx.video.*;
+
 
 class mx.video.VideoError extends Error {
 
-	#include "ComponentVersion.as"
+//#include "ComponentVersion.as"
 
 	private static var BASE_ERROR_CODE:Number = 1000;
 
diff -Naur Original/mx/video/VideoPlayer.as Final/mx/video/VideoPlayer.as
--- Original/mx/video/VideoPlayer.as	2005-08-26 09:26:30.000000000 +0800
+++ Final/mx/video/VideoPlayer.as	2008-01-06 05:12:37.000000000 +0900
@@ -1,4 +1,4 @@
-//****************************************************************************
+﻿//****************************************************************************
 //Copyright (C) 2004-2005 Macromedia, Inc. All Rights Reserved.
 //The following is Sample Code and is subject to all restrictions on
 //such code as contained in the End User License Agreement accompanying
@@ -6,7 +6,8 @@
 //****************************************************************************
 
 import mx.events.EventDispatcher;
-import mx.video.*;
+import mx.video.INCManager;
+import mx.video.VideoError;
 
 /**
  * <p>Event dispatched when <code>NetConnection</code> is closed,
@@ -119,7 +120,7 @@
 
 class mx.video.VideoPlayer extends MovieClip {
 
-	#include "ComponentVersion.as"
+//#include "ComponentVersion.as"
 
 	// public state constants
 
@@ -351,10 +352,10 @@
 	private var _rtmpDoStopAtEndIntervalID:Number;
 	private var _rtmpDoSeekIntervalID:Number;
 	private var _httpDoSeekIntervalID:Number;
-	private var _httpDoSeekCount:Number
+	private var _httpDoSeekCount:Number;
 	private var _finishAutoResizeIntervalID:Number;
 	private var _delayedBufferingIntervalID:Number;
-	private var _delayedBufferingInterval:Number
+	private var _delayedBufferingInterval:Number;
 
 	// default times for intervals
 	static var DEFAULT_UPDATE_TIME_INTERVAL:Number = 250;   // .25 seconds
@@ -1944,7 +1945,7 @@
 			ncMgrClassName = DEFAULT_INCMANAGER;
 		}
 		var ncMgrConstructor:Function = eval( (ncMgrClassName) );
-		_ncMgr = new ncMgrConstructor;
+		_ncMgr = new ncMgrConstructor();
 		_ncMgr.setVideoPlayer(this);
 	}
 
@@ -2366,7 +2367,7 @@
 			} else if (!_isLive) {
 				_currentPos = 0;
 				_play(0, 0);
-				setState(RESIZING)
+				setState(RESIZING);
 			} else if (_autoPlay) {
 				clearInterval(_finishAutoResizeIntervalID);
 				_finishAutoResizeIntervalID = setInterval(this, "finishAutoResize", FINISH_AUTO_RESIZE_INTERVAL);
diff -Naur Original/mx/xpath/FilterStack.as Final/mx/xpath/FilterStack.as
--- Original/mx/xpath/FilterStack.as	2005-07-27 07:08:34.000000000 +0800
+++ Final/mx/xpath/FilterStack.as	2008-01-06 05:12:37.000000000 +0900
@@ -41,7 +41,7 @@
 				if( parser.nextToken() == mx.utils.StringTokenParser.tkSymbol )
 					if( parser.token == "=" ) {
 						kind =parser.nextToken();
-						obj.value= parser.token
+						obj.value= parser.token;
 					}
 			}
 			else
@@ -55,7 +55,7 @@
 						if( parser.nextToken() == mx.utils.StringTokenParser.tkSymbol )
 							if( parser.token == "=" ) {
 								kind=parser.nextToken();
-								obj.value= parser.token
+								obj.value= parser.token;
 							}
 					} // if is a node compare
 				kind = parser.nextToken();
diff -Naur Original/mx/xpath/XPathAPI.as Final/mx/xpath/XPathAPI.as
--- Original/mx/xpath/XPathAPI.as	2005-07-27 07:08:34.000000000 +0800
+++ Final/mx/xpath/XPathAPI.as	2008-01-06 05:12:37.000000000 +0900
@@ -7,10 +7,10 @@
    Version:     2.0
 */
 
-import mx.xpath.FilterStack;
+import mx.utils.StringTokenParser;
 import mx.xpath.FilterExpr;
+import mx.xpath.FilterStack;
 import mx.xpath.NodePathInfo;
-import mx.utils.StringTokenParser;
 
 /**
   XPathAPI is a static class that provides the ability to perform XPath against a DOM.
@@ -441,7 +441,7 @@
 			// get all attributes of the node
 			var attrs:String="";
 			var currAttr:String;
-			for( var currAttr in node.attributes )
+			for( currAttr in node.attributes )
 				attrs += "@"+currAttr+ "='"+ node.attributes[currAttr]+ "' and ";
 			// get child nodes
 			var nodeValues:String = "";
